Index.PACKAGES = {"akka.pattern" : [], "akka.kafka.javadsl" : [{"name" : "akka.kafka.javadsl.Consumer", "shortDescription" : "Akka Stream connector for subscribing to Kafka topics.", "object" : "akka\/kafka\/javadsl\/Consumer$.html", "members_object" : [{"label" : "committableExternalSource", "tail" : "(consumer: ActorRef, subscription: ManualSubscription, groupId: String, commitTimeout: FiniteDuration): Source[CommittableMessage[K, V], Control]", "member" : "akka.kafka.javadsl.Consumer.committableExternalSource", "link" : "akka\/kafka\/javadsl\/Consumer$.html#committableExternalSource[K,V](consumer:akka.actor.ActorRef,subscription:akka.kafka.ManualSubscription,groupId:String,commitTimeout:scala.concurrent.duration.FiniteDuration):akka.stream.javadsl.Source[akka.kafka.ConsumerMessage.CommittableMessage[K,V],akka.kafka.javadsl.Consumer.Control]", "kind" : "def"}, {"label" : "plainExternalSource", "tail" : "(consumer: ActorRef, subscription: ManualSubscription): Source[ConsumerRecord[K, V], Control]", "member" : "akka.kafka.javadsl.Consumer.plainExternalSource", "link" : "akka\/kafka\/javadsl\/Consumer$.html#plainExternalSource[K,V](consumer:akka.actor.ActorRef,subscription:akka.kafka.ManualSubscription):akka.stream.javadsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.kafka.javadsl.Consumer.Control]", "kind" : "def"}, {"label" : "committablePartitionedSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: AutoSubscription): Source[Pair[TopicPartition, Source[CommittableMessage[K, V], NotUsed]], Control]", "member" : "akka.kafka.javadsl.Consumer.committablePartitionedSource", "link" : "akka\/kafka\/javadsl\/Consumer$.html#committablePartitionedSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.AutoSubscription):akka.stream.javadsl.Source[akka.japi.Pair[org.apache.kafka.common.TopicPartition,akka.stream.javadsl.Source[akka.kafka.ConsumerMessage.CommittableMessage[K,V],akka.NotUsed]],akka.kafka.javadsl.Consumer.Control]", "kind" : "def"}, {"label" : "plainPartitionedManualOffsetSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: AutoSubscription, getOffsetsOnAssign: Function[Set[TopicPartition], CompletionStage[Map[TopicPartition, Long]]], onRevoke: Consumer[Set[TopicPartition]]): Source[Pair[TopicPartition, Source[ConsumerRecord[K, V], NotUsed]], Control]", "member" : "akka.kafka.javadsl.Consumer.plainPartitionedManualOffsetSource", "link" : "akka\/kafka\/javadsl\/Consumer$.html#plainPartitionedManualOffsetSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.AutoSubscription,getOffsetsOnAssign:java.util.function.Function[java.util.Set[org.apache.kafka.common.TopicPartition],java.util.concurrent.CompletionStage[java.util.Map[org.apache.kafka.common.TopicPartition,Long]]],onRevoke:java.util.function.Consumer[java.util.Set[org.apache.kafka.common.TopicPartition]]):akka.stream.javadsl.Source[akka.japi.Pair[org.apache.kafka.common.TopicPartition,akka.stream.javadsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.NotUsed]],akka.kafka.javadsl.Consumer.Control]", "kind" : "def"}, {"label" : "plainPartitionedManualOffsetSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: AutoSubscription, getOffsetsOnAssign: Function[Set[TopicPartition], CompletionStage[Map[TopicPartition, Long]]]): Source[Pair[TopicPartition, Source[ConsumerRecord[K, V], NotUsed]], Control]", "member" : "akka.kafka.javadsl.Consumer.plainPartitionedManualOffsetSource", "link" : "akka\/kafka\/javadsl\/Consumer$.html#plainPartitionedManualOffsetSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.AutoSubscription,getOffsetsOnAssign:java.util.function.Function[java.util.Set[org.apache.kafka.common.TopicPartition],java.util.concurrent.CompletionStage[java.util.Map[org.apache.kafka.common.TopicPartition,Long]]]):akka.stream.javadsl.Source[akka.japi.Pair[org.apache.kafka.common.TopicPartition,akka.stream.javadsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.NotUsed]],akka.kafka.javadsl.Consumer.Control]", "kind" : "def"}, {"label" : "plainPartitionedSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: AutoSubscription): Source[Pair[TopicPartition, Source[ConsumerRecord[K, V], NotUsed]], Control]", "member" : "akka.kafka.javadsl.Consumer.plainPartitionedSource", "link" : "akka\/kafka\/javadsl\/Consumer$.html#plainPartitionedSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.AutoSubscription):akka.stream.javadsl.Source[akka.japi.Pair[org.apache.kafka.common.TopicPartition,akka.stream.javadsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.NotUsed]],akka.kafka.javadsl.Consumer.Control]", "kind" : "def"}, {"label" : "atMostOnceSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: Subscription): Source[ConsumerRecord[K, V], Control]", "member" : "akka.kafka.javadsl.Consumer.atMostOnceSource", "link" : "akka\/kafka\/javadsl\/Consumer$.html#atMostOnceSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.Subscription):akka.stream.javadsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.kafka.javadsl.Consumer.Control]", "kind" : "def"}, {"label" : "committableSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: Subscription): Source[CommittableMessage[K, V], Control]", "member" : "akka.kafka.javadsl.Consumer.committableSource", "link" : "akka\/kafka\/javadsl\/Consumer$.html#committableSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.Subscription):akka.stream.javadsl.Source[akka.kafka.ConsumerMessage.CommittableMessage[K,V],akka.kafka.javadsl.Consumer.Control]", "kind" : "def"}, {"label" : "plainSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: Subscription): Source[ConsumerRecord[K, V], Control]", "member" : "akka.kafka.javadsl.Consumer.plainSource", "link" : "akka\/kafka\/javadsl\/Consumer$.html#plainSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.Subscription):akka.stream.javadsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.kafka.javadsl.Consumer.Control]", "kind" : "def"}, {"label" : "createDrainingControl", "tail" : "(pair: Pair[Control, CompletionStage[T]]): DrainingControl[T]", "member" : "akka.kafka.javadsl.Consumer.createDrainingControl", "link" : "akka\/kafka\/javadsl\/Consumer$.html#createDrainingControl[T](pair:akka.japi.Pair[akka.kafka.javadsl.Consumer.Control,java.util.concurrent.CompletionStage[T]]):akka.kafka.javadsl.Consumer.DrainingControl[T]", "kind" : "def"}, {"label" : "DrainingControl", "tail" : "", "member" : "akka.kafka.javadsl.Consumer.DrainingControl", "link" : "akka\/kafka\/javadsl\/Consumer$.html#DrainingControl[T]extendsConsumer.Control", "kind" : "final class"}, {"label" : "Control", "tail" : "", "member" : "akka.kafka.javadsl.Consumer.Control", "link" : "akka\/kafka\/javadsl\/Consumer$.html#ControlextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/javadsl\/Consumer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/javadsl\/Consumer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/javadsl\/Consumer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/javadsl\/Consumer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/javadsl\/Consumer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/javadsl\/Consumer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/javadsl\/Consumer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/javadsl\/Consumer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/javadsl\/Consumer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/javadsl\/Consumer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/javadsl\/Consumer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/javadsl\/Consumer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/javadsl\/Consumer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/javadsl\/Consumer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/javadsl\/Consumer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/javadsl\/Consumer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/javadsl\/Consumer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/javadsl\/Consumer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/javadsl\/Consumer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.kafka.javadsl.Producer", "shortDescription" : "Akka Stream connector for publishing messages to Kafka topics.", "object" : "akka\/kafka\/javadsl\/Producer$.html", "members_object" : [{"label" : "flexiFlow", "tail" : "(settings: ProducerSettings[K, V], producer: Producer[K, V]): Flow[Envelope[K, V, PassThrough], Results[K, V, PassThrough], NotUsed]", "member" : "akka.kafka.javadsl.Producer.flexiFlow", "link" : "akka\/kafka\/javadsl\/Producer$.html#flexiFlow[K,V,PassThrough](settings:akka.kafka.ProducerSettings[K,V],producer:org.apache.kafka.clients.producer.Producer[K,V]):akka.stream.javadsl.Flow[akka.kafka.ProducerMessage.Envelope[K,V,PassThrough],akka.kafka.ProducerMessage.Results[K,V,PassThrough],akka.NotUsed]", "kind" : "def"}, {"label" : "flow", "tail" : "(settings: ProducerSettings[K, V], producer: Producer[K, V]): Flow[Message[K, V, PassThrough], Result[K, V, PassThrough], NotUsed]", "member" : "akka.kafka.javadsl.Producer.flow", "link" : "akka\/kafka\/javadsl\/Producer$.html#flow[K,V,PassThrough](settings:akka.kafka.ProducerSettings[K,V],producer:org.apache.kafka.clients.producer.Producer[K,V]):akka.stream.javadsl.Flow[akka.kafka.ProducerMessage.Message[K,V,PassThrough],akka.kafka.ProducerMessage.Result[K,V,PassThrough],akka.NotUsed]", "kind" : "def"}, {"label" : "flexiFlow", "tail" : "(settings: ProducerSettings[K, V]): Flow[Envelope[K, V, PassThrough], Results[K, V, PassThrough], NotUsed]", "member" : "akka.kafka.javadsl.Producer.flexiFlow", "link" : "akka\/kafka\/javadsl\/Producer$.html#flexiFlow[K,V,PassThrough](settings:akka.kafka.ProducerSettings[K,V]):akka.stream.javadsl.Flow[akka.kafka.ProducerMessage.Envelope[K,V,PassThrough],akka.kafka.ProducerMessage.Results[K,V,PassThrough],akka.NotUsed]", "kind" : "def"}, {"label" : "flow", "tail" : "(settings: ProducerSettings[K, V]): Flow[Message[K, V, PassThrough], Result[K, V, PassThrough], NotUsed]", "member" : "akka.kafka.javadsl.Producer.flow", "link" : "akka\/kafka\/javadsl\/Producer$.html#flow[K,V,PassThrough](settings:akka.kafka.ProducerSettings[K,V]):akka.stream.javadsl.Flow[akka.kafka.ProducerMessage.Message[K,V,PassThrough],akka.kafka.ProducerMessage.Result[K,V,PassThrough],akka.NotUsed]", "kind" : "def"}, {"label" : "commitableSink", "tail" : "(settings: ProducerSettings[K, V], producer: Producer[K, V]): Sink[Envelope[K, V, Committable], CompletionStage[Done]]", "member" : "akka.kafka.javadsl.Producer.commitableSink", "link" : "akka\/kafka\/javadsl\/Producer$.html#commitableSink[K,V](settings:akka.kafka.ProducerSettings[K,V],producer:org.apache.kafka.clients.producer.Producer[K,V]):akka.stream.javadsl.Sink[akka.kafka.ProducerMessage.Envelope[K,V,akka.kafka.ConsumerMessage.Committable],java.util.concurrent.CompletionStage[akka.Done]]", "kind" : "def"}, {"label" : "commitableSink", "tail" : "(settings: ProducerSettings[K, V]): Sink[IN, CompletionStage[Done]]", "member" : "akka.kafka.javadsl.Producer.commitableSink", "link" : "akka\/kafka\/javadsl\/Producer$.html#commitableSink[K,V,IN<:akka.kafka.ProducerMessage.Envelope[K,V,akka.kafka.ConsumerMessage.Committable]](settings:akka.kafka.ProducerSettings[K,V]):akka.stream.javadsl.Sink[IN,java.util.concurrent.CompletionStage[akka.Done]]", "kind" : "def"}, {"label" : "plainSink", "tail" : "(settings: ProducerSettings[K, V], producer: Producer[K, V]): Sink[ProducerRecord[K, V], CompletionStage[Done]]", "member" : "akka.kafka.javadsl.Producer.plainSink", "link" : "akka\/kafka\/javadsl\/Producer$.html#plainSink[K,V](settings:akka.kafka.ProducerSettings[K,V],producer:org.apache.kafka.clients.producer.Producer[K,V]):akka.stream.javadsl.Sink[org.apache.kafka.clients.producer.ProducerRecord[K,V],java.util.concurrent.CompletionStage[akka.Done]]", "kind" : "def"}, {"label" : "plainSink", "tail" : "(settings: ProducerSettings[K, V]): Sink[ProducerRecord[K, V], CompletionStage[Done]]", "member" : "akka.kafka.javadsl.Producer.plainSink", "link" : "akka\/kafka\/javadsl\/Producer$.html#plainSink[K,V](settings:akka.kafka.ProducerSettings[K,V]):akka.stream.javadsl.Sink[org.apache.kafka.clients.producer.ProducerRecord[K,V],java.util.concurrent.CompletionStage[akka.Done]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/javadsl\/Producer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/javadsl\/Producer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/javadsl\/Producer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/javadsl\/Producer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/javadsl\/Producer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/javadsl\/Producer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/javadsl\/Producer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/javadsl\/Producer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/javadsl\/Producer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/javadsl\/Producer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/javadsl\/Producer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/javadsl\/Producer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/javadsl\/Producer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/javadsl\/Producer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/javadsl\/Producer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/javadsl\/Producer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/javadsl\/Producer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/javadsl\/Producer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/javadsl\/Producer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.kafka.javadsl.Transactional", "shortDescription" : " Akka Stream connector to support transactions between Kafka topics.", "object" : "akka\/kafka\/javadsl\/Transactional$.html", "members_object" : [{"label" : "flow", "tail" : "(settings: ProducerSettings[K, V], transactionalId: String): Flow[IN, Results[K, V, PartitionOffset], NotUsed]", "member" : "akka.kafka.javadsl.Transactional.flow", "link" : "akka\/kafka\/javadsl\/Transactional$.html#flow[K,V,IN<:akka.kafka.ProducerMessage.Envelope[K,V,akka.kafka.ConsumerMessage.PartitionOffset]](settings:akka.kafka.ProducerSettings[K,V],transactionalId:String):akka.stream.javadsl.Flow[IN,akka.kafka.ProducerMessage.Results[K,V,akka.kafka.ConsumerMessage.PartitionOffset],akka.NotUsed]", "kind" : "def"}, {"label" : "sink", "tail" : "(settings: ProducerSettings[K, V], transactionalId: String): Sink[IN, CompletionStage[Done]]", "member" : "akka.kafka.javadsl.Transactional.sink", "link" : "akka\/kafka\/javadsl\/Transactional$.html#sink[K,V,IN<:akka.kafka.ProducerMessage.Envelope[K,V,akka.kafka.ConsumerMessage.PartitionOffset]](settings:akka.kafka.ProducerSettings[K,V],transactionalId:String):akka.stream.javadsl.Sink[IN,java.util.concurrent.CompletionStage[akka.Done]]", "kind" : "def"}, {"label" : "source", "tail" : "(consumerSettings: ConsumerSettings[K, V], subscription: Subscription): Source[TransactionalMessage[K, V], Control]", "member" : "akka.kafka.javadsl.Transactional.source", "link" : "akka\/kafka\/javadsl\/Transactional$.html#source[K,V](consumerSettings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.Subscription):akka.stream.javadsl.Source[akka.kafka.ConsumerMessage.TransactionalMessage[K,V],akka.kafka.javadsl.Consumer.Control]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/javadsl\/Transactional$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/javadsl\/Transactional$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/javadsl\/Transactional$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/javadsl\/Transactional$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/javadsl\/Transactional$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/javadsl\/Transactional$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/javadsl\/Transactional$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/javadsl\/Transactional$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/javadsl\/Transactional$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/javadsl\/Transactional$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/javadsl\/Transactional$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/javadsl\/Transactional$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/javadsl\/Transactional$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/javadsl\/Transactional$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/javadsl\/Transactional$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/javadsl\/Transactional$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/javadsl\/Transactional$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/javadsl\/Transactional$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/javadsl\/Transactional$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka" : [], "akka.kafka" : [{"name" : "akka.kafka.AutoSubscription", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/AutoSubscription.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/AutoSubscription.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/AutoSubscription.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/AutoSubscription.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/AutoSubscription.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/AutoSubscription.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/AutoSubscription.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/AutoSubscription.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/AutoSubscription.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/AutoSubscription.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/AutoSubscription.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/AutoSubscription.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/AutoSubscription.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/AutoSubscription.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/AutoSubscription.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/AutoSubscription.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/AutoSubscription.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/AutoSubscription.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/AutoSubscription.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRebalanceListener", "tail" : "(ref: ActorRef): AutoSubscription", "member" : "akka.kafka.AutoSubscription.withRebalanceListener", "link" : "akka\/kafka\/AutoSubscription.html#withRebalanceListener(ref:akka.actor.ActorRef):akka.kafka.AutoSubscription", "kind" : "abstract def"}, {"label" : "rebalanceListener", "tail" : "(): Option[ActorRef]", "member" : "akka.kafka.Subscription.rebalanceListener", "link" : "akka\/kafka\/AutoSubscription.html#rebalanceListener:Option[akka.actor.ActorRef]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "akka\/kafka\/AutoSubscription.html", "kind" : "trait"}, {"name" : "akka.kafka.CommitTimeoutException", "shortDescription" : "Calls to commitJavadsl and commitScaladsl will be failed with this exception ifKafka doesn't respond within commit-timeout", "members_class" : [{"member" : "akka.kafka.CommitTimeoutException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "akka\/kafka\/CommitTimeoutException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "akka\/kafka\/CommitTimeoutException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "akka\/kafka\/CommitTimeoutException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "akka\/kafka\/CommitTimeoutException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "akka\/kafka\/CommitTimeoutException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "akka\/kafka\/CommitTimeoutException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "akka\/kafka\/CommitTimeoutException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "akka\/kafka\/CommitTimeoutException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "akka\/kafka\/CommitTimeoutException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "akka\/kafka\/CommitTimeoutException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "akka\/kafka\/CommitTimeoutException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "akka\/kafka\/CommitTimeoutException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "akka\/kafka\/CommitTimeoutException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/CommitTimeoutException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/CommitTimeoutException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/CommitTimeoutException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/CommitTimeoutException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/CommitTimeoutException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/CommitTimeoutException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/CommitTimeoutException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/CommitTimeoutException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/CommitTimeoutException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/CommitTimeoutException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/CommitTimeoutException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/CommitTimeoutException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/CommitTimeoutException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/CommitTimeoutException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/CommitTimeoutException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/CommitTimeoutException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/CommitTimeoutException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/CommitTimeoutException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/kafka\/CommitTimeoutException.html", "kind" : "class"}, {"name" : "akka.kafka.ConsumerFailed", "shortDescription" : "Kafka consumer stages fail with this exception.", "members_class" : [{"member" : "akka.kafka.ConsumerFailed#<init>", "error" : "unsupported entity"}, {"member" : "akka.kafka.ConsumerFailed#<init>", "error" : "unsupported entity"}, {"member" : "akka.kafka.ConsumerFailed#<init>", "error" : "unsupported entity"}, {"member" : "akka.kafka.ConsumerFailed#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "akka\/kafka\/ConsumerFailed.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "akka\/kafka\/ConsumerFailed.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "akka\/kafka\/ConsumerFailed.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "akka\/kafka\/ConsumerFailed.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "akka\/kafka\/ConsumerFailed.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "akka\/kafka\/ConsumerFailed.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "akka\/kafka\/ConsumerFailed.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "akka\/kafka\/ConsumerFailed.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "akka\/kafka\/ConsumerFailed.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "akka\/kafka\/ConsumerFailed.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "akka\/kafka\/ConsumerFailed.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "akka\/kafka\/ConsumerFailed.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "akka\/kafka\/ConsumerFailed.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/ConsumerFailed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/ConsumerFailed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/ConsumerFailed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/ConsumerFailed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/ConsumerFailed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/ConsumerFailed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/ConsumerFailed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerFailed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerFailed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerFailed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/ConsumerFailed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/ConsumerFailed.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/ConsumerFailed.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/ConsumerFailed.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/ConsumerFailed.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/ConsumerFailed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/ConsumerFailed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/ConsumerFailed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/kafka\/ConsumerFailed.html", "kind" : "class"}, {"name" : "akka.kafka.ConsumerMessage", "shortDescription" : "Classes that are used in both javadsl.Consumer andscaladsl.Consumer.", "object" : "akka\/kafka\/ConsumerMessage$.html", "members_object" : [{"label" : "CommittableOffsetBatch", "tail" : "", "member" : "akka.kafka.ConsumerMessage.CommittableOffsetBatch", "link" : "akka\/kafka\/ConsumerMessage$.html#CommittableOffsetBatchextendsConsumerMessage.Committable", "kind" : "trait"}, {"label" : "createCommittableOffsetBatch", "tail" : "(offsets: List[CommittableOffset]): CommittableOffsetBatch", "member" : "akka.kafka.ConsumerMessage.createCommittableOffsetBatch", "link" : "akka\/kafka\/ConsumerMessage$.html#createCommittableOffsetBatch(offsets:java.util.List[akka.kafka.ConsumerMessage.CommittableOffset]):akka.kafka.ConsumerMessage.CommittableOffsetBatch", "kind" : "def"}, {"label" : "createCommittableOffsetBatch", "tail" : "(first: CommittableOffset): CommittableOffsetBatch", "member" : "akka.kafka.ConsumerMessage.createCommittableOffsetBatch", "link" : "akka\/kafka\/ConsumerMessage$.html#createCommittableOffsetBatch(first:akka.kafka.ConsumerMessage.CommittableOffset):akka.kafka.ConsumerMessage.CommittableOffsetBatch", "kind" : "def"}, {"label" : "emptyCommittableOffsetBatch", "tail" : ": CommittableOffsetBatch", "member" : "akka.kafka.ConsumerMessage.emptyCommittableOffsetBatch", "link" : "akka\/kafka\/ConsumerMessage$.html#emptyCommittableOffsetBatch:akka.kafka.ConsumerMessage.CommittableOffsetBatch", "kind" : "val"}, {"label" : "CommittableOffsetBatch", "tail" : "", "member" : "akka.kafka.ConsumerMessage.CommittableOffsetBatch", "link" : "akka\/kafka\/ConsumerMessage$.html#CommittableOffsetBatch", "kind" : "object"}, {"label" : "GroupTopicPartition", "tail" : "", "member" : "akka.kafka.ConsumerMessage.GroupTopicPartition", "link" : "akka\/kafka\/ConsumerMessage$.html#GroupTopicPartitionextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "PartitionOffset", "tail" : "", "member" : "akka.kafka.ConsumerMessage.PartitionOffset", "link" : "akka\/kafka\/ConsumerMessage$.html#PartitionOffsetextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "CommittableOffset", "tail" : "", "member" : "akka.kafka.ConsumerMessage.CommittableOffset", "link" : "akka\/kafka\/ConsumerMessage$.html#CommittableOffsetextendsConsumerMessage.Committable", "kind" : "trait"}, {"label" : "Committable", "tail" : "", "member" : "akka.kafka.ConsumerMessage.Committable", "link" : "akka\/kafka\/ConsumerMessage$.html#CommittableextendsAnyRef", "kind" : "trait"}, {"label" : "TransactionalMessage", "tail" : "", "member" : "akka.kafka.ConsumerMessage.TransactionalMessage", "link" : "akka\/kafka\/ConsumerMessage$.html#TransactionalMessage[K,V]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "CommittableMessage", "tail" : "", "member" : "akka.kafka.ConsumerMessage.CommittableMessage", "link" : "akka\/kafka\/ConsumerMessage$.html#CommittableMessage[K,V]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/ConsumerMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/ConsumerMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/ConsumerMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/ConsumerMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/ConsumerMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/ConsumerMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/ConsumerMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/ConsumerMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/ConsumerMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/ConsumerMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/ConsumerMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/ConsumerMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/ConsumerMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/ConsumerMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/ConsumerMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/ConsumerMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.kafka.ConsumerRebalanceEvent", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/ConsumerRebalanceEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "akka\/kafka\/ConsumerRebalanceEvent.html", "kind" : "trait"}, {"name" : "akka.kafka.ConsumerSettings", "shortDescription" : "", "object" : "akka\/kafka\/ConsumerSettings$.html", "members_class" : [{"label" : "createKafkaConsumer", "tail" : "(): Consumer[K, V]", "member" : "akka.kafka.ConsumerSettings.createKafkaConsumer", "link" : "akka\/kafka\/ConsumerSettings.html#createKafkaConsumer():org.apache.kafka.clients.consumer.Consumer[K,V]", "kind" : "def"}, {"label" : "withWaitClosePartition", "tail" : "(waitClosePartition: FiniteDuration): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withWaitClosePartition", "link" : "akka\/kafka\/ConsumerSettings.html#withWaitClosePartition(waitClosePartition:scala.concurrent.duration.FiniteDuration):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withWakeupDebug", "tail" : "(wakeupDebug: Boolean): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withWakeupDebug", "link" : "akka\/kafka\/ConsumerSettings.html#withWakeupDebug(wakeupDebug:Boolean):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withCommitRefreshInterval", "tail" : "(commitRefreshInterval: Duration): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withCommitRefreshInterval", "link" : "akka\/kafka\/ConsumerSettings.html#withCommitRefreshInterval(commitRefreshInterval:scala.concurrent.duration.Duration):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withMaxWakeups", "tail" : "(maxWakeups: Int): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withMaxWakeups", "link" : "akka\/kafka\/ConsumerSettings.html#withMaxWakeups(maxWakeups:Int):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withDispatcher", "tail" : "(dispatcher: String): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withDispatcher", "link" : "akka\/kafka\/ConsumerSettings.html#withDispatcher(dispatcher:String):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withWakeupTimeout", "tail" : "(wakeupTimeout: FiniteDuration): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withWakeupTimeout", "link" : "akka\/kafka\/ConsumerSettings.html#withWakeupTimeout(wakeupTimeout:scala.concurrent.duration.FiniteDuration):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withCommitWarning", "tail" : "(commitTimeWarning: FiniteDuration): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withCommitWarning", "link" : "akka\/kafka\/ConsumerSettings.html#withCommitWarning(commitTimeWarning:scala.concurrent.duration.FiniteDuration):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withCommitTimeout", "tail" : "(commitTimeout: FiniteDuration): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withCommitTimeout", "link" : "akka\/kafka\/ConsumerSettings.html#withCommitTimeout(commitTimeout:scala.concurrent.duration.FiniteDuration):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withCloseTimeout", "tail" : "(closeTimeout: FiniteDuration): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withCloseTimeout", "link" : "akka\/kafka\/ConsumerSettings.html#withCloseTimeout(closeTimeout:scala.concurrent.duration.FiniteDuration):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withStopTimeout", "tail" : "(stopTimeout: FiniteDuration): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withStopTimeout", "link" : "akka\/kafka\/ConsumerSettings.html#withStopTimeout(stopTimeout:scala.concurrent.duration.FiniteDuration):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withPollInterval", "tail" : "(pollInterval: FiniteDuration): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withPollInterval", "link" : "akka\/kafka\/ConsumerSettings.html#withPollInterval(pollInterval:scala.concurrent.duration.FiniteDuration):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withPollTimeout", "tail" : "(pollTimeout: FiniteDuration): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withPollTimeout", "link" : "akka\/kafka\/ConsumerSettings.html#withPollTimeout(pollTimeout:scala.concurrent.duration.FiniteDuration):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "getProperty", "tail" : "(key: String): String", "member" : "akka.kafka.ConsumerSettings.getProperty", "link" : "akka\/kafka\/ConsumerSettings.html#getProperty(key:String):String", "kind" : "def"}, {"label" : "withProperty", "tail" : "(key: String, value: String): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withProperty", "link" : "akka\/kafka\/ConsumerSettings.html#withProperty(key:String,value:String):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withProperties", "tail" : "(properties: Map[String, String]): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withProperties", "link" : "akka\/kafka\/ConsumerSettings.html#withProperties(properties:java.util.Map[String,String]):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withProperties", "tail" : "(properties: (String, String)*): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withProperties", "link" : "akka\/kafka\/ConsumerSettings.html#withProperties(properties:(String,String)*):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withProperties", "tail" : "(properties: Map[String, String]): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withProperties", "link" : "akka\/kafka\/ConsumerSettings.html#withProperties(properties:Map[String,String]):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withGroupId", "tail" : "(groupId: String): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withGroupId", "link" : "akka\/kafka\/ConsumerSettings.html#withGroupId(groupId:String):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withClientId", "tail" : "(clientId: String): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withClientId", "link" : "akka\/kafka\/ConsumerSettings.html#withClientId(clientId:String):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "withBootstrapServers", "tail" : "(bootstrapServers: String): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.withBootstrapServers", "link" : "akka\/kafka\/ConsumerSettings.html#withBootstrapServers(bootstrapServers:String):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"member" : "akka.kafka.ConsumerSettings#<init>", "error" : "unsupported entity"}, {"label" : "waitClosePartition", "tail" : ": FiniteDuration", "member" : "akka.kafka.ConsumerSettings.waitClosePartition", "link" : "akka\/kafka\/ConsumerSettings.html#waitClosePartition:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "wakeupDebug", "tail" : ": Boolean", "member" : "akka.kafka.ConsumerSettings.wakeupDebug", "link" : "akka\/kafka\/ConsumerSettings.html#wakeupDebug:Boolean", "kind" : "val"}, {"label" : "commitTimeWarning", "tail" : ": FiniteDuration", "member" : "akka.kafka.ConsumerSettings.commitTimeWarning", "link" : "akka\/kafka\/ConsumerSettings.html#commitTimeWarning:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "dispatcher", "tail" : ": String", "member" : "akka.kafka.ConsumerSettings.dispatcher", "link" : "akka\/kafka\/ConsumerSettings.html#dispatcher:String", "kind" : "val"}, {"label" : "commitRefreshInterval", "tail" : ": Duration", "member" : "akka.kafka.ConsumerSettings.commitRefreshInterval", "link" : "akka\/kafka\/ConsumerSettings.html#commitRefreshInterval:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "maxWakeups", "tail" : ": Int", "member" : "akka.kafka.ConsumerSettings.maxWakeups", "link" : "akka\/kafka\/ConsumerSettings.html#maxWakeups:Int", "kind" : "val"}, {"label" : "wakeupTimeout", "tail" : ": FiniteDuration", "member" : "akka.kafka.ConsumerSettings.wakeupTimeout", "link" : "akka\/kafka\/ConsumerSettings.html#wakeupTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "commitTimeout", "tail" : ": FiniteDuration", "member" : "akka.kafka.ConsumerSettings.commitTimeout", "link" : "akka\/kafka\/ConsumerSettings.html#commitTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "closeTimeout", "tail" : ": FiniteDuration", "member" : "akka.kafka.ConsumerSettings.closeTimeout", "link" : "akka\/kafka\/ConsumerSettings.html#closeTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "stopTimeout", "tail" : ": FiniteDuration", "member" : "akka.kafka.ConsumerSettings.stopTimeout", "link" : "akka\/kafka\/ConsumerSettings.html#stopTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "pollTimeout", "tail" : ": FiniteDuration", "member" : "akka.kafka.ConsumerSettings.pollTimeout", "link" : "akka\/kafka\/ConsumerSettings.html#pollTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "pollInterval", "tail" : ": FiniteDuration", "member" : "akka.kafka.ConsumerSettings.pollInterval", "link" : "akka\/kafka\/ConsumerSettings.html#pollInterval:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "valueDeserializerOpt", "tail" : ": Option[Deserializer[V]]", "member" : "akka.kafka.ConsumerSettings.valueDeserializerOpt", "link" : "akka\/kafka\/ConsumerSettings.html#valueDeserializerOpt:Option[org.apache.kafka.common.serialization.Deserializer[V]]", "kind" : "val"}, {"label" : "keyDeserializerOpt", "tail" : ": Option[Deserializer[K]]", "member" : "akka.kafka.ConsumerSettings.keyDeserializerOpt", "link" : "akka\/kafka\/ConsumerSettings.html#keyDeserializerOpt:Option[org.apache.kafka.common.serialization.Deserializer[K]]", "kind" : "val"}, {"label" : "properties", "tail" : ": Map[String, String]", "member" : "akka.kafka.ConsumerSettings.properties", "link" : "akka\/kafka\/ConsumerSettings.html#properties:Map[String,String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/ConsumerSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/ConsumerSettings.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/ConsumerSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/ConsumerSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/ConsumerSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/ConsumerSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/ConsumerSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/ConsumerSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/ConsumerSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/ConsumerSettings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/ConsumerSettings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/ConsumerSettings.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/ConsumerSettings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/ConsumerSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/ConsumerSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/ConsumerSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "create", "tail" : "(config: Config, keyDeserializer: Deserializer[K], valueDeserializer: Deserializer[V]): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.create", "link" : "akka\/kafka\/ConsumerSettings$.html#create[K,V](config:com.typesafe.config.Config,keyDeserializer:org.apache.kafka.common.serialization.Deserializer[K],valueDeserializer:org.apache.kafka.common.serialization.Deserializer[V]):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "create", "tail" : "(system: ActorSystem, keyDeserializer: Deserializer[K], valueDeserializer: Deserializer[V]): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.create", "link" : "akka\/kafka\/ConsumerSettings$.html#create[K,V](system:akka.actor.ActorSystem,keyDeserializer:org.apache.kafka.common.serialization.Deserializer[K],valueDeserializer:org.apache.kafka.common.serialization.Deserializer[V]):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "create", "tail" : "(config: Config, keyDeserializer: Optional[Deserializer[K]], valueDeserializer: Optional[Deserializer[V]]): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.create", "link" : "akka\/kafka\/ConsumerSettings$.html#create[K,V](config:com.typesafe.config.Config,keyDeserializer:java.util.Optional[org.apache.kafka.common.serialization.Deserializer[K]],valueDeserializer:java.util.Optional[org.apache.kafka.common.serialization.Deserializer[V]]):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "create", "tail" : "(system: ActorSystem, keyDeserializer: Optional[Deserializer[K]], valueDeserializer: Optional[Deserializer[V]]): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.create", "link" : "akka\/kafka\/ConsumerSettings$.html#create[K,V](system:akka.actor.ActorSystem,keyDeserializer:java.util.Optional[org.apache.kafka.common.serialization.Deserializer[K]],valueDeserializer:java.util.Optional[org.apache.kafka.common.serialization.Deserializer[V]]):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config, keyDeserializer: Deserializer[K], valueDeserializer: Deserializer[V]): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.apply", "link" : "akka\/kafka\/ConsumerSettings$.html#apply[K,V](config:com.typesafe.config.Config,keyDeserializer:org.apache.kafka.common.serialization.Deserializer[K],valueDeserializer:org.apache.kafka.common.serialization.Deserializer[V]):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(system: ActorSystem, keyDeserializer: Deserializer[K], valueDeserializer: Deserializer[V]): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.apply", "link" : "akka\/kafka\/ConsumerSettings$.html#apply[K,V](system:akka.actor.ActorSystem,keyDeserializer:org.apache.kafka.common.serialization.Deserializer[K],valueDeserializer:org.apache.kafka.common.serialization.Deserializer[V]):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config, keyDeserializer: Option[Deserializer[K]], valueDeserializer: Option[Deserializer[V]]): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.apply", "link" : "akka\/kafka\/ConsumerSettings$.html#apply[K,V](config:com.typesafe.config.Config,keyDeserializer:Option[org.apache.kafka.common.serialization.Deserializer[K]],valueDeserializer:Option[org.apache.kafka.common.serialization.Deserializer[V]]):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(system: ActorSystem, keyDeserializer: Option[Deserializer[K]], valueDeserializer: Option[Deserializer[V]]): ConsumerSettings[K, V]", "member" : "akka.kafka.ConsumerSettings.apply", "link" : "akka\/kafka\/ConsumerSettings$.html#apply[K,V](system:akka.actor.ActorSystem,keyDeserializer:Option[org.apache.kafka.common.serialization.Deserializer[K]],valueDeserializer:Option[org.apache.kafka.common.serialization.Deserializer[V]]):akka.kafka.ConsumerSettings[K,V]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/ConsumerSettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/ConsumerSettings$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/ConsumerSettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/ConsumerSettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/ConsumerSettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/ConsumerSettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/ConsumerSettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerSettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerSettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ConsumerSettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/ConsumerSettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/ConsumerSettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/ConsumerSettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/ConsumerSettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/ConsumerSettings$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/ConsumerSettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/ConsumerSettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/ConsumerSettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/ConsumerSettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/kafka\/ConsumerSettings.html", "kind" : "object"}, {"name" : "akka.kafka.KafkaConsumerActor", "shortDescription" : "", "object" : "akka\/kafka\/KafkaConsumerActor$.html", "members_object" : [{"label" : "props", "tail" : "(settings: ConsumerSettings[K, V]): Props", "member" : "akka.kafka.KafkaConsumerActor.props", "link" : "akka\/kafka\/KafkaConsumerActor$.html#props[K,V](settings:akka.kafka.ConsumerSettings[K,V]):akka.actor.Props", "kind" : "def"}, {"label" : "StoppingException", "tail" : "", "member" : "akka.kafka.KafkaConsumerActor.StoppingException", "link" : "akka\/kafka\/KafkaConsumerActor$.html#StoppingExceptionextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "stop", "tail" : ": Stop.type", "member" : "akka.kafka.KafkaConsumerActor.stop", "link" : "akka\/kafka\/KafkaConsumerActor$.html#stop:akka.kafka.KafkaConsumerActor.Stop.type", "kind" : "val"}, {"label" : "Stop", "tail" : "", "member" : "akka.kafka.KafkaConsumerActor.Stop", "link" : "akka\/kafka\/KafkaConsumerActor$.html#Stop", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/KafkaConsumerActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/KafkaConsumerActor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/KafkaConsumerActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/KafkaConsumerActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/KafkaConsumerActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/KafkaConsumerActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/KafkaConsumerActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/KafkaConsumerActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/KafkaConsumerActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/KafkaConsumerActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/KafkaConsumerActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/KafkaConsumerActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/KafkaConsumerActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/KafkaConsumerActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/KafkaConsumerActor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/KafkaConsumerActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/KafkaConsumerActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/KafkaConsumerActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/KafkaConsumerActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.kafka.ManualSubscription", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/ManualSubscription.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/ManualSubscription.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/ManualSubscription.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/ManualSubscription.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/ManualSubscription.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/ManualSubscription.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/ManualSubscription.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ManualSubscription.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ManualSubscription.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ManualSubscription.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/ManualSubscription.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/ManualSubscription.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/ManualSubscription.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/ManualSubscription.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/ManualSubscription.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/ManualSubscription.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/ManualSubscription.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/ManualSubscription.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/ManualSubscription.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRebalanceListener", "tail" : "(ref: ActorRef): ManualSubscription", "member" : "akka.kafka.ManualSubscription.withRebalanceListener", "link" : "akka\/kafka\/ManualSubscription.html#withRebalanceListener(ref:akka.actor.ActorRef):akka.kafka.ManualSubscription", "kind" : "abstract def"}, {"label" : "rebalanceListener", "tail" : "(): Option[ActorRef]", "member" : "akka.kafka.Subscription.rebalanceListener", "link" : "akka\/kafka\/ManualSubscription.html#rebalanceListener:Option[akka.actor.ActorRef]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "akka\/kafka\/ManualSubscription.html", "kind" : "trait"}, {"name" : "akka.kafka.Metadata", "shortDescription" : "Messages for Kafka metadata fetching via KafkaConsumerActor.", "object" : "akka\/kafka\/Metadata$.html", "members_object" : [{"label" : "createGetCommitedOffset", "tail" : "(partition: TopicPartition): GetCommittedOffset", "member" : "akka.kafka.Metadata.createGetCommitedOffset", "link" : "akka\/kafka\/Metadata$.html#createGetCommitedOffset(partition:org.apache.kafka.common.TopicPartition):akka.kafka.Metadata.GetCommittedOffset", "kind" : "def"}, {"label" : "CommittedOffset", "tail" : "", "member" : "akka.kafka.Metadata.CommittedOffset", "link" : "akka\/kafka\/Metadata$.html#CommittedOffsetextendsMetadata.ResponsewithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "GetCommittedOffset", "tail" : "", "member" : "akka.kafka.Metadata.GetCommittedOffset", "link" : "akka\/kafka\/Metadata$.html#GetCommittedOffsetextendsMetadata.RequestwithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "createGetOffsetForTimes", "tail" : "(timestampsToSearch: Map[TopicPartition, Long]): GetOffsetsForTimes", "member" : "akka.kafka.Metadata.createGetOffsetForTimes", "link" : "akka\/kafka\/Metadata$.html#createGetOffsetForTimes(timestampsToSearch:java.util.Map[org.apache.kafka.common.TopicPartition,Long]):akka.kafka.Metadata.GetOffsetsForTimes", "kind" : "def"}, {"label" : "OffsetsForTimes", "tail" : "", "member" : "akka.kafka.Metadata.OffsetsForTimes", "link" : "akka\/kafka\/Metadata$.html#OffsetsForTimesextendsMetadata.ResponsewithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "GetOffsetsForTimes", "tail" : "", "member" : "akka.kafka.Metadata.GetOffsetsForTimes", "link" : "akka\/kafka\/Metadata$.html#GetOffsetsForTimesextendsMetadata.RequestwithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "createGetEndOffsets", "tail" : "(paritions: Set[TopicPartition]): GetEndOffsets", "member" : "akka.kafka.Metadata.createGetEndOffsets", "link" : "akka\/kafka\/Metadata$.html#createGetEndOffsets(paritions:java.util.Set[org.apache.kafka.common.TopicPartition]):akka.kafka.Metadata.GetEndOffsets", "kind" : "def"}, {"label" : "EndOffsets", "tail" : "", "member" : "akka.kafka.Metadata.EndOffsets", "link" : "akka\/kafka\/Metadata$.html#EndOffsetsextendsMetadata.ResponsewithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "GetEndOffsets", "tail" : "", "member" : "akka.kafka.Metadata.GetEndOffsets", "link" : "akka\/kafka\/Metadata$.html#GetEndOffsetsextendsMetadata.RequestwithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "createGetBeginningOffsets", "tail" : "(partitions: Set[TopicPartition]): GetBeginningOffsets", "member" : "akka.kafka.Metadata.createGetBeginningOffsets", "link" : "akka\/kafka\/Metadata$.html#createGetBeginningOffsets(partitions:java.util.Set[org.apache.kafka.common.TopicPartition]):akka.kafka.Metadata.GetBeginningOffsets", "kind" : "def"}, {"label" : "BeginningOffsets", "tail" : "", "member" : "akka.kafka.Metadata.BeginningOffsets", "link" : "akka\/kafka\/Metadata$.html#BeginningOffsetsextendsMetadata.ResponsewithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "GetBeginningOffsets", "tail" : "", "member" : "akka.kafka.Metadata.GetBeginningOffsets", "link" : "akka\/kafka\/Metadata$.html#GetBeginningOffsetsextendsMetadata.RequestwithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "createGetPartitionsFor", "tail" : "(topic: String): GetPartitionsFor", "member" : "akka.kafka.Metadata.createGetPartitionsFor", "link" : "akka\/kafka\/Metadata$.html#createGetPartitionsFor(topic:String):akka.kafka.Metadata.GetPartitionsFor", "kind" : "def"}, {"label" : "PartitionsFor", "tail" : "", "member" : "akka.kafka.Metadata.PartitionsFor", "link" : "akka\/kafka\/Metadata$.html#PartitionsForextendsMetadata.ResponsewithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "GetPartitionsFor", "tail" : "", "member" : "akka.kafka.Metadata.GetPartitionsFor", "link" : "akka\/kafka\/Metadata$.html#GetPartitionsForextendsMetadata.RequestwithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "createListTopics", "tail" : "(): ListTopics.type", "member" : "akka.kafka.Metadata.createListTopics", "link" : "akka\/kafka\/Metadata$.html#createListTopics:akka.kafka.Metadata.ListTopics.type", "kind" : "def"}, {"label" : "Topics", "tail" : "", "member" : "akka.kafka.Metadata.Topics", "link" : "akka\/kafka\/Metadata$.html#TopicsextendsMetadata.ResponsewithNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "final case class"}, {"label" : "ListTopics", "tail" : "", "member" : "akka.kafka.Metadata.ListTopics", "link" : "akka\/kafka\/Metadata$.html#ListTopics", "kind" : "object"}, {"label" : "Response", "tail" : "", "member" : "akka.kafka.Metadata.Response", "link" : "akka\/kafka\/Metadata$.html#ResponseextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Request", "tail" : "", "member" : "akka.kafka.Metadata.Request", "link" : "akka\/kafka\/Metadata$.html#RequestextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/Metadata$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/Metadata$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/Metadata$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/Metadata$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/Metadata$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/Metadata$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/Metadata$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/Metadata$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/Metadata$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/Metadata$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/Metadata$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/Metadata$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/Metadata$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/Metadata$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/Metadata$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/Metadata$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/Metadata$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/Metadata$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/Metadata$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.kafka.ProducerMessage", "shortDescription" : "Classes that are used in both javadsl.Producer andscaladsl.Producer.", "object" : "akka\/kafka\/ProducerMessage$.html", "members_object" : [{"label" : "PassThroughResult", "tail" : "", "member" : "akka.kafka.ProducerMessage.PassThroughResult", "link" : "akka\/kafka\/ProducerMessage$.html#PassThroughResult[K,V,PassThrough]extendsProducerMessage.Results[K,V,PassThrough]withProductwithSerializable", "kind" : "final case class"}, {"label" : "MultiResult", "tail" : "", "member" : "akka.kafka.ProducerMessage.MultiResult", "link" : "akka\/kafka\/ProducerMessage$.html#MultiResult[K,V,PassThrough]extendsProducerMessage.Results[K,V,PassThrough]withProductwithSerializable", "kind" : "final case class"}, {"label" : "MultiResultPart", "tail" : "", "member" : "akka.kafka.ProducerMessage.MultiResultPart", "link" : "akka\/kafka\/ProducerMessage$.html#MultiResultPart[K,V]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Result", "tail" : "", "member" : "akka.kafka.ProducerMessage.Result", "link" : "akka\/kafka\/ProducerMessage$.html#Result[K,V,PassThrough]extendsProducerMessage.Results[K,V,PassThrough]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Results", "tail" : "", "member" : "akka.kafka.ProducerMessage.Results", "link" : "akka\/kafka\/ProducerMessage$.html#Results[K,V,PassThrough]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "PassThroughMessage", "tail" : "", "member" : "akka.kafka.ProducerMessage.PassThroughMessage", "link" : "akka\/kafka\/ProducerMessage$.html#PassThroughMessage[K,V,+PassThrough]extendsProducerMessage.Envelope[K,V,PassThrough]withProductwithSerializable", "kind" : "final case class"}, {"label" : "MultiMessage", "tail" : "", "member" : "akka.kafka.ProducerMessage.MultiMessage", "link" : "akka\/kafka\/ProducerMessage$.html#MultiMessage[K,V,+PassThrough]extendsProducerMessage.Envelope[K,V,PassThrough]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Message", "tail" : "", "member" : "akka.kafka.ProducerMessage.Message", "link" : "akka\/kafka\/ProducerMessage$.html#Message[K,V,+PassThrough]extendsProducerMessage.Envelope[K,V,PassThrough]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Envelope", "tail" : "", "member" : "akka.kafka.ProducerMessage.Envelope", "link" : "akka\/kafka\/ProducerMessage$.html#Envelope[K,V,+PassThrough]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/ProducerMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/ProducerMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/ProducerMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/ProducerMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/ProducerMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/ProducerMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/ProducerMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ProducerMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ProducerMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ProducerMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/ProducerMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/ProducerMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/ProducerMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/ProducerMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/ProducerMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/ProducerMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/ProducerMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/ProducerMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/ProducerMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.kafka.ProducerSettings", "shortDescription" : "", "object" : "akka\/kafka\/ProducerSettings$.html", "members_class" : [{"label" : "lazyProducer", "tail" : ": KafkaProducer[K, V]", "member" : "akka.kafka.ProducerSettings.lazyProducer", "link" : "akka\/kafka\/ProducerSettings.html#lazyProducer:org.apache.kafka.clients.producer.KafkaProducer[K,V]", "kind" : "lazy val"}, {"label" : "createKafkaProducer", "tail" : "(): KafkaProducer[K, V]", "member" : "akka.kafka.ProducerSettings.createKafkaProducer", "link" : "akka\/kafka\/ProducerSettings.html#createKafkaProducer():org.apache.kafka.clients.producer.KafkaProducer[K,V]", "kind" : "def"}, {"label" : "withEosCommitInterval", "tail" : "(eosCommitInterval: FiniteDuration): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.withEosCommitInterval", "link" : "akka\/kafka\/ProducerSettings.html#withEosCommitInterval(eosCommitInterval:scala.concurrent.duration.FiniteDuration):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "withDispatcher", "tail" : "(dispatcher: String): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.withDispatcher", "link" : "akka\/kafka\/ProducerSettings.html#withDispatcher(dispatcher:String):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "withParallelism", "tail" : "(parallelism: Int): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.withParallelism", "link" : "akka\/kafka\/ProducerSettings.html#withParallelism(parallelism:Int):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "withCloseTimeout", "tail" : "(closeTimeout: FiniteDuration): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.withCloseTimeout", "link" : "akka\/kafka\/ProducerSettings.html#withCloseTimeout(closeTimeout:scala.concurrent.duration.FiniteDuration):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "withProperty", "tail" : "(key: String, value: String): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.withProperty", "link" : "akka\/kafka\/ProducerSettings.html#withProperty(key:String,value:String):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "withProperties", "tail" : "(properties: Map[String, String]): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.withProperties", "link" : "akka\/kafka\/ProducerSettings.html#withProperties(properties:java.util.Map[String,String]):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "withProperties", "tail" : "(properties: (String, String)*): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.withProperties", "link" : "akka\/kafka\/ProducerSettings.html#withProperties(properties:(String,String)*):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "withProperties", "tail" : "(properties: Map[String, String]): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.withProperties", "link" : "akka\/kafka\/ProducerSettings.html#withProperties(properties:Map[String,String]):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "withBootstrapServers", "tail" : "(bootstrapServers: String): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.withBootstrapServers", "link" : "akka\/kafka\/ProducerSettings.html#withBootstrapServers(bootstrapServers:String):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"member" : "akka.kafka.ProducerSettings#<init>", "error" : "unsupported entity"}, {"label" : "eosCommitInterval", "tail" : ": FiniteDuration", "member" : "akka.kafka.ProducerSettings.eosCommitInterval", "link" : "akka\/kafka\/ProducerSettings.html#eosCommitInterval:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "dispatcher", "tail" : ": String", "member" : "akka.kafka.ProducerSettings.dispatcher", "link" : "akka\/kafka\/ProducerSettings.html#dispatcher:String", "kind" : "val"}, {"label" : "parallelism", "tail" : ": Int", "member" : "akka.kafka.ProducerSettings.parallelism", "link" : "akka\/kafka\/ProducerSettings.html#parallelism:Int", "kind" : "val"}, {"label" : "closeTimeout", "tail" : ": FiniteDuration", "member" : "akka.kafka.ProducerSettings.closeTimeout", "link" : "akka\/kafka\/ProducerSettings.html#closeTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "valueSerializerOpt", "tail" : ": Option[Serializer[V]]", "member" : "akka.kafka.ProducerSettings.valueSerializerOpt", "link" : "akka\/kafka\/ProducerSettings.html#valueSerializerOpt:Option[org.apache.kafka.common.serialization.Serializer[V]]", "kind" : "val"}, {"label" : "keySerializerOpt", "tail" : ": Option[Serializer[K]]", "member" : "akka.kafka.ProducerSettings.keySerializerOpt", "link" : "akka\/kafka\/ProducerSettings.html#keySerializerOpt:Option[org.apache.kafka.common.serialization.Serializer[K]]", "kind" : "val"}, {"label" : "properties", "tail" : ": Map[String, String]", "member" : "akka.kafka.ProducerSettings.properties", "link" : "akka\/kafka\/ProducerSettings.html#properties:Map[String,String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/ProducerSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/ProducerSettings.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/ProducerSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/ProducerSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/ProducerSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/ProducerSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/ProducerSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ProducerSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ProducerSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ProducerSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/ProducerSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/ProducerSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/ProducerSettings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/ProducerSettings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/ProducerSettings.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/ProducerSettings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/ProducerSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/ProducerSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/ProducerSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "create", "tail" : "(config: Config, keySerializer: Serializer[K], valueSerializer: Serializer[V]): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.create", "link" : "akka\/kafka\/ProducerSettings$.html#create[K,V](config:com.typesafe.config.Config,keySerializer:org.apache.kafka.common.serialization.Serializer[K],valueSerializer:org.apache.kafka.common.serialization.Serializer[V]):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "create", "tail" : "(system: ActorSystem, keySerializer: Serializer[K], valueSerializer: Serializer[V]): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.create", "link" : "akka\/kafka\/ProducerSettings$.html#create[K,V](system:akka.actor.ActorSystem,keySerializer:org.apache.kafka.common.serialization.Serializer[K],valueSerializer:org.apache.kafka.common.serialization.Serializer[V]):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "create", "tail" : "(config: Config, keySerializer: Optional[Serializer[K]], valueSerializer: Optional[Serializer[V]]): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.create", "link" : "akka\/kafka\/ProducerSettings$.html#create[K,V](config:com.typesafe.config.Config,keySerializer:java.util.Optional[org.apache.kafka.common.serialization.Serializer[K]],valueSerializer:java.util.Optional[org.apache.kafka.common.serialization.Serializer[V]]):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "create", "tail" : "(system: ActorSystem, keySerializer: Optional[Serializer[K]], valueSerializer: Optional[Serializer[V]]): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.create", "link" : "akka\/kafka\/ProducerSettings$.html#create[K,V](system:akka.actor.ActorSystem,keySerializer:java.util.Optional[org.apache.kafka.common.serialization.Serializer[K]],valueSerializer:java.util.Optional[org.apache.kafka.common.serialization.Serializer[V]]):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config, keySerializer: Serializer[K], valueSerializer: Serializer[V]): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.apply", "link" : "akka\/kafka\/ProducerSettings$.html#apply[K,V](config:com.typesafe.config.Config,keySerializer:org.apache.kafka.common.serialization.Serializer[K],valueSerializer:org.apache.kafka.common.serialization.Serializer[V]):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(system: ActorSystem, keySerializer: Serializer[K], valueSerializer: Serializer[V]): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.apply", "link" : "akka\/kafka\/ProducerSettings$.html#apply[K,V](system:akka.actor.ActorSystem,keySerializer:org.apache.kafka.common.serialization.Serializer[K],valueSerializer:org.apache.kafka.common.serialization.Serializer[V]):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config, keySerializer: Option[Serializer[K]], valueSerializer: Option[Serializer[V]]): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.apply", "link" : "akka\/kafka\/ProducerSettings$.html#apply[K,V](config:com.typesafe.config.Config,keySerializer:Option[org.apache.kafka.common.serialization.Serializer[K]],valueSerializer:Option[org.apache.kafka.common.serialization.Serializer[V]]):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(system: ActorSystem, keySerializer: Option[Serializer[K]], valueSerializer: Option[Serializer[V]]): ProducerSettings[K, V]", "member" : "akka.kafka.ProducerSettings.apply", "link" : "akka\/kafka\/ProducerSettings$.html#apply[K,V](system:akka.actor.ActorSystem,keySerializer:Option[org.apache.kafka.common.serialization.Serializer[K]],valueSerializer:Option[org.apache.kafka.common.serialization.Serializer[V]]):akka.kafka.ProducerSettings[K,V]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/ProducerSettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/ProducerSettings$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/ProducerSettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/ProducerSettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/ProducerSettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/ProducerSettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/ProducerSettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ProducerSettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ProducerSettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/ProducerSettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/ProducerSettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/ProducerSettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/ProducerSettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/ProducerSettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/ProducerSettings$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/ProducerSettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/ProducerSettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/ProducerSettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/ProducerSettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/kafka\/ProducerSettings.html", "kind" : "object"}, {"name" : "akka.kafka.Subscription", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/Subscription.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/Subscription.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/Subscription.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/Subscription.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/Subscription.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/Subscription.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/Subscription.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/Subscription.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/Subscription.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/Subscription.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/Subscription.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/Subscription.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/Subscription.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/Subscription.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/Subscription.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/Subscription.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/Subscription.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/Subscription.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/Subscription.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRebalanceListener", "tail" : "(ref: ActorRef): Subscription", "member" : "akka.kafka.Subscription.withRebalanceListener", "link" : "akka\/kafka\/Subscription.html#withRebalanceListener(ref:akka.actor.ActorRef):akka.kafka.Subscription", "kind" : "abstract def"}, {"label" : "rebalanceListener", "tail" : "(): Option[ActorRef]", "member" : "akka.kafka.Subscription.rebalanceListener", "link" : "akka\/kafka\/Subscription.html#rebalanceListener:Option[akka.actor.ActorRef]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "akka\/kafka\/Subscription.html", "kind" : "trait"}, {"name" : "akka.kafka.Subscriptions", "shortDescription" : "", "object" : "akka\/kafka\/Subscriptions$.html", "members_object" : [{"label" : "assignmentOffsetsForTimes", "tail" : "(tp: TopicPartition, timestamp: Long): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignmentOffsetsForTimes", "link" : "akka\/kafka\/Subscriptions$.html#assignmentOffsetsForTimes(tp:org.apache.kafka.common.TopicPartition,timestamp:Long):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "assignmentOffsetsForTimes", "tail" : "(tps: Map[TopicPartition, Long]): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignmentOffsetsForTimes", "link" : "akka\/kafka\/Subscriptions$.html#assignmentOffsetsForTimes(tps:java.util.Map[org.apache.kafka.common.TopicPartition,Long]):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "assignmentOffsetsForTimes", "tail" : "(tps: (TopicPartition, Long)*): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignmentOffsetsForTimes", "link" : "akka\/kafka\/Subscriptions$.html#assignmentOffsetsForTimes(tps:(org.apache.kafka.common.TopicPartition,Long)*):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "assignmentOffsetsForTimes", "tail" : "(tps: Map[TopicPartition, Long]): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignmentOffsetsForTimes", "link" : "akka\/kafka\/Subscriptions$.html#assignmentOffsetsForTimes(tps:Map[org.apache.kafka.common.TopicPartition,Long]):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "assignmentWithOffset", "tail" : "(tp: TopicPartition, offset: Long): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignmentWithOffset", "link" : "akka\/kafka\/Subscriptions$.html#assignmentWithOffset(tp:org.apache.kafka.common.TopicPartition,offset:Long):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "assignmentWithOffset", "tail" : "(tps: Map[TopicPartition, Long]): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignmentWithOffset", "link" : "akka\/kafka\/Subscriptions$.html#assignmentWithOffset(tps:java.util.Map[org.apache.kafka.common.TopicPartition,Long]):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "assignmentWithOffset", "tail" : "(tps: (TopicPartition, Long)*): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignmentWithOffset", "link" : "akka\/kafka\/Subscriptions$.html#assignmentWithOffset(tps:(org.apache.kafka.common.TopicPartition,Long)*):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "assignmentWithOffset", "tail" : "(tps: Map[TopicPartition, Long]): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignmentWithOffset", "link" : "akka\/kafka\/Subscriptions$.html#assignmentWithOffset(tps:Map[org.apache.kafka.common.TopicPartition,Long]):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "assignment", "tail" : "(tps: Set[TopicPartition]): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignment", "link" : "akka\/kafka\/Subscriptions$.html#assignment(tps:java.util.Set[org.apache.kafka.common.TopicPartition]):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "assignment", "tail" : "(tps: TopicPartition*): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignment", "link" : "akka\/kafka\/Subscriptions$.html#assignment(tps:org.apache.kafka.common.TopicPartition*):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "assignment", "tail" : "(tps: Set[TopicPartition]): ManualSubscription", "member" : "akka.kafka.Subscriptions.assignment", "link" : "akka\/kafka\/Subscriptions$.html#assignment(tps:Set[org.apache.kafka.common.TopicPartition]):akka.kafka.ManualSubscription", "kind" : "def"}, {"label" : "topicPattern", "tail" : "(pattern: String): AutoSubscription", "member" : "akka.kafka.Subscriptions.topicPattern", "link" : "akka\/kafka\/Subscriptions$.html#topicPattern(pattern:String):akka.kafka.AutoSubscription", "kind" : "def"}, {"label" : "topics", "tail" : "(ts: Set[String]): AutoSubscription", "member" : "akka.kafka.Subscriptions.topics", "link" : "akka\/kafka\/Subscriptions$.html#topics(ts:java.util.Set[String]):akka.kafka.AutoSubscription", "kind" : "def"}, {"label" : "topics", "tail" : "(ts: String*): AutoSubscription", "member" : "akka.kafka.Subscriptions.topics", "link" : "akka\/kafka\/Subscriptions$.html#topics(ts:String*):akka.kafka.AutoSubscription", "kind" : "def"}, {"label" : "topics", "tail" : "(ts: Set[String]): AutoSubscription", "member" : "akka.kafka.Subscriptions.topics", "link" : "akka\/kafka\/Subscriptions$.html#topics(ts:Set[String]):akka.kafka.AutoSubscription", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/Subscriptions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/Subscriptions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/Subscriptions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/Subscriptions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/Subscriptions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/Subscriptions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/Subscriptions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/Subscriptions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/Subscriptions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/Subscriptions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/Subscriptions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/Subscriptions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/Subscriptions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/Subscriptions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/Subscriptions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/Subscriptions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/Subscriptions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/Subscriptions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/Subscriptions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.kafka.TopicPartitionsAssigned", "shortDescription" : "", "members_case class" : [{"member" : "akka.kafka.TopicPartitionsAssigned#<init>", "error" : "unsupported entity"}, {"label" : "topicPartitions", "tail" : ": Set[TopicPartition]", "member" : "akka.kafka.TopicPartitionsAssigned.topicPartitions", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#topicPartitions:Set[org.apache.kafka.common.TopicPartition]", "kind" : "val"}, {"label" : "sub", "tail" : ": Subscription", "member" : "akka.kafka.TopicPartitionsAssigned.sub", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#sub:akka.kafka.Subscription", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/TopicPartitionsAssigned.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/TopicPartitionsAssigned.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "akka\/kafka\/TopicPartitionsAssigned.html", "kind" : "case class"}, {"name" : "akka.kafka.TopicPartitionsRevoked", "shortDescription" : "", "members_case class" : [{"member" : "akka.kafka.TopicPartitionsRevoked#<init>", "error" : "unsupported entity"}, {"label" : "topicPartitions", "tail" : ": Set[TopicPartition]", "member" : "akka.kafka.TopicPartitionsRevoked.topicPartitions", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#topicPartitions:Set[org.apache.kafka.common.TopicPartition]", "kind" : "val"}, {"label" : "sub", "tail" : ": Subscription", "member" : "akka.kafka.TopicPartitionsRevoked.sub", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#sub:akka.kafka.Subscription", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/TopicPartitionsRevoked.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/TopicPartitionsRevoked.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "akka\/kafka\/TopicPartitionsRevoked.html", "kind" : "case class"}], "akka.kafka.internal" : [{"name" : "akka.kafka.internal.KafkaConsumerActor", "shortDescription" : "", "object" : "akka\/kafka\/internal\/KafkaConsumerActor$.html", "members_class" : [{"label" : "poll", "tail" : "(): Unit", "member" : "akka.kafka.internal.KafkaConsumerActor.poll", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#poll():Unit", "kind" : "def"}, {"label" : "schedulePollTask", "tail" : "(): Cancellable", "member" : "akka.kafka.internal.KafkaConsumerActor.schedulePollTask", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#schedulePollTask():akka.actor.Cancellable", "kind" : "def"}, {"label" : "scheduleFirstPollTask", "tail" : "(): Unit", "member" : "akka.kafka.internal.KafkaConsumerActor.scheduleFirstPollTask", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#scheduleFirstPollTask():Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.kafka.internal.KafkaConsumerActor.postStop", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.kafka.internal.KafkaConsumerActor.preStart", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#preStart():Unit", "kind" : "def"}, {"label" : "stopping", "tail" : "(): Receive", "member" : "akka.kafka.internal.KafkaConsumerActor.stopping", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#stopping:KafkaConsumerActor.this.Receive", "kind" : "def"}, {"label" : "checkOverlappingRequests", "tail" : "(updateType: String, fromStage: ActorRef, topics: Set[TopicPartition]): Unit", "member" : "akka.kafka.internal.KafkaConsumerActor.checkOverlappingRequests", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#checkOverlappingRequests(updateType:String,fromStage:akka.actor.ActorRef,topics:Set[org.apache.kafka.common.TopicPartition]):Unit", "kind" : "def"}, {"label" : "handleSubscription", "tail" : "(subscription: SubscriptionRequest): Unit", "member" : "akka.kafka.internal.KafkaConsumerActor.handleSubscription", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#handleSubscription(subscription:akka.kafka.internal.KafkaConsumerActor.Internal.SubscriptionRequest):Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "akka.kafka.internal.KafkaConsumerActor.receive", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#receive:KafkaConsumerActor.this.Receive", "kind" : "def"}, {"label" : "delayedPollInFlight", "tail" : ": Boolean", "member" : "akka.kafka.internal.KafkaConsumerActor.delayedPollInFlight", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#delayedPollInFlight:Boolean", "kind" : "var"}, {"label" : "stopInProgress", "tail" : ": Boolean", "member" : "akka.kafka.internal.KafkaConsumerActor.stopInProgress", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#stopInProgress:Boolean", "kind" : "var"}, {"label" : "wakeups", "tail" : ": Int", "member" : "akka.kafka.internal.KafkaConsumerActor.wakeups", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#wakeups:Int", "kind" : "var"}, {"label" : "commitRefreshDeadline", "tail" : ": Option[Deadline]", "member" : "akka.kafka.internal.KafkaConsumerActor.commitRefreshDeadline", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#commitRefreshDeadline:Option[scala.concurrent.duration.Deadline]", "kind" : "var"}, {"label" : "committedOffsets", "tail" : ": Map[TopicPartition, Long]", "member" : "akka.kafka.internal.KafkaConsumerActor.committedOffsets", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#committedOffsets:scala.collection.immutable.Map[org.apache.kafka.common.TopicPartition,Long]", "kind" : "var"}, {"label" : "commitRequestedOffsets", "tail" : ": Map[TopicPartition, Long]", "member" : "akka.kafka.internal.KafkaConsumerActor.commitRequestedOffsets", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#commitRequestedOffsets:scala.collection.immutable.Map[org.apache.kafka.common.TopicPartition,Long]", "kind" : "var"}, {"label" : "commitsInProgress", "tail" : ": Int", "member" : "akka.kafka.internal.KafkaConsumerActor.commitsInProgress", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#commitsInProgress:Int", "kind" : "var"}, {"label" : "subscriptions", "tail" : ": Set[SubscriptionRequest]", "member" : "akka.kafka.internal.KafkaConsumerActor.subscriptions", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#subscriptions:scala.collection.immutable.Set[akka.kafka.internal.KafkaConsumerActor.Internal.SubscriptionRequest]", "kind" : "var"}, {"label" : "consumer", "tail" : ": Consumer[K, V]", "member" : "akka.kafka.internal.KafkaConsumerActor.consumer", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#consumer:org.apache.kafka.clients.consumer.Consumer[K,V]", "kind" : "var"}, {"label" : "requestors", "tail" : ": Set[ActorRef]", "member" : "akka.kafka.internal.KafkaConsumerActor.requestors", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#requestors:scala.collection.immutable.Set[akka.actor.ActorRef]", "kind" : "var"}, {"label" : "requests", "tail" : ": Map[ActorRef, RequestMessages]", "member" : "akka.kafka.internal.KafkaConsumerActor.requests", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#requests:scala.collection.immutable.Map[akka.actor.ActorRef,akka.kafka.internal.KafkaConsumerActor.Internal.RequestMessages]", "kind" : "var"}, {"label" : "currentPollTask", "tail" : ": Cancellable", "member" : "akka.kafka.internal.KafkaConsumerActor.currentPollTask", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#currentPollTask:akka.actor.Cancellable", "kind" : "var"}, {"label" : "pollInterval", "tail" : "(): FiniteDuration", "member" : "akka.kafka.internal.KafkaConsumerActor.pollInterval", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#pollInterval():scala.concurrent.duration.FiniteDuration", "kind" : "def"}, {"label" : "pollTimeout", "tail" : "(): FiniteDuration", "member" : "akka.kafka.internal.KafkaConsumerActor.pollTimeout", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#pollTimeout():scala.concurrent.duration.FiniteDuration", "kind" : "def"}, {"label" : "delayedPollMsg", "tail" : ": Poll[K, V]", "member" : "akka.kafka.internal.KafkaConsumerActor.delayedPollMsg", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#delayedPollMsg:akka.kafka.internal.KafkaConsumerActor.Internal.Poll[K,V]", "kind" : "val"}, {"label" : "pollMsg", "tail" : ": Poll[K, V]", "member" : "akka.kafka.internal.KafkaConsumerActor.pollMsg", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#pollMsg:akka.kafka.internal.KafkaConsumerActor.Internal.Poll[K,V]", "kind" : "val"}, {"member" : "akka.kafka.internal.KafkaConsumerActor#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(): LoggingAdapter", "member" : "akka.actor.ActorLogging.log", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#log:akka.event.LoggingAdapter", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/internal\/KafkaConsumerActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "rebalanceListener", "tail" : "(onAssign: (Set[TopicPartition]) â‡’ Unit, onRevoke: (Set[TopicPartition]) â‡’ Unit): ListenerCallbacks", "member" : "akka.kafka.internal.KafkaConsumerActor.rebalanceListener", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#rebalanceListener(onAssign:Set[org.apache.kafka.common.TopicPartition]=>Unit,onRevoke:Set[org.apache.kafka.common.TopicPartition]=>Unit):akka.kafka.internal.KafkaConsumerActor.ListenerCallbacks", "kind" : "def"}, {"label" : "ListenerCallbacks", "tail" : "", "member" : "akka.kafka.internal.KafkaConsumerActor.ListenerCallbacks", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#ListenerCallbacksextendsNoSerializationVerificationNeededwithProductwithSerializable", "kind" : "case class"}, {"label" : "Internal", "tail" : "", "member" : "akka.kafka.internal.KafkaConsumerActor.Internal", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#Internal", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/internal\/KafkaConsumerActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/kafka\/internal\/KafkaConsumerActor.html", "kind" : "object"}], "akka.kafka.scaladsl" : [{"name" : "akka.kafka.scaladsl.Consumer", "shortDescription" : "Akka Stream connector for subscribing to Kafka topics.", "object" : "akka\/kafka\/scaladsl\/Consumer$.html", "members_object" : [{"label" : "committableExternalSource", "tail" : "(consumer: ActorRef, subscription: ManualSubscription, groupId: String, commitTimeout: FiniteDuration): Source[CommittableMessage[K, V], Control]", "member" : "akka.kafka.scaladsl.Consumer.committableExternalSource", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#committableExternalSource[K,V](consumer:akka.actor.ActorRef,subscription:akka.kafka.ManualSubscription,groupId:String,commitTimeout:scala.concurrent.duration.FiniteDuration):akka.stream.scaladsl.Source[akka.kafka.ConsumerMessage.CommittableMessage[K,V],akka.kafka.scaladsl.Consumer.Control]", "kind" : "def"}, {"label" : "plainExternalSource", "tail" : "(consumer: ActorRef, subscription: ManualSubscription): Source[ConsumerRecord[K, V], Control]", "member" : "akka.kafka.scaladsl.Consumer.plainExternalSource", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#plainExternalSource[K,V](consumer:akka.actor.ActorRef,subscription:akka.kafka.ManualSubscription):akka.stream.scaladsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.kafka.scaladsl.Consumer.Control]", "kind" : "def"}, {"label" : "committablePartitionedSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: AutoSubscription): Source[(TopicPartition, Source[CommittableMessage[K, V], NotUsed]), Control]", "member" : "akka.kafka.scaladsl.Consumer.committablePartitionedSource", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#committablePartitionedSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.AutoSubscription):akka.stream.scaladsl.Source[(org.apache.kafka.common.TopicPartition,akka.stream.scaladsl.Source[akka.kafka.ConsumerMessage.CommittableMessage[K,V],akka.NotUsed]),akka.kafka.scaladsl.Consumer.Control]", "kind" : "def"}, {"label" : "plainPartitionedManualOffsetSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: AutoSubscription, getOffsetsOnAssign: (Set[TopicPartition]) â‡’ Future[Map[TopicPartition, Long]], onRevoke: (Set[TopicPartition]) â‡’ Unit): Source[(TopicPartition, Source[ConsumerRecord[K, V], NotUsed]), Control]", "member" : "akka.kafka.scaladsl.Consumer.plainPartitionedManualOffsetSource", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#plainPartitionedManualOffsetSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.AutoSubscription,getOffsetsOnAssign:Set[org.apache.kafka.common.TopicPartition]=>scala.concurrent.Future[Map[org.apache.kafka.common.TopicPartition,Long]],onRevoke:Set[org.apache.kafka.common.TopicPartition]=>Unit):akka.stream.scaladsl.Source[(org.apache.kafka.common.TopicPartition,akka.stream.scaladsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.NotUsed]),akka.kafka.scaladsl.Consumer.Control]", "kind" : "def"}, {"label" : "plainPartitionedSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: AutoSubscription): Source[(TopicPartition, Source[ConsumerRecord[K, V], NotUsed]), Control]", "member" : "akka.kafka.scaladsl.Consumer.plainPartitionedSource", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#plainPartitionedSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.AutoSubscription):akka.stream.scaladsl.Source[(org.apache.kafka.common.TopicPartition,akka.stream.scaladsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.NotUsed]),akka.kafka.scaladsl.Consumer.Control]", "kind" : "def"}, {"label" : "atMostOnceSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: Subscription): Source[ConsumerRecord[K, V], Control]", "member" : "akka.kafka.scaladsl.Consumer.atMostOnceSource", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#atMostOnceSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.Subscription):akka.stream.scaladsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.kafka.scaladsl.Consumer.Control]", "kind" : "def"}, {"label" : "committableSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: Subscription): Source[CommittableMessage[K, V], Control]", "member" : "akka.kafka.scaladsl.Consumer.committableSource", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#committableSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.Subscription):akka.stream.scaladsl.Source[akka.kafka.ConsumerMessage.CommittableMessage[K,V],akka.kafka.scaladsl.Consumer.Control]", "kind" : "def"}, {"label" : "plainSource", "tail" : "(settings: ConsumerSettings[K, V], subscription: Subscription): Source[ConsumerRecord[K, V], Control]", "member" : "akka.kafka.scaladsl.Consumer.plainSource", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#plainSource[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.Subscription):akka.stream.scaladsl.Source[org.apache.kafka.clients.consumer.ConsumerRecord[K,V],akka.kafka.scaladsl.Consumer.Control]", "kind" : "def"}, {"label" : "DrainingControl", "tail" : "", "member" : "akka.kafka.scaladsl.Consumer.DrainingControl", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#DrainingControl", "kind" : "object"}, {"label" : "DrainingControl", "tail" : "", "member" : "akka.kafka.scaladsl.Consumer.DrainingControl", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#DrainingControl[T]extendsConsumer.Control", "kind" : "final class"}, {"label" : "Control", "tail" : "", "member" : "akka.kafka.scaladsl.Consumer.Control", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#ControlextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/scaladsl\/Consumer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/scaladsl\/Consumer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.kafka.scaladsl.Producer", "shortDescription" : "Akka Stream connector for publishing messages to Kafka topics.", "object" : "akka\/kafka\/scaladsl\/Producer$.html", "members_object" : [{"label" : "flexiFlow", "tail" : "(settings: ProducerSettings[K, V], producer: Producer[K, V]): Flow[Envelope[K, V, PassThrough], Results[K, V, PassThrough], NotUsed]", "member" : "akka.kafka.scaladsl.Producer.flexiFlow", "link" : "akka\/kafka\/scaladsl\/Producer$.html#flexiFlow[K,V,PassThrough](settings:akka.kafka.ProducerSettings[K,V],producer:org.apache.kafka.clients.producer.Producer[K,V]):akka.stream.scaladsl.Flow[akka.kafka.ProducerMessage.Envelope[K,V,PassThrough],akka.kafka.ProducerMessage.Results[K,V,PassThrough],akka.NotUsed]", "kind" : "def"}, {"label" : "flow", "tail" : "(settings: ProducerSettings[K, V], producer: Producer[K, V]): Flow[Message[K, V, PassThrough], Result[K, V, PassThrough], NotUsed]", "member" : "akka.kafka.scaladsl.Producer.flow", "link" : "akka\/kafka\/scaladsl\/Producer$.html#flow[K,V,PassThrough](settings:akka.kafka.ProducerSettings[K,V],producer:org.apache.kafka.clients.producer.Producer[K,V]):akka.stream.scaladsl.Flow[akka.kafka.ProducerMessage.Message[K,V,PassThrough],akka.kafka.ProducerMessage.Result[K,V,PassThrough],akka.NotUsed]", "kind" : "def"}, {"label" : "flexiFlow", "tail" : "(settings: ProducerSettings[K, V]): Flow[Envelope[K, V, PassThrough], Results[K, V, PassThrough], NotUsed]", "member" : "akka.kafka.scaladsl.Producer.flexiFlow", "link" : "akka\/kafka\/scaladsl\/Producer$.html#flexiFlow[K,V,PassThrough](settings:akka.kafka.ProducerSettings[K,V]):akka.stream.scaladsl.Flow[akka.kafka.ProducerMessage.Envelope[K,V,PassThrough],akka.kafka.ProducerMessage.Results[K,V,PassThrough],akka.NotUsed]", "kind" : "def"}, {"label" : "flow", "tail" : "(settings: ProducerSettings[K, V]): Flow[Message[K, V, PassThrough], Result[K, V, PassThrough], NotUsed]", "member" : "akka.kafka.scaladsl.Producer.flow", "link" : "akka\/kafka\/scaladsl\/Producer$.html#flow[K,V,PassThrough](settings:akka.kafka.ProducerSettings[K,V]):akka.stream.scaladsl.Flow[akka.kafka.ProducerMessage.Message[K,V,PassThrough],akka.kafka.ProducerMessage.Result[K,V,PassThrough],akka.NotUsed]", "kind" : "def"}, {"label" : "commitableSink", "tail" : "(settings: ProducerSettings[K, V], producer: Producer[K, V]): Sink[Envelope[K, V, Committable], Future[Done]]", "member" : "akka.kafka.scaladsl.Producer.commitableSink", "link" : "akka\/kafka\/scaladsl\/Producer$.html#commitableSink[K,V](settings:akka.kafka.ProducerSettings[K,V],producer:org.apache.kafka.clients.producer.Producer[K,V]):akka.stream.scaladsl.Sink[akka.kafka.ProducerMessage.Envelope[K,V,akka.kafka.ConsumerMessage.Committable],scala.concurrent.Future[akka.Done]]", "kind" : "def"}, {"label" : "commitableSink", "tail" : "(settings: ProducerSettings[K, V]): Sink[Envelope[K, V, Committable], Future[Done]]", "member" : "akka.kafka.scaladsl.Producer.commitableSink", "link" : "akka\/kafka\/scaladsl\/Producer$.html#commitableSink[K,V](settings:akka.kafka.ProducerSettings[K,V]):akka.stream.scaladsl.Sink[akka.kafka.ProducerMessage.Envelope[K,V,akka.kafka.ConsumerMessage.Committable],scala.concurrent.Future[akka.Done]]", "kind" : "def"}, {"label" : "plainSink", "tail" : "(settings: ProducerSettings[K, V], producer: Producer[K, V]): Sink[ProducerRecord[K, V], Future[Done]]", "member" : "akka.kafka.scaladsl.Producer.plainSink", "link" : "akka\/kafka\/scaladsl\/Producer$.html#plainSink[K,V](settings:akka.kafka.ProducerSettings[K,V],producer:org.apache.kafka.clients.producer.Producer[K,V]):akka.stream.scaladsl.Sink[org.apache.kafka.clients.producer.ProducerRecord[K,V],scala.concurrent.Future[akka.Done]]", "kind" : "def"}, {"label" : "plainSink", "tail" : "(settings: ProducerSettings[K, V]): Sink[ProducerRecord[K, V], Future[Done]]", "member" : "akka.kafka.scaladsl.Producer.plainSink", "link" : "akka\/kafka\/scaladsl\/Producer$.html#plainSink[K,V](settings:akka.kafka.ProducerSettings[K,V]):akka.stream.scaladsl.Sink[org.apache.kafka.clients.producer.ProducerRecord[K,V],scala.concurrent.Future[akka.Done]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/scaladsl\/Producer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/scaladsl\/Producer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/scaladsl\/Producer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/scaladsl\/Producer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/scaladsl\/Producer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/scaladsl\/Producer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/scaladsl\/Producer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/scaladsl\/Producer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/scaladsl\/Producer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/scaladsl\/Producer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/scaladsl\/Producer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/scaladsl\/Producer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/scaladsl\/Producer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/scaladsl\/Producer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/scaladsl\/Producer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/scaladsl\/Producer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/scaladsl\/Producer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/scaladsl\/Producer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/scaladsl\/Producer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.kafka.scaladsl.Transactional", "shortDescription" : "Akka Stream connector to support transactions between Kafka topics.", "object" : "akka\/kafka\/scaladsl\/Transactional$.html", "members_object" : [{"label" : "flow", "tail" : "(settings: ProducerSettings[K, V], transactionalId: String): Flow[Envelope[K, V, PartitionOffset], Results[K, V, PartitionOffset], NotUsed]", "member" : "akka.kafka.scaladsl.Transactional.flow", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#flow[K,V](settings:akka.kafka.ProducerSettings[K,V],transactionalId:String):akka.stream.scaladsl.Flow[akka.kafka.ProducerMessage.Envelope[K,V,akka.kafka.ConsumerMessage.PartitionOffset],akka.kafka.ProducerMessage.Results[K,V,akka.kafka.ConsumerMessage.PartitionOffset],akka.NotUsed]", "kind" : "def"}, {"label" : "sink", "tail" : "(settings: ProducerSettings[K, V], transactionalId: String): Sink[Envelope[K, V, PartitionOffset], Future[Done]]", "member" : "akka.kafka.scaladsl.Transactional.sink", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#sink[K,V](settings:akka.kafka.ProducerSettings[K,V],transactionalId:String):akka.stream.scaladsl.Sink[akka.kafka.ProducerMessage.Envelope[K,V,akka.kafka.ConsumerMessage.PartitionOffset],scala.concurrent.Future[akka.Done]]", "kind" : "def"}, {"label" : "source", "tail" : "(settings: ConsumerSettings[K, V], subscription: Subscription): Source[TransactionalMessage[K, V], Control]", "member" : "akka.kafka.scaladsl.Transactional.source", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#source[K,V](settings:akka.kafka.ConsumerSettings[K,V],subscription:akka.kafka.Subscription):akka.stream.scaladsl.Source[akka.kafka.ConsumerMessage.TransactionalMessage[K,V],akka.kafka.scaladsl.Consumer.Control]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/kafka\/scaladsl\/Transactional$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/kafka\/scaladsl\/Transactional$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};