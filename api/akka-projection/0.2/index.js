Index.PACKAGES = {"akka.projection.slick" : [{"name" : "akka.projection.slick.AtLeastOnceFlowSlickProjection", "trait" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withSaveOffset", "tail" : "(afterEnvelopes: Int, afterDuration: FiniteDuration): AtLeastOnceFlowSlickProjection[Envelope]", "member" : "akka.projection.slick.AtLeastOnceFlowSlickProjection.withSaveOffset", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#withSaveOffset(afterEnvelopes:Int,afterDuration:scala.concurrent.duration.FiniteDuration):akka.projection.slick.AtLeastOnceFlowSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtLeastOnceFlowSlickProjection[Envelope]", "member" : "akka.projection.slick.AtLeastOnceFlowSlickProjection.withStatusObserver", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.slick.AtLeastOnceFlowSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): AtLeastOnceFlowSlickProjection[Envelope]", "member" : "akka.projection.slick.AtLeastOnceFlowSlickProjection.withRestartBackoff", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.slick.AtLeastOnceFlowSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): AtLeastOnceFlowSlickProjection[Envelope]", "member" : "akka.projection.slick.AtLeastOnceFlowSlickProjection.withRestartBackoff", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.slick.AtLeastOnceFlowSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.slick.SlickProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/slick\/AtLeastOnceFlowSlickProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.slick.AtLeastOnceSlickProjection", "trait" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): AtLeastOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.AtLeastOnceSlickProjection.withRecoveryStrategy", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.slick.AtLeastOnceSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withSaveOffset", "tail" : "(afterEnvelopes: Int, afterDuration: FiniteDuration): AtLeastOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.AtLeastOnceSlickProjection.withSaveOffset", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#withSaveOffset(afterEnvelopes:Int,afterDuration:scala.concurrent.duration.FiniteDuration):akka.projection.slick.AtLeastOnceSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtLeastOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.AtLeastOnceSlickProjection.withStatusObserver", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.slick.AtLeastOnceSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): AtLeastOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.AtLeastOnceSlickProjection.withRestartBackoff", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.slick.AtLeastOnceSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): AtLeastOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.AtLeastOnceSlickProjection.withRestartBackoff", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.slick.AtLeastOnceSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.slick.SlickProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/slick\/AtLeastOnceSlickProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.slick.ExactlyOnceSlickProjection", "trait" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): ExactlyOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.ExactlyOnceSlickProjection.withRecoveryStrategy", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.slick.ExactlyOnceSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): ExactlyOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.ExactlyOnceSlickProjection.withStatusObserver", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.slick.ExactlyOnceSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): ExactlyOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.ExactlyOnceSlickProjection.withRestartBackoff", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.slick.ExactlyOnceSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): ExactlyOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.ExactlyOnceSlickProjection.withRestartBackoff", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.slick.ExactlyOnceSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.slick.SlickProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/slick\/ExactlyOnceSlickProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.slick.GroupedSlickProjection", "trait" : "akka\/projection\/slick\/GroupedSlickProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): GroupedSlickProjection[Envelope]", "member" : "akka.projection.slick.GroupedSlickProjection.withRecoveryStrategy", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.slick.GroupedSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withGroup", "tail" : "(groupAfterEnvelopes: Int, groupAfterDuration: FiniteDuration): GroupedSlickProjection[Envelope]", "member" : "akka.projection.slick.GroupedSlickProjection.withGroup", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#withGroup(groupAfterEnvelopes:Int,groupAfterDuration:scala.concurrent.duration.FiniteDuration):akka.projection.slick.GroupedSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): GroupedSlickProjection[Envelope]", "member" : "akka.projection.slick.GroupedSlickProjection.withStatusObserver", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.slick.GroupedSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): GroupedSlickProjection[Envelope]", "member" : "akka.projection.slick.GroupedSlickProjection.withRestartBackoff", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.slick.GroupedSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): GroupedSlickProjection[Envelope]", "member" : "akka.projection.slick.GroupedSlickProjection.withRestartBackoff", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.slick.GroupedSlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.slick.SlickProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/slick\/GroupedSlickProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.slick.SlickHandler", "object" : "akka\/projection\/slick\/SlickHandler$.html", "members_object" : [{"label" : "apply", "tail" : "(handler: (Envelope) => DBIO[Done]): SlickHandler[Envelope]", "member" : "akka.projection.slick.SlickHandler.apply", "link" : "akka\/projection\/slick\/SlickHandler$.html#apply[Envelope](handler:Envelope=>slick.dbio.DBIO[akka.Done]):akka.projection.slick.SlickHandler[Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/SlickHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/SlickHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/SlickHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/SlickHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/SlickHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/SlickHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/SlickHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/SlickHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/SlickHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/SlickHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/SlickHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/SlickHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/SlickHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/SlickHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/SlickHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/SlickHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/slick\/SlickHandler.html", "kind" : "object", "members_trait" : [{"label" : "stop", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.stop", "link" : "akka\/projection\/slick\/SlickHandler.html#stop():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "start", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.start", "link" : "akka\/projection\/slick\/SlickHandler.html#start():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/SlickHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/SlickHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/SlickHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/SlickHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/SlickHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/SlickHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/SlickHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/SlickHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/SlickHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/SlickHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/SlickHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/SlickHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/SlickHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/SlickHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/SlickHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/SlickHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(envelope: Envelope): DBIO[Done]", "member" : "akka.projection.slick.SlickHandler.process", "link" : "akka\/projection\/slick\/SlickHandler.html#process(envelope:Envelope):slick.dbio.DBIO[akka.Done]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.slick.SlickProjection", "object" : "akka\/projection\/slick\/SlickProjection$.html", "members_object" : [{"label" : "atLeastOnceFlow", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], databaseConfig: DatabaseConfig[P], handler: FlowWithContext[Envelope, Envelope, Done, Envelope, _])(arg0: ClassTag[P]): AtLeastOnceFlowSlickProjection[Envelope]", "member" : "akka.projection.slick.SlickProjection.atLeastOnceFlow", "link" : "akka\/projection\/slick\/SlickProjection$.html#atLeastOnceFlow[Offset,Envelope,P<:slick.jdbc.JdbcProfile](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],databaseConfig:slick.basic.DatabaseConfig[P],handler:akka.stream.scaladsl.FlowWithContext[Envelope,Envelope,akka.Done,Envelope,_])(implicitevidence$4:scala.reflect.ClassTag[P]):akka.projection.slick.AtLeastOnceFlowSlickProjection[Envelope]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], databaseConfig: DatabaseConfig[P], handler: SlickHandler[Seq[Envelope]])(arg0: ClassTag[P]): GroupedSlickProjection[Envelope]", "member" : "akka.projection.slick.SlickProjection.groupedWithin", "link" : "akka\/projection\/slick\/SlickProjection$.html#groupedWithin[Offset,Envelope,P<:slick.jdbc.JdbcProfile](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],databaseConfig:slick.basic.DatabaseConfig[P],handler:akka.projection.slick.SlickHandler[Seq[Envelope]])(implicitevidence$3:scala.reflect.ClassTag[P]):akka.projection.slick.GroupedSlickProjection[Envelope]", "kind" : "def"}, {"label" : "atLeastOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], databaseConfig: DatabaseConfig[P], handler: SlickHandler[Envelope])(arg0: ClassTag[P]): AtLeastOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.SlickProjection.atLeastOnce", "link" : "akka\/projection\/slick\/SlickProjection$.html#atLeastOnce[Offset,Envelope,P<:slick.jdbc.JdbcProfile](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],databaseConfig:slick.basic.DatabaseConfig[P],handler:akka.projection.slick.SlickHandler[Envelope])(implicitevidence$2:scala.reflect.ClassTag[P]):akka.projection.slick.AtLeastOnceSlickProjection[Envelope]", "kind" : "def"}, {"label" : "exactlyOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], databaseConfig: DatabaseConfig[P], handler: SlickHandler[Envelope])(arg0: ClassTag[P]): ExactlyOnceSlickProjection[Envelope]", "member" : "akka.projection.slick.SlickProjection.exactlyOnce", "link" : "akka\/projection\/slick\/SlickProjection$.html#exactlyOnce[Offset,Envelope,P<:slick.jdbc.JdbcProfile](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],databaseConfig:slick.basic.DatabaseConfig[P],handler:akka.projection.slick.SlickHandler[Envelope])(implicitevidence$1:scala.reflect.ClassTag[P]):akka.projection.slick.ExactlyOnceSlickProjection[Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/SlickProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/SlickProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/SlickProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/SlickProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/SlickProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/SlickProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/SlickProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/SlickProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/SlickProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/SlickProjection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/SlickProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/SlickProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/SlickProjection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/SlickProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/SlickProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/SlickProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/slick\/SlickProjection.html", "kind" : "object", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/SlickProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/SlickProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/SlickProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/SlickProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/SlickProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/SlickProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/SlickProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/SlickProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/SlickProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/SlickProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/SlickProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/SlickProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/SlickProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/SlickProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/SlickProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/SlickProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.slick.SlickProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/slick\/SlickProjection.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): SlickProjection[Envelope]", "member" : "akka.projection.slick.SlickProjection.withStatusObserver", "link" : "akka\/projection\/slick\/SlickProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.slick.SlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): SlickProjection[Envelope]", "member" : "akka.projection.slick.SlickProjection.withRestartBackoff", "link" : "akka\/projection\/slick\/SlickProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.slick.SlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): SlickProjection[Envelope]", "member" : "akka.projection.slick.SlickProjection.withRestartBackoff", "link" : "akka\/projection\/slick\/SlickProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.slick.SlickProjection[Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/slick\/SlickProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/slick\/SlickProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/slick\/SlickProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/slick\/SlickProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : "Factories of Projection where the offset is stored in a relational database table using Slick."}], "akka.projection.cassandra" : [], "akka.projection.javadsl" : [{"name" : "akka.projection.javadsl.Handler", "shortDescription" : "Implement this interface for the Envelope handler in the Projection.", "object" : "akka\/projection\/javadsl\/Handler$.html", "members_class" : [{"label" : "stop", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.Handler.stop", "link" : "akka\/projection\/javadsl\/Handler.html#stop():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "start", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.Handler.start", "link" : "akka\/projection\/javadsl\/Handler.html#start():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"member" : "akka.projection.javadsl.Handler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/Handler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/Handler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/Handler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/Handler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/Handler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/Handler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/Handler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/Handler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/Handler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/Handler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/Handler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/Handler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/Handler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/Handler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/Handler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/Handler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(envelope: Envelope): CompletionStage[Done]", "member" : "akka.projection.javadsl.Handler.process", "link" : "akka\/projection\/javadsl\/Handler.html#process(envelope:Envelope):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}], "members_object" : [{"label" : "fromFunction", "tail" : "(handler: (Envelope) => CompletionStage[Done]): Handler[Envelope]", "member" : "akka.projection.javadsl.Handler.fromFunction", "link" : "akka\/projection\/javadsl\/Handler$.html#fromFunction[Envelope](handler:Envelope=>java.util.concurrent.CompletionStage[akka.Done]):akka.projection.javadsl.Handler[Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/Handler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/Handler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/Handler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/Handler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/Handler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/Handler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/Handler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/Handler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/Handler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/Handler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/Handler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/Handler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/Handler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/Handler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/Handler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/Handler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/javadsl\/Handler.html", "kind" : "class"}, {"name" : "akka.projection.javadsl.HandlerLifecycle", "trait" : "akka\/projection\/javadsl\/HandlerLifecycle.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stop", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.HandlerLifecycle.stop", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#stop():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}, {"label" : "start", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.HandlerLifecycle.start", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#start():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.javadsl.ProjectionManagement", "shortDescription" : "", "object" : "akka\/projection\/javadsl\/ProjectionManagement$.html", "members_class" : [{"label" : "clearOffset", "tail" : "(projectionId: ProjectionId): CompletionStage[Done]", "member" : "akka.projection.javadsl.ProjectionManagement.clearOffset", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#clearOffset(projectionId:akka.projection.ProjectionId):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "updateOffset", "tail" : "(projectionId: ProjectionId, offset: Offset): CompletionStage[Done]", "member" : "akka.projection.javadsl.ProjectionManagement.updateOffset", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#updateOffset[Offset](projectionId:akka.projection.ProjectionId,offset:Offset):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "getOffset", "tail" : "(projectionId: ProjectionId): CompletionStage[Optional[Offset]]", "member" : "akka.projection.javadsl.ProjectionManagement.getOffset", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#getOffset[Offset](projectionId:akka.projection.ProjectionId):java.util.concurrent.CompletionStage[java.util.Optional[Offset]]", "kind" : "def"}, {"member" : "akka.projection.javadsl.ProjectionManagement#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "get", "tail" : "(system: ActorSystem[_]): ProjectionManagement", "member" : "akka.projection.javadsl.ProjectionManagement.get", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#get(system:akka.actor.typed.ActorSystem[_]):akka.projection.javadsl.ProjectionManagement", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/javadsl\/ProjectionManagement.html", "kind" : "class"}, {"name" : "akka.projection.javadsl.SourceProvider", "shortDescription" : "", "members_class" : [{"label" : "isOffsetMergeable", "tail" : "(): Boolean", "member" : "akka.projection.javadsl.SourceProvider.isOffsetMergeable", "link" : "akka\/projection\/javadsl\/SourceProvider.html#isOffsetMergeable:Boolean", "kind" : "def"}, {"label" : "verifyOffset", "tail" : "(offset: Offset): OffsetVerification", "member" : "akka.projection.javadsl.SourceProvider.verifyOffset", "link" : "akka\/projection\/javadsl\/SourceProvider.html#verifyOffset(offset:Offset):akka.projection.OffsetVerification", "kind" : "def"}, {"member" : "akka.projection.javadsl.SourceProvider#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/SourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/SourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/SourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/SourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/SourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/SourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/SourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/SourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/SourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/SourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/SourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/SourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/SourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/SourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/SourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/SourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/SourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/SourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/SourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractOffset", "tail" : "(envelope: Envelope): Offset", "member" : "akka.projection.javadsl.SourceProvider.extractOffset", "link" : "akka\/projection\/javadsl\/SourceProvider.html#extractOffset(envelope:Envelope):Offset", "kind" : "abstract def"}, {"label" : "source", "tail" : "(offset: Supplier[CompletionStage[Optional[Offset]]]): CompletionStage[Source[Envelope, _]]", "member" : "akka.projection.javadsl.SourceProvider.source", "link" : "akka\/projection\/javadsl\/SourceProvider.html#source(offset:java.util.function.Supplier[java.util.concurrent.CompletionStage[java.util.Optional[Offset]]]):java.util.concurrent.CompletionStage[akka.stream.javadsl.Source[Envelope,_]]", "kind" : "abstract def"}], "class" : "akka\/projection\/javadsl\/SourceProvider.html", "kind" : "class"}, {"name" : "akka.projection.javadsl.StatefulHandler", "shortDescription" : "", "members_class" : [{"label" : "process", "tail" : "(envelope: Envelope): CompletionStage[Done]", "member" : "akka.projection.javadsl.StatefulHandler.process", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#process(envelope:Envelope):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "final def"}, {"label" : "start", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.StatefulHandler.start", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#start():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "final def"}, {"member" : "akka.projection.javadsl.StatefulHandler#<init>", "error" : "unsupported entity"}, {"label" : "stop", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.Handler.stop", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#stop():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/StatefulHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(state: State, envelope: Envelope): CompletionStage[State]", "member" : "akka.projection.javadsl.StatefulHandler.process", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#process(state:State,envelope:Envelope):java.util.concurrent.CompletionStage[State]", "kind" : "abstract def"}, {"label" : "initialState", "tail" : "(): CompletionStage[State]", "member" : "akka.projection.javadsl.StatefulHandler.initialState", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#initialState():java.util.concurrent.CompletionStage[State]", "kind" : "abstract def"}], "class" : "akka\/projection\/javadsl\/StatefulHandler.html", "kind" : "class"}], "akka" : [], "akka.projection.kafka.internal" : [{"name" : "akka.projection.kafka.internal.MetadataClientAdapter", "trait" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "akka.projection.kafka.internal.MetadataClientAdapter.stop", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#stop():Unit", "kind" : "abstract def"}, {"label" : "numPartitions", "tail" : "(topics: Set[String]): Future[Int]", "member" : "akka.projection.kafka.internal.MetadataClientAdapter.numPartitions", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#numPartitions(topics:Set[String]):scala.concurrent.Future[Int]", "kind" : "abstract def"}, {"label" : "getBeginningOffsets", "tail" : "(assignedTps: Set[TopicPartition]): Future[Map[TopicPartition, Long]]", "member" : "akka.projection.kafka.internal.MetadataClientAdapter.getBeginningOffsets", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapter.html#getBeginningOffsets(assignedTps:Set[org.apache.kafka.common.TopicPartition]):scala.concurrent.Future[Map[org.apache.kafka.common.TopicPartition,Long]]", "kind" : "abstract def"}], "shortDescription" : "INTERNAL API"}, {"name" : "akka.projection.kafka.internal.MetadataClientAdapterImpl", "shortDescription" : "INTERNAL API", "object" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html", "members_class" : [{"label" : "stop", "tail" : "(): Unit", "member" : "akka.projection.kafka.internal.MetadataClientAdapterImpl.stop", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#stop():Unit", "kind" : "def"}, {"label" : "numPartitions", "tail" : "(topics: Set[String]): Future[Int]", "member" : "akka.projection.kafka.internal.MetadataClientAdapterImpl.numPartitions", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#numPartitions(topics:Set[String]):scala.concurrent.Future[Int]", "kind" : "def"}, {"label" : "getBeginningOffsets", "tail" : "(assignedTps: Set[TopicPartition]): Future[Map[TopicPartition, Long]]", "member" : "akka.projection.kafka.internal.MetadataClientAdapterImpl.getBeginningOffsets", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#getBeginningOffsets(assignedTps:Set[org.apache.kafka.common.TopicPartition]):scala.concurrent.Future[Map[org.apache.kafka.common.TopicPartition,Long]]", "kind" : "def"}, {"label" : "ec", "tail" : ": ExecutionContext", "member" : "akka.projection.kafka.internal.MetadataClientAdapterImpl.ec", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#ec:scala.concurrent.ExecutionContext", "kind" : "implicit val"}, {"member" : "akka.projection.kafka.internal.MetadataClientAdapterImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/kafka\/internal\/MetadataClientAdapterImpl.html", "kind" : "object"}], "akka.projection.cassandra.javadsl" : [{"name" : "akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection", "trait" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection.withRecoveryStrategy", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withSaveOffset", "tail" : "(afterEnvelopes: Int, afterDuration: Duration): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection.withSaveOffset", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#withSaveOffset(afterEnvelopes:Int,afterDuration:java.time.Duration):akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection.withStatusObserver", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "initializeOffsetTable", "tail" : "(system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.initializeOffsetTable", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#initializeOffsetTable(system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceCassandraProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.cassandra.javadsl.AtLeastOnceFlowCassandraProjection", "trait" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withSaveOffset", "tail" : "(afterEnvelopes: Int, afterDuration: Duration): AtLeastOnceFlowCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtLeastOnceFlowCassandraProjection.withSaveOffset", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#withSaveOffset(afterEnvelopes:Int,afterDuration:java.time.Duration):akka.projection.cassandra.javadsl.AtLeastOnceFlowCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtLeastOnceFlowCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtLeastOnceFlowCassandraProjection.withStatusObserver", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.cassandra.javadsl.AtLeastOnceFlowCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): AtLeastOnceFlowCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtLeastOnceFlowCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.cassandra.javadsl.AtLeastOnceFlowCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): AtLeastOnceFlowCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtLeastOnceFlowCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.cassandra.javadsl.AtLeastOnceFlowCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "initializeOffsetTable", "tail" : "(system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.initializeOffsetTable", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#initializeOffsetTable(system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/cassandra\/javadsl\/AtLeastOnceFlowCassandraProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.cassandra.javadsl.AtMostOnceCassandraProjection", "trait" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: StrictRecoveryStrategy): AtMostOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtMostOnceCassandraProjection.withRecoveryStrategy", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.StrictRecoveryStrategy):akka.projection.cassandra.javadsl.AtMostOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtMostOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtMostOnceCassandraProjection.withStatusObserver", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.cassandra.javadsl.AtMostOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): AtMostOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtMostOnceCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.cassandra.javadsl.AtMostOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): AtMostOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.AtMostOnceCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.cassandra.javadsl.AtMostOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "initializeOffsetTable", "tail" : "(system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.initializeOffsetTable", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#initializeOffsetTable(system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/cassandra\/javadsl\/AtMostOnceCassandraProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.cassandra.javadsl.CassandraProjection", "object" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html", "members_object" : [{"label" : "atMostOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: Handler[Envelope]): AtMostOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.atMostOnce", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#atMostOnce[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],handler:akka.projection.javadsl.Handler[Envelope]):akka.projection.cassandra.javadsl.AtMostOnceCassandraProjection[Envelope]", "kind" : "def"}, {"label" : "atLeastOnceFlow", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: FlowWithContext[Envelope, Envelope, Done, Envelope, _]): AtLeastOnceFlowCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.atLeastOnceFlow", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#atLeastOnceFlow[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],handler:akka.stream.javadsl.FlowWithContext[Envelope,Envelope,akka.Done,Envelope,_]):akka.projection.cassandra.javadsl.AtLeastOnceFlowCassandraProjection[Envelope]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: Handler[List[Envelope]]): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.groupedWithin", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#groupedWithin[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],handler:akka.projection.javadsl.Handler[java.util.List[Envelope]]):akka.projection.cassandra.javadsl.GroupedCassandraProjection[Envelope]", "kind" : "def"}, {"label" : "atLeastOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: Handler[Envelope]): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.atLeastOnce", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#atLeastOnce[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],handler:akka.projection.javadsl.Handler[Envelope]):akka.projection.cassandra.javadsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html", "kind" : "object", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "initializeOffsetTable", "tail" : "(system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.initializeOffsetTable", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#initializeOffsetTable(system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): CassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.withStatusObserver", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.cassandra.javadsl.CassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): CassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.cassandra.javadsl.CassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): CassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.cassandra.javadsl.CassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : "Factories of Projection where the offset is stored in Cassandra."}, {"name" : "akka.projection.cassandra.javadsl.GroupedCassandraProjection", "trait" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.GroupedCassandraProjection.withRecoveryStrategy", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.cassandra.javadsl.GroupedCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withGroup", "tail" : "(groupAfterEnvelopes: Int, groupAfterDuration: Duration): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.GroupedCassandraProjection.withGroup", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#withGroup(groupAfterEnvelopes:Int,groupAfterDuration:java.time.Duration):akka.projection.cassandra.javadsl.GroupedCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.GroupedCassandraProjection.withStatusObserver", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.cassandra.javadsl.GroupedCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.GroupedCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.cassandra.javadsl.GroupedCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.javadsl.GroupedCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.cassandra.javadsl.GroupedCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "initializeOffsetTable", "tail" : "(system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.initializeOffsetTable", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#initializeOffsetTable(system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/cassandra\/javadsl\/GroupedCassandraProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}], "akka.projection.testkit.javadsl" : [{"name" : "akka.projection.testkit.javadsl.ProjectionTestKit", "shortDescription" : "", "object" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html", "members_class" : [{"label" : "runWithTestSink", "tail" : "(projection: Projection[_], assertFunction: Procedure[Probe[Done]]): Unit", "member" : "akka.projection.testkit.javadsl.ProjectionTestKit.runWithTestSink", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#runWithTestSink(projection:akka.projection.Projection[_],assertFunction:akka.japi.function.Procedure[akka.stream.testkit.TestSubscriber.Probe[akka.Done]]):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_], max: Duration, interval: Duration, assertFunction: Effect): Unit", "member" : "akka.projection.testkit.javadsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_],max:java.time.Duration,interval:java.time.Duration,assertFunction:akka.japi.function.Effect):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_], max: Duration, assertFunction: Effect): Unit", "member" : "akka.projection.testkit.javadsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_],max:java.time.Duration,assertFunction:akka.japi.function.Effect):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_], assertFunction: Effect): Unit", "member" : "akka.projection.testkit.javadsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_],assertFunction:akka.japi.function.Effect):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "create", "tail" : "(testKit: ActorTestKit): ProjectionTestKit", "member" : "akka.projection.testkit.javadsl.ProjectionTestKit.create", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#create(testKit:akka.actor.testkit.typed.javadsl.ActorTestKit):akka.projection.testkit.javadsl.ProjectionTestKit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html", "kind" : "class"}], "akka.projection.eventsourced.javadsl" : [{"name" : "akka.projection.eventsourced.javadsl.EventSourcedProvider", "shortDescription" : "", "object" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html", "members_object" : [{"label" : "eventsByTag", "tail" : "(system: ActorSystem[_], readJournalPluginId: String, tag: String): SourceProvider[Offset, EventEnvelope[Event]]", "member" : "akka.projection.eventsourced.javadsl.EventSourcedProvider.eventsByTag", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#eventsByTag[Event](system:akka.actor.typed.ActorSystem[_],readJournalPluginId:String,tag:String):akka.projection.javadsl.SourceProvider[akka.persistence.query.Offset,akka.projection.eventsourced.EventEnvelope[Event]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.kafka" : [{"name" : "akka.projection.kafka.GroupOffsets", "shortDescription" : "", "object" : "akka\/projection\/kafka\/GroupOffsets$.html", "members_class" : [{"label" : "partitions", "tail" : ": Set[TopicPartition]", "member" : "akka.projection.kafka.GroupOffsets.partitions", "link" : "akka\/projection\/kafka\/GroupOffsets.html#partitions:Set[org.apache.kafka.common.TopicPartition]", "kind" : "lazy val"}, {"label" : "entries", "tail" : ": Map[TopicPartitionKey, Long]", "member" : "akka.projection.MergeableOffset.entries", "link" : "akka\/projection\/kafka\/GroupOffsets.html#entries:Map[Key,Offset]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "akka\/projection\/kafka\/GroupOffsets.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/kafka\/GroupOffsets.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/kafka\/GroupOffsets.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/kafka\/GroupOffsets.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/kafka\/GroupOffsets.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/kafka\/GroupOffsets.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/kafka\/GroupOffsets.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/kafka\/GroupOffsets.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/GroupOffsets.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/GroupOffsets.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/GroupOffsets.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/kafka\/GroupOffsets.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/kafka\/GroupOffsets.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/kafka\/GroupOffsets.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/kafka\/GroupOffsets.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/kafka\/GroupOffsets.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/kafka\/GroupOffsets.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "TopicPartitionKey", "tail" : "", "member" : "akka.projection.kafka.GroupOffsets.TopicPartitionKey", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#TopicPartitionKeyextendsMergeableKeywithProductwithSerializable", "kind" : "final case class"}, {"label" : "keyToPartition", "tail" : "(key: String): TopicPartition", "member" : "akka.projection.kafka.GroupOffsets.keyToPartition", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#keyToPartition(key:String):org.apache.kafka.common.TopicPartition", "kind" : "def"}, {"label" : "partitionToKey", "tail" : "(tp: TopicPartition): String", "member" : "akka.projection.kafka.GroupOffsets.partitionToKey", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#partitionToKey(tp:org.apache.kafka.common.TopicPartition):String", "kind" : "def"}, {"label" : "apply", "tail" : "(record: ConsumerRecord[_, _]): GroupOffsets", "member" : "akka.projection.kafka.GroupOffsets.apply", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#apply(record:org.apache.kafka.clients.consumer.ConsumerRecord[_,_]):akka.projection.kafka.GroupOffsets", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/kafka\/GroupOffsets$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/kafka\/GroupOffsets$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/kafka\/GroupOffsets.html", "kind" : "object"}, {"name" : "akka.projection.kafka.KafkaSourceProvider", "shortDescription" : "", "object" : "akka\/projection\/kafka\/KafkaSourceProvider$.html", "members_object" : [{"label" : "apply", "tail" : "(system: ActorSystem[_], settings: ConsumerSettings[K, V], topics: Set[String]): SourceProvider[GroupOffsets, ConsumerRecord[K, V]]", "member" : "akka.projection.kafka.KafkaSourceProvider.apply", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#apply[K,V](system:akka.actor.typed.ActorSystem[_],settings:akka.kafka.ConsumerSettings[K,V],topics:Set[String]):akka.projection.scaladsl.SourceProvider[akka.projection.kafka.GroupOffsets,org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/kafka\/KafkaSourceProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.eventsourced" : [{"name" : "akka.projection.eventsourced.EventEnvelope", "shortDescription" : "", "object" : "akka\/projection\/eventsourced\/EventEnvelope$.html", "members_class" : [{"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "akka.projection.eventsourced.EventEnvelope.equals", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "akka.projection.eventsourced.EventEnvelope.hashCode", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#hashCode():Int", "kind" : "def"}, {"member" : "akka.projection.eventsourced.EventEnvelope#<init>", "error" : "unsupported entity"}, {"label" : "timestamp", "tail" : ": Long", "member" : "akka.projection.eventsourced.EventEnvelope.timestamp", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#timestamp:Long", "kind" : "val"}, {"label" : "event", "tail" : ": Event", "member" : "akka.projection.eventsourced.EventEnvelope.event", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#event:Event", "kind" : "val"}, {"label" : "sequenceNr", "tail" : ": Long", "member" : "akka.projection.eventsourced.EventEnvelope.sequenceNr", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#sequenceNr:Long", "kind" : "val"}, {"label" : "persistenceId", "tail" : ": String", "member" : "akka.projection.eventsourced.EventEnvelope.persistenceId", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#persistenceId:String", "kind" : "val"}, {"label" : "offset", "tail" : ": Offset", "member" : "akka.projection.eventsourced.EventEnvelope.offset", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#offset:akka.persistence.query.Offset", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(arg: EventEnvelope[Event]): Option[(Offset, String, Long, Event, Long)]", "member" : "akka.projection.eventsourced.EventEnvelope.unapply", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#unapply[Event](arg:akka.projection.eventsourced.EventEnvelope[Event]):Option[(akka.persistence.query.Offset,String,Long,Event,Long)]", "kind" : "def"}, {"label" : "apply", "tail" : "(offset: Offset, persistenceId: String, sequenceNr: Long, event: Event, timestamp: Long): EventEnvelope[Event]", "member" : "akka.projection.eventsourced.EventEnvelope.apply", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#apply[Event](offset:akka.persistence.query.Offset,persistenceId:String,sequenceNr:Long,event:Event,timestamp:Long):akka.projection.eventsourced.EventEnvelope[Event]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/eventsourced\/EventEnvelope.html", "kind" : "class"}], "akka.projection.testkit" : [], "akka.projection.internal" : [{"name" : "akka.projection.internal.ProjectionSettings", "shortDescription" : "INTERNAL API", "object" : "akka\/projection\/internal\/ProjectionSettings$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config): ProjectionSettings", "member" : "akka.projection.internal.ProjectionSettings.fromConfig", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#fromConfig(config:com.typesafe.config.Config):akka.projection.internal.ProjectionSettings", "kind" : "def"}, {"label" : "apply", "tail" : "(system: ActorSystem[_]): ProjectionSettings", "member" : "akka.projection.internal.ProjectionSettings.apply", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#apply(system:akka.actor.typed.ActorSystem[_]):akka.projection.internal.ProjectionSettings", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/internal\/ProjectionSettings$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/internal\/ProjectionSettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "akka.projection.internal.ProjectionSettings#<init>", "error" : "unsupported entity"}, {"label" : "recoveryStrategy", "tail" : ": HandlerRecoveryStrategy", "member" : "akka.projection.internal.ProjectionSettings.recoveryStrategy", "link" : "akka\/projection\/internal\/ProjectionSettings.html#recoveryStrategy:akka.projection.HandlerRecoveryStrategy", "kind" : "val"}, {"label" : "groupAfterDuration", "tail" : ": FiniteDuration", "member" : "akka.projection.internal.ProjectionSettings.groupAfterDuration", "link" : "akka\/projection\/internal\/ProjectionSettings.html#groupAfterDuration:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "groupAfterEnvelopes", "tail" : ": Int", "member" : "akka.projection.internal.ProjectionSettings.groupAfterEnvelopes", "link" : "akka\/projection\/internal\/ProjectionSettings.html#groupAfterEnvelopes:Int", "kind" : "val"}, {"label" : "saveOffsetAfterDuration", "tail" : ": FiniteDuration", "member" : "akka.projection.internal.ProjectionSettings.saveOffsetAfterDuration", "link" : "akka\/projection\/internal\/ProjectionSettings.html#saveOffsetAfterDuration:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "saveOffsetAfterEnvelopes", "tail" : ": Int", "member" : "akka.projection.internal.ProjectionSettings.saveOffsetAfterEnvelopes", "link" : "akka\/projection\/internal\/ProjectionSettings.html#saveOffsetAfterEnvelopes:Int", "kind" : "val"}, {"label" : "restartBackoff", "tail" : ": RestartBackoffSettings", "member" : "akka.projection.internal.ProjectionSettings.restartBackoff", "link" : "akka\/projection\/internal\/ProjectionSettings.html#restartBackoff:akka.projection.internal.RestartBackoffSettings", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "akka\/projection\/internal\/ProjectionSettings.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/internal\/ProjectionSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/internal\/ProjectionSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/internal\/ProjectionSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/internal\/ProjectionSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/internal\/ProjectionSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/internal\/ProjectionSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/internal\/ProjectionSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/ProjectionSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/ProjectionSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/ProjectionSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/internal\/ProjectionSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/internal\/ProjectionSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/internal\/ProjectionSettings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/internal\/ProjectionSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/internal\/ProjectionSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/internal\/ProjectionSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "akka\/projection\/internal\/ProjectionSettings.html", "kind" : "case class"}], "akka.projection.testkit.scaladsl" : [{"name" : "akka.projection.testkit.scaladsl.ProjectionTestKit", "shortDescription" : "", "object" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html", "members_class" : [{"label" : "runWithTestSink", "tail" : "(projection: Projection[_])(assertFunction: (Probe[Done]) => Unit): Unit", "member" : "akka.projection.testkit.scaladsl.ProjectionTestKit.runWithTestSink", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#runWithTestSink(projection:akka.projection.Projection[_])(assertFunction:akka.stream.testkit.TestSubscriber.Probe[akka.Done]=>Unit):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_], max: FiniteDuration, interval: FiniteDuration)(assertFunction: => Unit): Unit", "member" : "akka.projection.testkit.scaladsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_],max:scala.concurrent.duration.FiniteDuration,interval:scala.concurrent.duration.FiniteDuration)(assertFunction:=>Unit):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_], max: FiniteDuration)(assertFunction: => Unit): Unit", "member" : "akka.projection.testkit.scaladsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_],max:scala.concurrent.duration.FiniteDuration)(assertFunction:=>Unit):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_])(assertFunction: => Unit): Unit", "member" : "akka.projection.testkit.scaladsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_])(assertFunction:=>Unit):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(testKit: ActorTestKit): ProjectionTestKit", "member" : "akka.projection.testkit.scaladsl.ProjectionTestKit.apply", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#apply(testKit:akka.actor.testkit.typed.scaladsl.ActorTestKit):akka.projection.testkit.scaladsl.ProjectionTestKit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html", "kind" : "class"}], "akka.projection.scaladsl" : [{"name" : "akka.projection.scaladsl.Handler", "object" : "akka\/projection\/scaladsl\/Handler$.html", "members_object" : [{"label" : "apply", "tail" : "(handler: (Envelope) => Future[Done]): Handler[Envelope]", "member" : "akka.projection.scaladsl.Handler.apply", "link" : "akka\/projection\/scaladsl\/Handler$.html#apply[Envelope](handler:Envelope=>scala.concurrent.Future[akka.Done]):akka.projection.scaladsl.Handler[Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/Handler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/Handler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/Handler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/Handler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/Handler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/Handler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/Handler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/Handler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/Handler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/Handler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/Handler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/Handler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/Handler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/Handler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/Handler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/Handler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/scaladsl\/Handler.html", "kind" : "trait", "members_trait" : [{"label" : "stop", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.stop", "link" : "akka\/projection\/scaladsl\/Handler.html#stop():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "start", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.start", "link" : "akka\/projection\/scaladsl\/Handler.html#start():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/Handler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/Handler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/Handler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/Handler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/Handler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/Handler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/Handler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/Handler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/Handler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/Handler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/Handler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/Handler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/Handler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/Handler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/Handler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/Handler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(envelope: Envelope): Future[Done]", "member" : "akka.projection.scaladsl.Handler.process", "link" : "akka\/projection\/scaladsl\/Handler.html#process(envelope:Envelope):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}], "shortDescription" : "Implement this interface for the Envelope handler in the Projection."}, {"name" : "akka.projection.scaladsl.HandlerLifecycle", "trait" : "akka\/projection\/scaladsl\/HandlerLifecycle.html", "kind" : "trait", "members_trait" : [{"label" : "stop", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.stop", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#stop():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "start", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.start", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#start():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "akka.projection.scaladsl.ProjectionManagement", "shortDescription" : "", "object" : "akka\/projection\/scaladsl\/ProjectionManagement$.html", "members_class" : [{"label" : "clearOffset", "tail" : "(projectionId: ProjectionId): Future[Done]", "member" : "akka.projection.scaladsl.ProjectionManagement.clearOffset", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#clearOffset(projectionId:akka.projection.ProjectionId):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "updateOffset", "tail" : "(projectionId: ProjectionId, offset: Offset): Future[Done]", "member" : "akka.projection.scaladsl.ProjectionManagement.updateOffset", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#updateOffset[Offset](projectionId:akka.projection.ProjectionId,offset:Offset):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "getOffset", "tail" : "(projectionId: ProjectionId): Future[Option[Offset]]", "member" : "akka.projection.scaladsl.ProjectionManagement.getOffset", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#getOffset[Offset](projectionId:akka.projection.ProjectionId):scala.concurrent.Future[Option[Offset]]", "kind" : "def"}, {"member" : "akka.projection.scaladsl.ProjectionManagement#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "get", "tail" : "(system: ActorSystem[_]): ProjectionManagement", "member" : "akka.projection.scaladsl.ProjectionManagement.get", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#get(system:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.ProjectionManagement", "kind" : "def"}, {"label" : "createExtension", "tail" : "(system: ActorSystem[_]): ProjectionManagement", "member" : "akka.projection.scaladsl.ProjectionManagement.createExtension", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#createExtension(system:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.ProjectionManagement", "kind" : "def"}, {"label" : "id", "tail" : "(): ExtensionId[ProjectionManagement]", "member" : "akka.actor.typed.ExtensionId.id", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#id:akka.actor.typed.ExtensionId[T]", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "akka.actor.typed.ExtensionId.equals", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#equals(other:Any):Boolean", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "akka.actor.typed.ExtensionId.hashCode", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#hashCode():Int", "kind" : "final def"}, {"label" : "apply", "tail" : "(system: ActorSystem[_]): ProjectionManagement", "member" : "akka.actor.typed.ExtensionId.apply", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#apply(system:akka.actor.typed.ActorSystem[_]):T", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/scaladsl\/ProjectionManagement.html", "kind" : "class"}, {"name" : "akka.projection.scaladsl.SourceProvider", "trait" : "akka\/projection\/scaladsl\/SourceProvider.html", "kind" : "trait", "members_trait" : [{"label" : "isOffsetMergeable", "tail" : "(): Boolean", "member" : "akka.projection.scaladsl.SourceProvider.isOffsetMergeable", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#isOffsetMergeable:Boolean", "kind" : "def"}, {"label" : "verifyOffset", "tail" : "(offset: Offset): OffsetVerification", "member" : "akka.projection.scaladsl.SourceProvider.verifyOffset", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#verifyOffset(offset:Offset):akka.projection.OffsetVerification", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/SourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractOffset", "tail" : "(envelope: Envelope): Offset", "member" : "akka.projection.scaladsl.SourceProvider.extractOffset", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#extractOffset(envelope:Envelope):Offset", "kind" : "abstract def"}, {"label" : "source", "tail" : "(offset: () => Future[Option[Offset]]): Future[Source[Envelope, _]]", "member" : "akka.projection.scaladsl.SourceProvider.source", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#source(offset:()=>scala.concurrent.Future[Option[Offset]]):scala.concurrent.Future[akka.stream.scaladsl.Source[Envelope,_]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.scaladsl.StatefulHandler", "shortDescription" : "", "members_class" : [{"label" : "process", "tail" : "(envelope: Envelope): Future[Done]", "member" : "akka.projection.scaladsl.StatefulHandler.process", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#process(envelope:Envelope):scala.concurrent.Future[akka.Done]", "kind" : "final def"}, {"label" : "start", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.StatefulHandler.start", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#start():scala.concurrent.Future[akka.Done]", "kind" : "final def"}, {"member" : "akka.projection.scaladsl.StatefulHandler#<init>", "error" : "unsupported entity"}, {"label" : "stop", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.stop", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#stop():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(state: State, envelope: Envelope): Future[State]", "member" : "akka.projection.scaladsl.StatefulHandler.process", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#process(state:State,envelope:Envelope):scala.concurrent.Future[State]", "kind" : "abstract def"}, {"label" : "initialState", "tail" : "(): Future[State]", "member" : "akka.projection.scaladsl.StatefulHandler.initialState", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#initialState():scala.concurrent.Future[State]", "kind" : "abstract def"}], "class" : "akka\/projection\/scaladsl\/StatefulHandler.html", "kind" : "class"}], "akka.projection" : [{"name" : "akka.projection.HandlerRecoveryStrategy", "object" : "akka\/projection\/HandlerRecoveryStrategy$.html", "members_object" : [{"label" : "retryAndSkip", "tail" : "(retries: Int, delay: Duration): HandlerRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.retryAndSkip", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#retryAndSkip(retries:Int,delay:java.time.Duration):akka.projection.HandlerRecoveryStrategy", "kind" : "def"}, {"label" : "retryAndSkip", "tail" : "(retries: Int, delay: FiniteDuration): HandlerRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.retryAndSkip", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#retryAndSkip(retries:Int,delay:scala.concurrent.duration.FiniteDuration):akka.projection.HandlerRecoveryStrategy", "kind" : "def"}, {"label" : "retryAndFail", "tail" : "(retries: Int, delay: Duration): HandlerRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.retryAndFail", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#retryAndFail(retries:Int,delay:java.time.Duration):akka.projection.HandlerRecoveryStrategy", "kind" : "def"}, {"label" : "retryAndFail", "tail" : "(retries: Int, delay: FiniteDuration): HandlerRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.retryAndFail", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#retryAndFail(retries:Int,delay:scala.concurrent.duration.FiniteDuration):akka.projection.HandlerRecoveryStrategy", "kind" : "def"}, {"label" : "skip", "tail" : "(): StrictRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.skip", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#skip:akka.projection.StrictRecoveryStrategy", "kind" : "def"}, {"label" : "fail", "tail" : "(): StrictRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.fail", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#fail:akka.projection.StrictRecoveryStrategy", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/HandlerRecoveryStrategy.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/HandlerRecoveryStrategy.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Error handling strategy when processing an Envelope fails."}, {"name" : "akka.projection.MergeableKey", "trait" : "akka\/projection\/MergeableKey.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/MergeableKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/MergeableKey.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/MergeableKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/MergeableKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/MergeableKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/MergeableKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/MergeableKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/MergeableKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/MergeableKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/MergeableKey.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/MergeableKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/MergeableKey.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/MergeableKey.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/MergeableKey.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/MergeableKey.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/MergeableKey.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/MergeableKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/MergeableKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/MergeableKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "surrogateKey", "tail" : "(): String", "member" : "akka.projection.MergeableKey.surrogateKey", "link" : "akka\/projection\/MergeableKey.html#surrogateKey:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.MergeableOffset", "shortDescription" : "", "members_case class" : [{"member" : "akka.projection.MergeableOffset#<init>", "error" : "unsupported entity"}, {"label" : "entries", "tail" : ": Map[Key, Offset]", "member" : "akka.projection.MergeableOffset.entries", "link" : "akka\/projection\/MergeableOffset.html#entries:Map[Key,Offset]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "akka\/projection\/MergeableOffset.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/MergeableOffset.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/MergeableOffset.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/MergeableOffset.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/MergeableOffset.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/MergeableOffset.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/MergeableOffset.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/MergeableOffset.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/MergeableOffset.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/MergeableOffset.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/MergeableOffset.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/MergeableOffset.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/MergeableOffset.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/MergeableOffset.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/MergeableOffset.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/MergeableOffset.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/MergeableOffset.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "akka\/projection\/MergeableOffset.html", "kind" : "case class"}, {"name" : "akka.projection.OffsetVerification", "object" : "akka\/projection\/OffsetVerification$.html", "members_object" : [{"label" : "verificationFailure", "tail" : "(reason: String): OffsetVerification", "member" : "akka.projection.OffsetVerification.verificationFailure", "link" : "akka\/projection\/OffsetVerification$.html#verificationFailure(reason:String):akka.projection.OffsetVerification", "kind" : "def"}, {"label" : "VerificationFailure", "tail" : "", "member" : "akka.projection.OffsetVerification.VerificationFailure", "link" : "akka\/projection\/OffsetVerification$.html#VerificationFailure[Offset]extendsOffsetVerificationwithProductwithSerializable", "kind" : "final case class"}, {"label" : "verificationSuccess", "tail" : "(): OffsetVerification", "member" : "akka.projection.OffsetVerification.verificationSuccess", "link" : "akka\/projection\/OffsetVerification$.html#verificationSuccess:akka.projection.OffsetVerification", "kind" : "def"}, {"label" : "VerificationSuccess", "tail" : "", "member" : "akka.projection.OffsetVerification.VerificationSuccess", "link" : "akka\/projection\/OffsetVerification$.html#VerificationSuccess", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/OffsetVerification$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/OffsetVerification$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/OffsetVerification$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/OffsetVerification$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/OffsetVerification$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/OffsetVerification$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/OffsetVerification$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/OffsetVerification$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/OffsetVerification$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/OffsetVerification$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/OffsetVerification$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/OffsetVerification$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/OffsetVerification$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/OffsetVerification$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/OffsetVerification$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/OffsetVerification$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/OffsetVerification.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/OffsetVerification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/OffsetVerification.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/OffsetVerification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/OffsetVerification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/OffsetVerification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/OffsetVerification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/OffsetVerification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/OffsetVerification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/OffsetVerification.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/OffsetVerification.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/OffsetVerification.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/OffsetVerification.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/OffsetVerification.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/OffsetVerification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/OffsetVerification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/OffsetVerification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "akka.projection.Projection", "trait" : "akka\/projection\/Projection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/Projection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/Projection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/Projection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/Projection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/Projection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/Projection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/Projection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/Projection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/Projection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/Projection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/Projection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/Projection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/Projection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/Projection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/Projection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/Projection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/Projection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/Projection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/Projection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): Projection[Envelope]", "member" : "akka.projection.Projection.withStatusObserver", "link" : "akka\/projection\/Projection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/Projection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/Projection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/Projection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/Projection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/Projection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/Projection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : "The core abstraction in Akka Projections."}, {"name" : "akka.projection.ProjectionBehavior", "shortDescription" : "", "object" : "akka\/projection\/ProjectionBehavior$.html", "members_object" : [{"label" : "apply", "tail" : "(projection: Projection[Envelope]): Behavior[Command]", "member" : "akka.projection.ProjectionBehavior.apply", "link" : "akka\/projection\/ProjectionBehavior$.html#apply[Envelope](projection:akka.projection.Projection[Envelope]):akka.actor.typed.Behavior[akka.projection.ProjectionBehavior.Command]", "kind" : "def"}, {"label" : "stopMessage", "tail" : "(): Command", "member" : "akka.projection.ProjectionBehavior.stopMessage", "link" : "akka\/projection\/ProjectionBehavior$.html#stopMessage():akka.projection.ProjectionBehavior.Command", "kind" : "def"}, {"label" : "create", "tail" : "(projectionFactory: Projection[Envelope]): Behavior[Command]", "member" : "akka.projection.ProjectionBehavior.create", "link" : "akka\/projection\/ProjectionBehavior$.html#create[Envelope](projectionFactory:akka.projection.Projection[Envelope]):akka.actor.typed.Behavior[akka.projection.ProjectionBehavior.Command]", "kind" : "def"}, {"label" : "Stop", "tail" : "", "member" : "akka.projection.ProjectionBehavior.Stop", "link" : "akka\/projection\/ProjectionBehavior$.html#Stop", "kind" : "object"}, {"label" : "Command", "tail" : "", "member" : "akka.projection.ProjectionBehavior.Command", "link" : "akka\/projection\/ProjectionBehavior$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/ProjectionBehavior$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/ProjectionBehavior$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/ProjectionBehavior$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/ProjectionBehavior$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/ProjectionBehavior$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/ProjectionBehavior$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/ProjectionBehavior$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionBehavior$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionBehavior$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionBehavior$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/ProjectionBehavior$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/ProjectionBehavior$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/ProjectionBehavior$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/ProjectionBehavior$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/ProjectionBehavior$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/ProjectionBehavior$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/ProjectionBehavior$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/ProjectionBehavior$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/ProjectionBehavior$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.projection.ProjectionId", "shortDescription" : "", "object" : "akka\/projection\/ProjectionId$.html", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "akka.projection.ProjectionId.hashCode", "link" : "akka\/projection\/ProjectionId.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "akka.projection.ProjectionId.equals", "link" : "akka\/projection\/ProjectionId.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "akka.projection.ProjectionId.toString", "link" : "akka\/projection\/ProjectionId.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "akka.projection.ProjectionId.id", "link" : "akka\/projection\/ProjectionId.html#id:String", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "akka.projection.ProjectionId.key", "link" : "akka\/projection\/ProjectionId.html#key:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "akka.projection.ProjectionId.name", "link" : "akka\/projection\/ProjectionId.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/ProjectionId.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/ProjectionId.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/ProjectionId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/ProjectionId.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/ProjectionId.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/ProjectionId.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/ProjectionId.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/ProjectionId.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/ProjectionId.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/ProjectionId.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/ProjectionId.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/ProjectionId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/ProjectionId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "of", "tail" : "(name: String, keys: Set[String]): Set[ProjectionId]", "member" : "akka.projection.ProjectionId.of", "link" : "akka\/projection\/ProjectionId$.html#of(name:String,keys:java.util.Set[String]):java.util.Set[akka.projection.ProjectionId]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, keys: Set[String]): Set[ProjectionId]", "member" : "akka.projection.ProjectionId.apply", "link" : "akka\/projection\/ProjectionId$.html#apply(name:String,keys:scala.collection.immutable.Set[String]):scala.collection.immutable.Set[akka.projection.ProjectionId]", "kind" : "def"}, {"label" : "of", "tail" : "(name: String, key: String): ProjectionId", "member" : "akka.projection.ProjectionId.of", "link" : "akka\/projection\/ProjectionId$.html#of(name:String,key:String):akka.projection.ProjectionId", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, key: String): ProjectionId", "member" : "akka.projection.ProjectionId.apply", "link" : "akka\/projection\/ProjectionId$.html#apply(name:String,key:String):akka.projection.ProjectionId", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/ProjectionId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/ProjectionId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/ProjectionId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/ProjectionId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/ProjectionId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/ProjectionId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/ProjectionId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/ProjectionId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/ProjectionId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/ProjectionId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/ProjectionId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/ProjectionId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/ProjectionId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/ProjectionId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/ProjectionId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/ProjectionId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/ProjectionId.html", "kind" : "class"}, {"name" : "akka.projection.RetryRecoveryStrategy", "trait" : "akka\/projection\/RetryRecoveryStrategy.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/RetryRecoveryStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/RetryRecoveryStrategy.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/RetryRecoveryStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/RetryRecoveryStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/RetryRecoveryStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/RetryRecoveryStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/RetryRecoveryStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/RetryRecoveryStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/RetryRecoveryStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/RetryRecoveryStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/RetryRecoveryStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/RetryRecoveryStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/RetryRecoveryStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/RetryRecoveryStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/RetryRecoveryStrategy.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/RetryRecoveryStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/RetryRecoveryStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/RetryRecoveryStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/RetryRecoveryStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "akka.projection.StatusObserver", "shortDescription" : "Track status of a projection by implementing a StatusObserver and install it usingProjection.withStatusObserver.", "members_class" : [{"member" : "akka.projection.StatusObserver#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/StatusObserver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/StatusObserver.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/StatusObserver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/StatusObserver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/StatusObserver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/StatusObserver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/StatusObserver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StatusObserver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StatusObserver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StatusObserver.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/StatusObserver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/StatusObserver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/StatusObserver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/StatusObserver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/StatusObserver.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/StatusObserver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/StatusObserver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/StatusObserver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/StatusObserver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "error", "tail" : "(projectionId: ProjectionId, env: Envelope, cause: Throwable, recoveryStrategy: HandlerRecoveryStrategy): Unit", "member" : "akka.projection.StatusObserver.error", "link" : "akka\/projection\/StatusObserver.html#error(projectionId:akka.projection.ProjectionId,env:Envelope,cause:Throwable,recoveryStrategy:akka.projection.HandlerRecoveryStrategy):Unit", "kind" : "abstract def"}, {"label" : "progress", "tail" : "(projectionId: ProjectionId, env: Envelope): Unit", "member" : "akka.projection.StatusObserver.progress", "link" : "akka\/projection\/StatusObserver.html#progress(projectionId:akka.projection.ProjectionId,env:Envelope):Unit", "kind" : "abstract def"}, {"label" : "stopped", "tail" : "(projectionId: ProjectionId): Unit", "member" : "akka.projection.StatusObserver.stopped", "link" : "akka\/projection\/StatusObserver.html#stopped(projectionId:akka.projection.ProjectionId):Unit", "kind" : "abstract def"}, {"label" : "failed", "tail" : "(projectionId: ProjectionId, cause: Throwable): Unit", "member" : "akka.projection.StatusObserver.failed", "link" : "akka\/projection\/StatusObserver.html#failed(projectionId:akka.projection.ProjectionId,cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "started", "tail" : "(projectionId: ProjectionId): Unit", "member" : "akka.projection.StatusObserver.started", "link" : "akka\/projection\/StatusObserver.html#started(projectionId:akka.projection.ProjectionId):Unit", "kind" : "abstract def"}], "class" : "akka\/projection\/StatusObserver.html", "kind" : "class"}, {"name" : "akka.projection.StrictRecoveryStrategy", "trait" : "akka\/projection\/StrictRecoveryStrategy.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/StrictRecoveryStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/StrictRecoveryStrategy.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/StrictRecoveryStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/StrictRecoveryStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/StrictRecoveryStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/StrictRecoveryStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/StrictRecoveryStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StrictRecoveryStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StrictRecoveryStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StrictRecoveryStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/StrictRecoveryStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/StrictRecoveryStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/StrictRecoveryStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/StrictRecoveryStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/StrictRecoveryStrategy.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/StrictRecoveryStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/StrictRecoveryStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/StrictRecoveryStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/StrictRecoveryStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "akka.projection.StringKey", "shortDescription" : "", "members_case class" : [{"member" : "akka.projection.StringKey#<init>", "error" : "unsupported entity"}, {"label" : "surrogateKey", "tail" : ": String", "member" : "akka.projection.StringKey.surrogateKey", "link" : "akka\/projection\/StringKey.html#surrogateKey:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "akka\/projection\/StringKey.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/StringKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/StringKey.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/StringKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/StringKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/StringKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/StringKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/StringKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StringKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StringKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StringKey.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/StringKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/StringKey.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/StringKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/StringKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/StringKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/StringKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "akka\/projection\/StringKey.html", "kind" : "case class"}], "akka.projection.internal.protobuf" : [{"name" : "akka.projection.internal.protobuf.ProjectionMessages", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html", "kind" : "class"}], "akka.projection.eventsourced.scaladsl" : [{"name" : "akka.projection.eventsourced.scaladsl.EventSourcedProvider", "shortDescription" : "", "object" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html", "members_object" : [{"label" : "eventsByTag", "tail" : "(system: ActorSystem[_], readJournalPluginId: String, tag: String): SourceProvider[Offset, EventEnvelope[Event]]", "member" : "akka.projection.eventsourced.scaladsl.EventSourcedProvider.eventsByTag", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#eventsByTag[Event](system:akka.actor.typed.ActorSystem[_],readJournalPluginId:String,tag:String):akka.projection.scaladsl.SourceProvider[akka.persistence.query.Offset,akka.projection.eventsourced.EventEnvelope[Event]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.cassandra.scaladsl" : [{"name" : "akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection", "trait" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection.withRecoveryStrategy", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withSaveOffset", "tail" : "(afterEnvelopes: Int, afterDuration: FiniteDuration): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection.withSaveOffset", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#withSaveOffset(afterEnvelopes:Int,afterDuration:scala.concurrent.duration.FiniteDuration):akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection.withStatusObserver", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceCassandraProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.cassandra.scaladsl.AtLeastOnceFlowCassandraProjection", "trait" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withSaveOffset", "tail" : "(afterEnvelopes: Int, afterDuration: FiniteDuration): AtLeastOnceFlowCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtLeastOnceFlowCassandraProjection.withSaveOffset", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#withSaveOffset(afterEnvelopes:Int,afterDuration:scala.concurrent.duration.FiniteDuration):akka.projection.cassandra.scaladsl.AtLeastOnceFlowCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtLeastOnceFlowCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtLeastOnceFlowCassandraProjection.withStatusObserver", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.cassandra.scaladsl.AtLeastOnceFlowCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): AtLeastOnceFlowCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtLeastOnceFlowCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.cassandra.scaladsl.AtLeastOnceFlowCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): AtLeastOnceFlowCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtLeastOnceFlowCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.cassandra.scaladsl.AtLeastOnceFlowCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/cassandra\/scaladsl\/AtLeastOnceFlowCassandraProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.cassandra.scaladsl.AtMostOnceCassandraProjection", "trait" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: StrictRecoveryStrategy): AtMostOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtMostOnceCassandraProjection.withRecoveryStrategy", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.StrictRecoveryStrategy):akka.projection.cassandra.scaladsl.AtMostOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtMostOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtMostOnceCassandraProjection.withStatusObserver", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.cassandra.scaladsl.AtMostOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): AtMostOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtMostOnceCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.cassandra.scaladsl.AtMostOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): AtMostOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.AtMostOnceCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.cassandra.scaladsl.AtMostOnceCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/cassandra\/scaladsl\/AtMostOnceCassandraProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.cassandra.scaladsl.CassandraProjection", "object" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html", "members_object" : [{"label" : "atMostOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: Handler[Envelope]): AtMostOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.atMostOnce", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#atMostOnce[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],handler:akka.projection.scaladsl.Handler[Envelope]):akka.projection.cassandra.scaladsl.AtMostOnceCassandraProjection[Envelope]", "kind" : "def"}, {"label" : "atLeastOnceFlow", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: FlowWithContext[Envelope, Envelope, Done, Envelope, _]): AtLeastOnceFlowCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.atLeastOnceFlow", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#atLeastOnceFlow[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],handler:akka.stream.scaladsl.FlowWithContext[Envelope,Envelope,akka.Done,Envelope,_]):akka.projection.cassandra.scaladsl.AtLeastOnceFlowCassandraProjection[Envelope]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: Handler[Seq[Envelope]]): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.groupedWithin", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#groupedWithin[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],handler:akka.projection.scaladsl.Handler[Seq[Envelope]]):akka.projection.cassandra.scaladsl.GroupedCassandraProjection[Envelope]", "kind" : "def"}, {"label" : "atLeastOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: Handler[Envelope]): AtLeastOnceCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.atLeastOnce", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#atLeastOnce[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],handler:akka.projection.scaladsl.Handler[Envelope]):akka.projection.cassandra.scaladsl.AtLeastOnceCassandraProjection[Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html", "kind" : "object", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): CassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.withStatusObserver", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.cassandra.scaladsl.CassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): CassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.cassandra.scaladsl.CassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): CassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.cassandra.scaladsl.CassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : "Factories of Projection where the offset is stored in Cassandra."}, {"name" : "akka.projection.cassandra.scaladsl.GroupedCassandraProjection", "trait" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.GroupedCassandraProjection.withRecoveryStrategy", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.cassandra.scaladsl.GroupedCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withGroup", "tail" : "(groupAfterEnvelopes: Int, groupAfterDuration: FiniteDuration): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.GroupedCassandraProjection.withGroup", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#withGroup(groupAfterEnvelopes:Int,groupAfterDuration:scala.concurrent.duration.FiniteDuration):akka.projection.cassandra.scaladsl.GroupedCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.GroupedCassandraProjection.withStatusObserver", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.cassandra.scaladsl.GroupedCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.GroupedCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.cassandra.scaladsl.GroupedCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): GroupedCassandraProjection[Envelope]", "member" : "akka.projection.cassandra.scaladsl.GroupedCassandraProjection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.cassandra.scaladsl.GroupedCassandraProjection[Envelope]", "kind" : "abstract def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/cassandra\/scaladsl\/GroupedCassandraProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}]};