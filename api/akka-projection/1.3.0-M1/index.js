Index.PACKAGES = {"akka.projection.kafka.scaladsl" : [{"name" : "akka.projection.kafka.scaladsl.KafkaSourceProvider", "shortDescription" : "", "object" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html", "members_object" : [{"label" : "apply", "tail" : "(system: ActorSystem[_], settings: ConsumerSettings[K, V], topics: Set[String]): SourceProvider[MergeableOffset[Long], ConsumerRecord[K, V]]", "member" : "akka.projection.kafka.scaladsl.KafkaSourceProvider.apply", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#apply[K,V](system:akka.actor.typed.ActorSystem[_],settings:akka.kafka.ConsumerSettings[K,V],topics:Set[String]):akka.projection.scaladsl.SourceProvider[akka.projection.MergeableOffset[Long],org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/kafka\/scaladsl\/KafkaSourceProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.slick" : [{"name" : "akka.projection.slick.SlickHandler", "object" : "akka\/projection\/slick\/SlickHandler$.html", "members_object" : [{"label" : "apply", "tail" : "(handler: (Envelope) => DBIO[Done]): SlickHandler[Envelope]", "member" : "akka.projection.slick.SlickHandler.apply", "link" : "akka\/projection\/slick\/SlickHandler$.html#apply[Envelope](handler:Envelope=>slick.dbio.DBIO[akka.Done]):akka.projection.slick.SlickHandler[Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/SlickHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/SlickHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/SlickHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/SlickHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/SlickHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/SlickHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/SlickHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/SlickHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/SlickHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/SlickHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/SlickHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/SlickHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/SlickHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/SlickHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/SlickHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/SlickHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/slick\/SlickHandler.html", "kind" : "object", "members_trait" : [{"label" : "stop", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.stop", "link" : "akka\/projection\/slick\/SlickHandler.html#stop():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "start", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.start", "link" : "akka\/projection\/slick\/SlickHandler.html#start():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/SlickHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/SlickHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/SlickHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/SlickHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/SlickHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/SlickHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/SlickHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/SlickHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/SlickHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/SlickHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/SlickHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/SlickHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/SlickHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/SlickHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/SlickHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/SlickHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(envelope: Envelope): DBIO[Done]", "member" : "akka.projection.slick.SlickHandler.process", "link" : "akka\/projection\/slick\/SlickHandler.html#process(envelope:Envelope):slick.dbio.DBIO[akka.Done]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.slick.SlickProjection", "shortDescription" : "Factories of akka.projection.Projection where the offset is stored in a relational database table using Slick.", "object" : "akka\/projection\/slick\/SlickProjection$.html", "members_object" : [{"label" : "dropOffsetTableIfExists", "tail" : "(databaseConfig: DatabaseConfig[P])(arg0: ClassTag[P], system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.slick.SlickProjection.dropOffsetTableIfExists", "link" : "akka\/projection\/slick\/SlickProjection$.html#dropOffsetTableIfExists[P<:slick.jdbc.JdbcProfile](databaseConfig:slick.basic.DatabaseConfig[P])(implicitevidence$10:scala.reflect.ClassTag[P],implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "dropTablesIfExists", "tail" : "(databaseConfig: DatabaseConfig[P])(arg0: ClassTag[P], system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.slick.SlickProjection.dropTablesIfExists", "link" : "akka\/projection\/slick\/SlickProjection$.html#dropTablesIfExists[P<:slick.jdbc.JdbcProfile](databaseConfig:slick.basic.DatabaseConfig[P])(implicitevidence$9:scala.reflect.ClassTag[P],implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "(databaseConfig: DatabaseConfig[P])(arg0: ClassTag[P], system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.slick.SlickProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/slick\/SlickProjection$.html#createOffsetTableIfNotExists[P<:slick.jdbc.JdbcProfile](databaseConfig:slick.basic.DatabaseConfig[P])(implicitevidence$8:scala.reflect.ClassTag[P],implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "createTablesIfNotExists", "tail" : "(databaseConfig: DatabaseConfig[P])(arg0: ClassTag[P], system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.slick.SlickProjection.createTablesIfNotExists", "link" : "akka\/projection\/slick\/SlickProjection$.html#createTablesIfNotExists[P<:slick.jdbc.JdbcProfile](databaseConfig:slick.basic.DatabaseConfig[P])(implicitevidence$7:scala.reflect.ClassTag[P],implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "atLeastOnceFlow", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], databaseConfig: DatabaseConfig[P], handler: FlowWithContext[Envelope, ProjectionContext, Done, ProjectionContext, _])(arg0: ClassTag[P], system: ActorSystem[_]): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.slick.SlickProjection.atLeastOnceFlow", "link" : "akka\/projection\/slick\/SlickProjection$.html#atLeastOnceFlow[Offset,Envelope,P<:slick.jdbc.JdbcProfile](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],databaseConfig:slick.basic.DatabaseConfig[P],handler:akka.stream.scaladsl.FlowWithContext[Envelope,akka.projection.ProjectionContext,akka.Done,akka.projection.ProjectionContext,_])(implicitevidence$6:scala.reflect.ClassTag[P],implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "groupedWithinAsync", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], databaseConfig: DatabaseConfig[P], handler: () => Handler[Seq[Envelope]])(arg0: ClassTag[P], system: ActorSystem[_]): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.slick.SlickProjection.groupedWithinAsync", "link" : "akka\/projection\/slick\/SlickProjection$.html#groupedWithinAsync[Offset,Envelope,P<:slick.jdbc.JdbcProfile](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],databaseConfig:slick.basic.DatabaseConfig[P],handler:()=>akka.projection.scaladsl.Handler[Seq[Envelope]])(implicitevidence$5:scala.reflect.ClassTag[P],implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.GroupedProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], databaseConfig: DatabaseConfig[P], handler: () => SlickHandler[Seq[Envelope]])(arg0: ClassTag[P], system: ActorSystem[_]): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.slick.SlickProjection.groupedWithin", "link" : "akka\/projection\/slick\/SlickProjection$.html#groupedWithin[Offset,Envelope,P<:slick.jdbc.JdbcProfile](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],databaseConfig:slick.basic.DatabaseConfig[P],handler:()=>akka.projection.slick.SlickHandler[Seq[Envelope]])(implicitevidence$4:scala.reflect.ClassTag[P],implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.GroupedProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "atLeastOnceAsync", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], databaseConfig: DatabaseConfig[P], handler: () => Handler[Envelope])(arg0: ClassTag[P], system: ActorSystem[_]): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.slick.SlickProjection.atLeastOnceAsync", "link" : "akka\/projection\/slick\/SlickProjection$.html#atLeastOnceAsync[Offset,Envelope,P<:slick.jdbc.JdbcProfile](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],databaseConfig:slick.basic.DatabaseConfig[P],handler:()=>akka.projection.scaladsl.Handler[Envelope])(implicitevidence$3:scala.reflect.ClassTag[P],implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "atLeastOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], databaseConfig: DatabaseConfig[P], handler: () => SlickHandler[Envelope])(arg0: ClassTag[P], system: ActorSystem[_]): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.slick.SlickProjection.atLeastOnce", "link" : "akka\/projection\/slick\/SlickProjection$.html#atLeastOnce[Offset,Envelope,P<:slick.jdbc.JdbcProfile](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],databaseConfig:slick.basic.DatabaseConfig[P],handler:()=>akka.projection.slick.SlickHandler[Envelope])(implicitevidence$2:scala.reflect.ClassTag[P],implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "exactlyOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], databaseConfig: DatabaseConfig[P], handler: () => SlickHandler[Envelope])(arg0: ClassTag[P], system: ActorSystem[_]): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.slick.SlickProjection.exactlyOnce", "link" : "akka\/projection\/slick\/SlickProjection$.html#exactlyOnce[Offset,Envelope,P<:slick.jdbc.JdbcProfile](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],databaseConfig:slick.basic.DatabaseConfig[P],handler:()=>akka.projection.slick.SlickHandler[Envelope])(implicitevidence$1:scala.reflect.ClassTag[P],implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/slick\/SlickProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/slick\/SlickProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/slick\/SlickProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/slick\/SlickProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/slick\/SlickProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/slick\/SlickProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/slick\/SlickProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/slick\/SlickProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/slick\/SlickProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/slick\/SlickProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/slick\/SlickProjection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/slick\/SlickProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/slick\/SlickProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/slick\/SlickProjection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/slick\/SlickProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/slick\/SlickProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/slick\/SlickProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.cassandra" : [], "akka" : [], "akka.projection.jdbc.javadsl" : [{"name" : "akka.projection.jdbc.javadsl.JdbcHandler", "shortDescription" : "Implement this interface for the Envelope handler for  Jdbc Projections.", "object" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html", "members_class" : [{"member" : "akka.projection.jdbc.javadsl.JdbcHandler#<init>", "error" : "unsupported entity"}, {"label" : "stop", "tail" : "(): Unit", "member" : "akka.projection.jdbc.JdbcHandlerLifecycle.stop", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#stop():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "akka.projection.jdbc.JdbcHandlerLifecycle.start", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#start():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(session: S, envelope: Envelope): Unit", "member" : "akka.projection.jdbc.javadsl.JdbcHandler.process", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html#process(session:S,envelope:Envelope):Unit", "kind" : "abstract def"}], "members_object" : [{"label" : "fromFunction", "tail" : "(handler: BiConsumer[S, Envelope]): JdbcHandler[Envelope, S]", "member" : "akka.projection.jdbc.javadsl.JdbcHandler.fromFunction", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#fromFunction[Envelope,S<:akka.projection.jdbc.JdbcSession](handler:java.util.function.BiConsumer[S,Envelope]):akka.projection.jdbc.javadsl.JdbcHandler[Envelope,S]", "kind" : "def"}, {"label" : "fromFunction", "tail" : "(handler: (S, Envelope) => Unit): JdbcHandler[Envelope, S]", "member" : "akka.projection.jdbc.javadsl.JdbcHandler.fromFunction", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#fromFunction[Envelope,S<:akka.projection.jdbc.JdbcSession](handler:(S,Envelope)=>Unit):akka.projection.jdbc.javadsl.JdbcHandler[Envelope,S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/jdbc\/javadsl\/JdbcHandler.html", "kind" : "class"}, {"name" : "akka.projection.jdbc.javadsl.JdbcProjection", "shortDescription" : "", "object" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html", "members_object" : [{"label" : "dropOffsetTableIfExists", "tail" : "(sessionFactory: Supplier[S], system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.jdbc.javadsl.JdbcProjection.dropOffsetTableIfExists", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#dropOffsetTableIfExists[S<:akka.projection.jdbc.JdbcSession](sessionFactory:java.util.function.Supplier[S],system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "dropTablesIfExists", "tail" : "(sessionFactory: Supplier[S], system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.jdbc.javadsl.JdbcProjection.dropTablesIfExists", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#dropTablesIfExists[S<:akka.projection.jdbc.JdbcSession](sessionFactory:java.util.function.Supplier[S],system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "(sessionFactory: Supplier[S], system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.jdbc.javadsl.JdbcProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#createOffsetTableIfNotExists[S<:akka.projection.jdbc.JdbcSession](sessionFactory:java.util.function.Supplier[S],system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "createTablesIfNotExists", "tail" : "(sessionFactory: Supplier[S], system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.jdbc.javadsl.JdbcProjection.createTablesIfNotExists", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#createTablesIfNotExists[S<:akka.projection.jdbc.JdbcSession](sessionFactory:java.util.function.Supplier[S],system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "atLeastOnceFlow", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionCreator: Supplier[S], handler: FlowWithContext[Envelope, ProjectionContext, Done, ProjectionContext, _], system: ActorSystem[_]): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.javadsl.JdbcProjection.atLeastOnceFlow", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#atLeastOnceFlow[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],sessionCreator:java.util.function.Supplier[S],handler:akka.stream.javadsl.FlowWithContext[Envelope,akka.projection.ProjectionContext,akka.Done,akka.projection.ProjectionContext,_],system:akka.actor.typed.ActorSystem[_]):akka.projection.javadsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "groupedWithinAsync", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionCreator: Supplier[S], handler: Supplier[Handler[List[Envelope]]], system: ActorSystem[_]): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.javadsl.JdbcProjection.groupedWithinAsync", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#groupedWithinAsync[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],sessionCreator:java.util.function.Supplier[S],handler:java.util.function.Supplier[akka.projection.javadsl.Handler[java.util.List[Envelope]]],system:akka.actor.typed.ActorSystem[_]):akka.projection.javadsl.GroupedProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionCreator: Supplier[S], handler: Supplier[JdbcHandler[List[Envelope], S]], system: ActorSystem[_]): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.javadsl.JdbcProjection.groupedWithin", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#groupedWithin[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],sessionCreator:java.util.function.Supplier[S],handler:java.util.function.Supplier[akka.projection.jdbc.javadsl.JdbcHandler[java.util.List[Envelope],S]],system:akka.actor.typed.ActorSystem[_]):akka.projection.javadsl.GroupedProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "atLeastOnceAsync", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionCreator: Supplier[S], handler: Supplier[Handler[Envelope]], system: ActorSystem[_]): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.javadsl.JdbcProjection.atLeastOnceAsync", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#atLeastOnceAsync[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],sessionCreator:java.util.function.Supplier[S],handler:java.util.function.Supplier[akka.projection.javadsl.Handler[Envelope]],system:akka.actor.typed.ActorSystem[_]):akka.projection.javadsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "atLeastOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionCreator: Supplier[S], handler: Supplier[JdbcHandler[Envelope, S]], system: ActorSystem[_]): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.javadsl.JdbcProjection.atLeastOnce", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#atLeastOnce[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],sessionCreator:java.util.function.Supplier[S],handler:java.util.function.Supplier[akka.projection.jdbc.javadsl.JdbcHandler[Envelope,S]],system:akka.actor.typed.ActorSystem[_]):akka.projection.javadsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "exactlyOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionCreator: Supplier[S], handler: Supplier[JdbcHandler[Envelope, S]], system: ActorSystem[_]): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.javadsl.JdbcProjection.exactlyOnce", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#exactlyOnce[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],sessionCreator:java.util.function.Supplier[S],handler:java.util.function.Supplier[akka.projection.jdbc.javadsl.JdbcHandler[Envelope,S]],system:akka.actor.typed.ActorSystem[_]):akka.projection.javadsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/jdbc\/javadsl\/JdbcProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.state" : [], "akka.projection.cassandra.javadsl" : [{"name" : "akka.projection.cassandra.javadsl.CassandraProjection", "shortDescription" : "Factories of akka.projection.Projection where the offset is stored in Cassandra.", "object" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html", "members_object" : [{"label" : "createOffsetTableIfNotExists", "tail" : "(system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#createOffsetTableIfNotExists(system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "createTablesIfNotExists", "tail" : "(system: ActorSystem[_]): CompletionStage[Done]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.createTablesIfNotExists", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#createTablesIfNotExists(system:akka.actor.typed.ActorSystem[_]):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "atMostOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: Supplier[Handler[Envelope]]): AtMostOnceProjection[Offset, Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.atMostOnce", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#atMostOnce[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],handler:java.util.function.Supplier[akka.projection.javadsl.Handler[Envelope]]):akka.projection.javadsl.AtMostOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "atLeastOnceFlow", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: FlowWithContext[Envelope, ProjectionContext, Done, ProjectionContext, _]): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.atLeastOnceFlow", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#atLeastOnceFlow[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],handler:akka.stream.javadsl.FlowWithContext[Envelope,akka.projection.ProjectionContext,akka.Done,akka.projection.ProjectionContext,_]):akka.projection.javadsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: Supplier[Handler[List[Envelope]]]): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.groupedWithin", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#groupedWithin[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],handler:java.util.function.Supplier[akka.projection.javadsl.Handler[java.util.List[Envelope]]]):akka.projection.javadsl.GroupedProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "atLeastOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: Supplier[Handler[Envelope]]): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.cassandra.javadsl.CassandraProjection.atLeastOnce", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#atLeastOnce[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],handler:java.util.function.Supplier[akka.projection.javadsl.Handler[Envelope]]):akka.projection.javadsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/javadsl\/CassandraProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.testkit.javadsl" : [{"name" : "akka.projection.testkit.javadsl.ProjectionTestKit", "shortDescription" : "", "object" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html", "members_class" : [{"label" : "runWithTestSink", "tail" : "(projection: Projection[_], assertFunction: Procedure[Probe[Done]]): Unit", "member" : "akka.projection.testkit.javadsl.ProjectionTestKit.runWithTestSink", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#runWithTestSink(projection:akka.projection.Projection[_],assertFunction:akka.japi.function.Procedure[akka.stream.testkit.TestSubscriber.Probe[akka.Done]]):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_], max: Duration, interval: Duration, assertFunction: Effect): Unit", "member" : "akka.projection.testkit.javadsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_],max:java.time.Duration,interval:java.time.Duration,assertFunction:akka.japi.function.Effect):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_], max: Duration, assertFunction: Effect): Unit", "member" : "akka.projection.testkit.javadsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_],max:java.time.Duration,assertFunction:akka.japi.function.Effect):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_], assertFunction: Effect): Unit", "member" : "akka.projection.testkit.javadsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_],assertFunction:akka.japi.function.Effect):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "create", "tail" : "(system: ActorSystem[_]): ProjectionTestKit", "member" : "akka.projection.testkit.javadsl.ProjectionTestKit.create", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#create(system:akka.actor.typed.ActorSystem[_]):akka.projection.testkit.javadsl.ProjectionTestKit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/testkit\/javadsl\/ProjectionTestKit.html", "kind" : "class"}, {"name" : "akka.projection.testkit.javadsl.TestOffsetStore", "trait" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "savePaused", "tail" : "(projectionId: ProjectionId, paused: Boolean): CompletionStage[Done]", "member" : "akka.projection.testkit.javadsl.TestOffsetStore.savePaused", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#savePaused(projectionId:akka.projection.ProjectionId,paused:Boolean):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}, {"label" : "readManagementState", "tail" : "(projectionId: ProjectionId): CompletionStage[Optional[ManagementState]]", "member" : "akka.projection.testkit.javadsl.TestOffsetStore.readManagementState", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#readManagementState(projectionId:akka.projection.ProjectionId):java.util.concurrent.CompletionStage[java.util.Optional[akka.projection.internal.ManagementState]]", "kind" : "abstract def"}, {"label" : "saveOffset", "tail" : "(projectionId: ProjectionId, offset: Offset): CompletionStage[Done]", "member" : "akka.projection.testkit.javadsl.TestOffsetStore.saveOffset", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#saveOffset(projectionId:akka.projection.ProjectionId,offset:Offset):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}, {"label" : "readOffsets", "tail" : "(): CompletionStage[Optional[Offset]]", "member" : "akka.projection.testkit.javadsl.TestOffsetStore.readOffsets", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#readOffsets():java.util.concurrent.CompletionStage[java.util.Optional[Offset]]", "kind" : "abstract def"}, {"label" : "allOffsets", "tail" : "(): List[Pair[ProjectionId, Offset]]", "member" : "akka.projection.testkit.javadsl.TestOffsetStore.allOffsets", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#allOffsets():java.util.List[akka.japi.Pair[akka.projection.ProjectionId,Offset]]", "kind" : "abstract def"}, {"label" : "lastOffset", "tail" : "(): Optional[Offset]", "member" : "akka.projection.testkit.javadsl.TestOffsetStore.lastOffset", "link" : "akka\/projection\/testkit\/javadsl\/TestOffsetStore.html#lastOffset():java.util.Optional[Offset]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.testkit.javadsl.TestProjection", "object" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html", "members_object" : [{"label" : "create", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: Supplier[Handler[Envelope]]): TestProjection[Offset, Envelope]", "member" : "akka.projection.testkit.javadsl.TestProjection.create", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#create[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.javadsl.SourceProvider[Offset,Envelope],handler:java.util.function.Supplier[akka.projection.javadsl.Handler[Envelope]]):akka.projection.testkit.javadsl.TestProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/testkit\/javadsl\/TestProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withOffsetStoreFactory", "tail" : "(factory: Supplier[TestOffsetStore[Offset]]): TestProjection[Offset, Envelope]", "member" : "akka.projection.testkit.javadsl.TestProjection.withOffsetStoreFactory", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#withOffsetStoreFactory(factory:java.util.function.Supplier[akka.projection.testkit.javadsl.TestOffsetStore[Offset]]):akka.projection.testkit.javadsl.TestProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStartOffset", "tail" : "(offset: Offset): TestProjection[Offset, Envelope]", "member" : "akka.projection.testkit.javadsl.TestProjection.withStartOffset", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#withStartOffset(offset:Offset):akka.projection.testkit.javadsl.TestProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): TestProjection[Offset, Envelope]", "member" : "akka.projection.testkit.javadsl.TestProjection.withStatusObserver", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.testkit.javadsl.TestProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/testkit\/javadsl\/TestProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.testkit.javadsl.TestSourceProvider", "shortDescription" : "", "object" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html", "members_class" : [{"member" : "akka.projection.testkit.javadsl.TestSourceProvider#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withStartSourceFrom", "tail" : "(startSourceFromFn: BiFunction[Offset, Offset, Boolean]): TestSourceProvider[Offset, Envelope]", "member" : "akka.projection.testkit.javadsl.TestSourceProvider.withStartSourceFrom", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#withStartSourceFrom(startSourceFromFn:java.util.function.BiFunction[Offset,Offset,Boolean]):akka.projection.testkit.javadsl.TestSourceProvider[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withOffsetVerification", "tail" : "(offsetVerificationFn: Function[Offset, OffsetVerification]): TestSourceProvider[Offset, Envelope]", "member" : "akka.projection.testkit.javadsl.TestSourceProvider.withOffsetVerification", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#withOffsetVerification(offsetVerificationFn:java.util.function.Function[Offset,akka.projection.OffsetVerification]):akka.projection.testkit.javadsl.TestSourceProvider[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withAllowCompletion", "tail" : "(allowCompletion: Boolean): TestSourceProvider[Offset, Envelope]", "member" : "akka.projection.testkit.javadsl.TestSourceProvider.withAllowCompletion", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#withAllowCompletion(allowCompletion:Boolean):akka.projection.testkit.javadsl.TestSourceProvider[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withExtractCreationTimeFunction", "tail" : "(extractCreationTimeFn: Function[Envelope, Long]): TestSourceProvider[Offset, Envelope]", "member" : "akka.projection.testkit.javadsl.TestSourceProvider.withExtractCreationTimeFunction", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#withExtractCreationTimeFunction(extractCreationTimeFn:java.util.function.Function[Envelope,Long]):akka.projection.testkit.javadsl.TestSourceProvider[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "verifyOffset", "tail" : "(offset: Offset): OffsetVerification", "member" : "akka.projection.javadsl.VerifiableSourceProvider.verifyOffset", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#verifyOffset(offset:Offset):akka.projection.OffsetVerification", "kind" : "abstract def"}, {"label" : "extractCreationTime", "tail" : "(envelope: Envelope): Long", "member" : "akka.projection.javadsl.SourceProvider.extractCreationTime", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#extractCreationTime(envelope:Envelope):Long", "kind" : "abstract def"}, {"label" : "extractOffset", "tail" : "(envelope: Envelope): Offset", "member" : "akka.projection.javadsl.SourceProvider.extractOffset", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#extractOffset(envelope:Envelope):Offset", "kind" : "abstract def"}, {"label" : "source", "tail" : "(offset: Supplier[CompletionStage[Optional[Offset]]]): CompletionStage[Source[Envelope, NotUsed]]", "member" : "akka.projection.javadsl.SourceProvider.source", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html#source(offset:java.util.function.Supplier[java.util.concurrent.CompletionStage[java.util.Optional[Offset]]]):java.util.concurrent.CompletionStage[akka.stream.javadsl.Source[Envelope,akka.NotUsed]]", "kind" : "abstract def"}], "members_object" : [{"label" : "create", "tail" : "(sourceEvents: Source[Envelope, NotUsed], extractOffset: Function[Envelope, Offset]): TestSourceProvider[Offset, Envelope]", "member" : "akka.projection.testkit.javadsl.TestSourceProvider.create", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#create[Offset,Envelope](sourceEvents:akka.stream.javadsl.Source[Envelope,akka.NotUsed],extractOffset:java.util.function.Function[Envelope,Offset]):akka.projection.testkit.javadsl.TestSourceProvider[Offset,Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/testkit\/javadsl\/TestSourceProvider.html", "kind" : "class"}], "akka.projection.state.javadsl" : [{"name" : "akka.projection.state.javadsl.DurableStateSourceProvider", "shortDescription" : "API may change", "object" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html", "members_object" : [{"label" : "sliceRanges", "tail" : "(system: ActorSystem[_], durableStateStoreQueryPluginId: String, numberOfRanges: Int): List[Pair[Integer, Integer]]", "member" : "akka.projection.state.javadsl.DurableStateSourceProvider.sliceRanges", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#sliceRanges(system:akka.actor.typed.ActorSystem[_],durableStateStoreQueryPluginId:String,numberOfRanges:Int):java.util.List[akka.japi.Pair[Integer,Integer]]", "kind" : "def"}, {"label" : "sliceForPersistenceId", "tail" : "(system: ActorSystem[_], durableStateStoreQueryPluginId: String, persistenceId: String): Int", "member" : "akka.projection.state.javadsl.DurableStateSourceProvider.sliceForPersistenceId", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#sliceForPersistenceId(system:akka.actor.typed.ActorSystem[_],durableStateStoreQueryPluginId:String,persistenceId:String):Int", "kind" : "def"}, {"label" : "changesBySlices", "tail" : "(system: ActorSystem[_], durableStateStoreQuery: DurableStateStoreBySliceQuery[A], entityType: String, minSlice: Int, maxSlice: Int): SourceProvider[Offset, DurableStateChange[A]]", "member" : "akka.projection.state.javadsl.DurableStateSourceProvider.changesBySlices", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#changesBySlices[A](system:akka.actor.typed.ActorSystem[_],durableStateStoreQuery:akka.persistence.query.typed.javadsl.DurableStateStoreBySliceQuery[A],entityType:String,minSlice:Int,maxSlice:Int):akka.projection.javadsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.DurableStateChange[A]]", "kind" : "def"}, {"label" : "changesBySlices", "tail" : "(system: ActorSystem[_], durableStateStoreQueryPluginId: String, entityType: String, minSlice: Int, maxSlice: Int): SourceProvider[Offset, DurableStateChange[A]]", "member" : "akka.projection.state.javadsl.DurableStateSourceProvider.changesBySlices", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#changesBySlices[A](system:akka.actor.typed.ActorSystem[_],durableStateStoreQueryPluginId:String,entityType:String,minSlice:Int,maxSlice:Int):akka.projection.javadsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.DurableStateChange[A]]", "kind" : "def"}, {"label" : "changesByTag", "tail" : "(system: ActorSystem[_], durableStateStoreQuery: DurableStateStoreQuery[A], tag: String): SourceProvider[Offset, DurableStateChange[A]]", "member" : "akka.projection.state.javadsl.DurableStateSourceProvider.changesByTag", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#changesByTag[A](system:akka.actor.typed.ActorSystem[_],durableStateStoreQuery:akka.persistence.query.javadsl.DurableStateStoreQuery[A],tag:String):akka.projection.javadsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.DurableStateChange[A]]", "kind" : "def"}, {"label" : "changesByTag", "tail" : "(system: ActorSystem[_], pluginId: String, tag: String): SourceProvider[Offset, DurableStateChange[A]]", "member" : "akka.projection.state.javadsl.DurableStateSourceProvider.changesByTag", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#changesByTag[A](system:akka.actor.typed.ActorSystem[_],pluginId:String,tag:String):akka.projection.javadsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.DurableStateChange[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/state\/javadsl\/DurableStateSourceProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.eventsourced.javadsl" : [{"name" : "akka.projection.eventsourced.javadsl.EventSourcedProvider", "shortDescription" : "", "object" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html", "members_object" : [{"label" : "sliceRanges", "tail" : "(system: ActorSystem[_], readJournalPluginId: String, numberOfRanges: Int): List[Pair[Integer, Integer]]", "member" : "akka.projection.eventsourced.javadsl.EventSourcedProvider.sliceRanges", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#sliceRanges(system:akka.actor.typed.ActorSystem[_],readJournalPluginId:String,numberOfRanges:Int):java.util.List[akka.japi.Pair[Integer,Integer]]", "kind" : "def"}, {"label" : "sliceForPersistenceId", "tail" : "(system: ActorSystem[_], readJournalPluginId: String, persistenceId: String): Int", "member" : "akka.projection.eventsourced.javadsl.EventSourcedProvider.sliceForPersistenceId", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#sliceForPersistenceId(system:akka.actor.typed.ActorSystem[_],readJournalPluginId:String,persistenceId:String):Int", "kind" : "def"}, {"label" : "eventsBySlices", "tail" : "(system: ActorSystem[_], eventsBySlicesQuery: EventsBySliceQuery, entityType: String, minSlice: Int, maxSlice: Int): SourceProvider[Offset, persistence.query.typed.EventEnvelope[Event]]", "member" : "akka.projection.eventsourced.javadsl.EventSourcedProvider.eventsBySlices", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#eventsBySlices[Event](system:akka.actor.typed.ActorSystem[_],eventsBySlicesQuery:akka.persistence.query.typed.javadsl.EventsBySliceQuery,entityType:String,minSlice:Int,maxSlice:Int):akka.projection.javadsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.typed.EventEnvelope[Event]]", "kind" : "def"}, {"label" : "eventsBySlices", "tail" : "(system: ActorSystem[_], readJournalPluginId: String, entityType: String, minSlice: Int, maxSlice: Int): SourceProvider[Offset, persistence.query.typed.EventEnvelope[Event]]", "member" : "akka.projection.eventsourced.javadsl.EventSourcedProvider.eventsBySlices", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#eventsBySlices[Event](system:akka.actor.typed.ActorSystem[_],readJournalPluginId:String,entityType:String,minSlice:Int,maxSlice:Int):akka.projection.javadsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.typed.EventEnvelope[Event]]", "kind" : "def"}, {"label" : "eventsByTag", "tail" : "(system: ActorSystem[_], eventsByTagQuery: EventsByTagQuery, tag: String): SourceProvider[Offset, EventEnvelope[Event]]", "member" : "akka.projection.eventsourced.javadsl.EventSourcedProvider.eventsByTag", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#eventsByTag[Event](system:akka.actor.typed.ActorSystem[_],eventsByTagQuery:akka.persistence.query.javadsl.EventsByTagQuery,tag:String):akka.projection.javadsl.SourceProvider[akka.persistence.query.Offset,akka.projection.eventsourced.EventEnvelope[Event]]", "kind" : "def"}, {"label" : "eventsByTag", "tail" : "(system: ActorSystem[_], readJournalPluginId: String, tag: String): SourceProvider[Offset, EventEnvelope[Event]]", "member" : "akka.projection.eventsourced.javadsl.EventSourcedProvider.eventsByTag", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#eventsByTag[Event](system:akka.actor.typed.ActorSystem[_],readJournalPluginId:String,tag:String):akka.projection.javadsl.SourceProvider[akka.persistence.query.Offset,akka.projection.eventsourced.EventEnvelope[Event]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/eventsourced\/javadsl\/EventSourcedProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.kafka" : [{"name" : "akka.projection.kafka.KafkaOffsets", "shortDescription" : "", "object" : "akka\/projection\/kafka\/KafkaOffsets$.html", "members_object" : [{"label" : "partitions", "tail" : "(groupOffsets: MergeableOffset[Long]): Set[TopicPartition]", "member" : "akka.projection.kafka.KafkaOffsets.partitions", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#partitions(groupOffsets:akka.projection.MergeableOffset[Long]):Set[org.apache.kafka.common.TopicPartition]", "kind" : "def"}, {"label" : "keyToPartition", "tail" : "(key: String): TopicPartition", "member" : "akka.projection.kafka.KafkaOffsets.keyToPartition", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#keyToPartition(key:String):org.apache.kafka.common.TopicPartition", "kind" : "def"}, {"label" : "partitionToKey", "tail" : "(tp: TopicPartition): String", "member" : "akka.projection.kafka.KafkaOffsets.partitionToKey", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#partitionToKey(tp:org.apache.kafka.common.TopicPartition):String", "kind" : "def"}, {"label" : "partitionToKey", "tail" : "(topic: String, partition: Int): String", "member" : "akka.projection.kafka.KafkaOffsets.partitionToKey", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#partitionToKey(topic:String,partition:Int):String", "kind" : "def"}, {"label" : "toMergeableOffset", "tail" : "(record: ConsumerRecord[_, _]): MergeableOffset[Long]", "member" : "akka.projection.kafka.KafkaOffsets.toMergeableOffset", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#toMergeableOffset(record:org.apache.kafka.clients.consumer.ConsumerRecord[_,_]):akka.projection.MergeableOffset[Long]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/kafka\/KafkaOffsets$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.eventsourced" : [{"name" : "akka.projection.eventsourced.EventEnvelope", "shortDescription" : "", "object" : "akka\/projection\/eventsourced\/EventEnvelope$.html", "members_class" : [{"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "akka.projection.eventsourced.EventEnvelope.equals", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "akka.projection.eventsourced.EventEnvelope.hashCode", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#hashCode():Int", "kind" : "def"}, {"member" : "akka.projection.eventsourced.EventEnvelope#<init>", "error" : "unsupported entity"}, {"label" : "timestamp", "tail" : ": Long", "member" : "akka.projection.eventsourced.EventEnvelope.timestamp", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#timestamp:Long", "kind" : "val"}, {"label" : "event", "tail" : ": Event", "member" : "akka.projection.eventsourced.EventEnvelope.event", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#event:Event", "kind" : "val"}, {"label" : "sequenceNr", "tail" : ": Long", "member" : "akka.projection.eventsourced.EventEnvelope.sequenceNr", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#sequenceNr:Long", "kind" : "val"}, {"label" : "persistenceId", "tail" : ": String", "member" : "akka.projection.eventsourced.EventEnvelope.persistenceId", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#persistenceId:String", "kind" : "val"}, {"label" : "offset", "tail" : ": Offset", "member" : "akka.projection.eventsourced.EventEnvelope.offset", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#offset:akka.persistence.query.Offset", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/eventsourced\/EventEnvelope.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(arg: EventEnvelope[Event]): Option[(Offset, String, Long, Event, Long)]", "member" : "akka.projection.eventsourced.EventEnvelope.unapply", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#unapply[Event](arg:akka.projection.eventsourced.EventEnvelope[Event]):Option[(akka.persistence.query.Offset,String,Long,Event,Long)]", "kind" : "def"}, {"label" : "create", "tail" : "(offset: Offset, persistenceId: String, sequenceNr: Long, event: Event, timestamp: Long): EventEnvelope[Event]", "member" : "akka.projection.eventsourced.EventEnvelope.create", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#create[Event](offset:akka.persistence.query.Offset,persistenceId:String,sequenceNr:Long,event:Event,timestamp:Long):akka.projection.eventsourced.EventEnvelope[Event]", "kind" : "def"}, {"label" : "apply", "tail" : "(offset: Offset, persistenceId: String, sequenceNr: Long, event: Event, timestamp: Long): EventEnvelope[Event]", "member" : "akka.projection.eventsourced.EventEnvelope.apply", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#apply[Event](offset:akka.persistence.query.Offset,persistenceId:String,sequenceNr:Long,event:Event,timestamp:Long):akka.projection.eventsourced.EventEnvelope[Event]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/eventsourced\/EventEnvelope$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/eventsourced\/EventEnvelope.html", "kind" : "class"}], "akka.projection.testkit" : [], "akka.projection.jdbc" : [{"name" : "akka.projection.jdbc.JdbcHandlerLifecycle", "trait" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html", "kind" : "trait", "members_trait" : [{"label" : "stop", "tail" : "(): Unit", "member" : "akka.projection.jdbc.JdbcHandlerLifecycle.stop", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#stop():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "akka.projection.jdbc.JdbcHandlerLifecycle.start", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#start():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/jdbc\/JdbcHandlerLifecycle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "akka.projection.jdbc.JdbcSession", "trait" : "akka\/projection\/jdbc\/JdbcSession.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/jdbc\/JdbcSession.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/jdbc\/JdbcSession.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/jdbc\/JdbcSession.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/jdbc\/JdbcSession.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/jdbc\/JdbcSession.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/jdbc\/JdbcSession.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/jdbc\/JdbcSession.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/JdbcSession.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/JdbcSession.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/JdbcSession.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/jdbc\/JdbcSession.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/jdbc\/JdbcSession.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/jdbc\/JdbcSession.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/jdbc\/JdbcSession.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/jdbc\/JdbcSession.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/jdbc\/JdbcSession.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/jdbc\/JdbcSession.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/jdbc\/JdbcSession.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/jdbc\/JdbcSession.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "close", "tail" : "(): Unit", "member" : "akka.projection.jdbc.JdbcSession.close", "link" : "akka\/projection\/jdbc\/JdbcSession.html#close():Unit", "kind" : "abstract def"}, {"label" : "rollback", "tail" : "(): Unit", "member" : "akka.projection.jdbc.JdbcSession.rollback", "link" : "akka\/projection\/jdbc\/JdbcSession.html#rollback():Unit", "kind" : "abstract def"}, {"label" : "commit", "tail" : "(): Unit", "member" : "akka.projection.jdbc.JdbcSession.commit", "link" : "akka\/projection\/jdbc\/JdbcSession.html#commit():Unit", "kind" : "abstract def"}, {"label" : "withConnection", "tail" : "(func: Function[Connection, Result]): Result", "member" : "akka.projection.jdbc.JdbcSession.withConnection", "link" : "akka\/projection\/jdbc\/JdbcSession.html#withConnection[Result](func:akka.japi.function.Function[java.sql.Connection,Result]):Result", "kind" : "abstract def"}], "shortDescription" : "Generic interface to give access to basic JDBC connection operations."}], "akka.projection.kafka.javadsl" : [{"name" : "akka.projection.kafka.javadsl.KafkaSourceProvider", "shortDescription" : "", "object" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html", "members_object" : [{"label" : "create", "tail" : "(system: ActorSystem[_], settings: ConsumerSettings[K, V], topics: Set[String]): SourceProvider[MergeableOffset[Long], ConsumerRecord[K, V]]", "member" : "akka.projection.kafka.javadsl.KafkaSourceProvider.create", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#create[K,V](system:akka.actor.typed.ActorSystem[_],settings:akka.kafka.ConsumerSettings[K,V],topics:java.util.Set[String]):akka.projection.javadsl.SourceProvider[akka.projection.MergeableOffset[Long],org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/kafka\/javadsl\/KafkaSourceProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.javadsl" : [{"name" : "akka.projection.javadsl.ActorHandler", "shortDescription" : "This Handler gives support for spawning an actor of a given Behavior to delegateprocessing of the envelopes to the actor.", "members_class" : [{"label" : "process", "tail" : "(envelope: Envelope): CompletionStage[Done]", "member" : "akka.projection.javadsl.ActorHandler.process", "link" : "akka\/projection\/javadsl\/ActorHandler.html#process(envelope:Envelope):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "final def"}, {"member" : "akka.projection.javadsl.ActorHandler#<init>", "error" : "unsupported entity"}, {"label" : "behavior", "tail" : ": Behavior[T]", "member" : "akka.projection.javadsl.ActorHandler.behavior", "link" : "akka\/projection\/javadsl\/ActorHandler.html#behavior:akka.actor.typed.Behavior[T]", "kind" : "val"}, {"label" : "stop", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.Handler.stop", "link" : "akka\/projection\/javadsl\/ActorHandler.html#stop():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "start", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.Handler.start", "link" : "akka\/projection\/javadsl\/ActorHandler.html#start():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/ActorHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/ActorHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/ActorHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/ActorHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/ActorHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/ActorHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/ActorHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ActorHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ActorHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ActorHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/ActorHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/ActorHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/ActorHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/ActorHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/ActorHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/ActorHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/ActorHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/ActorHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/ActorHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(actor: ActorRef[T], envelope: Envelope): CompletionStage[Done]", "member" : "akka.projection.javadsl.ActorHandler.process", "link" : "akka\/projection\/javadsl\/ActorHandler.html#process(actor:akka.actor.typed.ActorRef[T],envelope:Envelope):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}], "class" : "akka\/projection\/javadsl\/ActorHandler.html", "kind" : "class"}, {"name" : "akka.projection.javadsl.AtLeastOnceFlowProjection", "trait" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withSaveOffset", "tail" : "(afterEnvelopes: Int, afterDuration: Duration): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtLeastOnceFlowProjection.withSaveOffset", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#withSaveOffset(afterEnvelopes:Int,afterDuration:java.time.Duration):akka.projection.javadsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtLeastOnceFlowProjection.withStatusObserver", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.javadsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtLeastOnceFlowProjection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.javadsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtLeastOnceFlowProjection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.javadsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/javadsl\/AtLeastOnceFlowProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.javadsl.AtLeastOnceProjection", "trait" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtLeastOnceProjection.withRecoveryStrategy", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.javadsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withSaveOffset", "tail" : "(afterEnvelopes: Int, afterDuration: Duration): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtLeastOnceProjection.withSaveOffset", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#withSaveOffset(afterEnvelopes:Int,afterDuration:java.time.Duration):akka.projection.javadsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtLeastOnceProjection.withStatusObserver", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.javadsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtLeastOnceProjection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.javadsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtLeastOnceProjection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.javadsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/javadsl\/AtLeastOnceProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.javadsl.AtMostOnceProjection", "trait" : "akka\/projection\/javadsl\/AtMostOnceProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: StrictRecoveryStrategy): AtMostOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtMostOnceProjection.withRecoveryStrategy", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.StrictRecoveryStrategy):akka.projection.javadsl.AtMostOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtMostOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtMostOnceProjection.withStatusObserver", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.javadsl.AtMostOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): AtMostOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtMostOnceProjection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.javadsl.AtMostOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): AtMostOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.AtMostOnceProjection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.javadsl.AtMostOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/javadsl\/AtMostOnceProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.javadsl.ExactlyOnceProjection", "trait" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.ExactlyOnceProjection.withRecoveryStrategy", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.javadsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.ExactlyOnceProjection.withStatusObserver", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.javadsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.ExactlyOnceProjection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.javadsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.ExactlyOnceProjection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.javadsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/javadsl\/ExactlyOnceProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.javadsl.GroupedProjection", "trait" : "akka\/projection\/javadsl\/GroupedProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/GroupedProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.GroupedProjection.withRecoveryStrategy", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.javadsl.GroupedProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withGroup", "tail" : "(groupAfterEnvelopes: Int, groupAfterDuration: Duration): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.GroupedProjection.withGroup", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#withGroup(groupAfterEnvelopes:Int,groupAfterDuration:java.time.Duration):akka.projection.javadsl.GroupedProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.GroupedProjection.withStatusObserver", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.javadsl.GroupedProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.GroupedProjection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.javadsl.GroupedProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.javadsl.GroupedProjection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.javadsl.GroupedProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/javadsl\/GroupedProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.javadsl.Handler", "shortDescription" : "Implement this interface for the Envelope handler in the Projection.", "object" : "akka\/projection\/javadsl\/Handler$.html", "members_class" : [{"label" : "stop", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.Handler.stop", "link" : "akka\/projection\/javadsl\/Handler.html#stop():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "start", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.Handler.start", "link" : "akka\/projection\/javadsl\/Handler.html#start():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"member" : "akka.projection.javadsl.Handler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/Handler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/Handler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/Handler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/Handler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/Handler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/Handler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/Handler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/Handler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/Handler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/Handler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/Handler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/Handler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/Handler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/Handler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/Handler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/Handler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(envelope: Envelope): CompletionStage[Done]", "member" : "akka.projection.javadsl.Handler.process", "link" : "akka\/projection\/javadsl\/Handler.html#process(envelope:Envelope):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}], "members_object" : [{"label" : "fromFunction", "tail" : "(handler: (Envelope) => CompletionStage[Done]): Handler[Envelope]", "member" : "akka.projection.javadsl.Handler.fromFunction", "link" : "akka\/projection\/javadsl\/Handler$.html#fromFunction[Envelope](handler:Envelope=>java.util.concurrent.CompletionStage[akka.Done]):akka.projection.javadsl.Handler[Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/Handler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/Handler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/Handler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/Handler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/Handler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/Handler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/Handler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/Handler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/Handler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/Handler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/Handler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/Handler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/Handler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/Handler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/Handler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/Handler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/Handler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/javadsl\/Handler.html", "kind" : "class"}, {"name" : "akka.projection.javadsl.HandlerLifecycle", "trait" : "akka\/projection\/javadsl\/HandlerLifecycle.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stop", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.HandlerLifecycle.stop", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#stop():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}, {"label" : "start", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.HandlerLifecycle.start", "link" : "akka\/projection\/javadsl\/HandlerLifecycle.html#start():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.javadsl.MergeableOffsetSourceProvider", "trait" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractCreationTime", "tail" : "(envelope: Envelope): Long", "member" : "akka.projection.javadsl.SourceProvider.extractCreationTime", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#extractCreationTime(envelope:Envelope):Long", "kind" : "abstract def"}, {"label" : "extractOffset", "tail" : "(envelope: Envelope): Offset", "member" : "akka.projection.javadsl.SourceProvider.extractOffset", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#extractOffset(envelope:Envelope):Offset", "kind" : "abstract def"}, {"label" : "source", "tail" : "(offset: Supplier[CompletionStage[Optional[Offset]]]): CompletionStage[Source[Envelope, NotUsed]]", "member" : "akka.projection.javadsl.SourceProvider.source", "link" : "akka\/projection\/javadsl\/MergeableOffsetSourceProvider.html#source(offset:java.util.function.Supplier[java.util.concurrent.CompletionStage[java.util.Optional[Offset]]]):java.util.concurrent.CompletionStage[akka.stream.javadsl.Source[Envelope,akka.NotUsed]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.javadsl.ProjectionManagement", "shortDescription" : "", "object" : "akka\/projection\/javadsl\/ProjectionManagement$.html", "members_class" : [{"label" : "resume", "tail" : "(projectionId: ProjectionId): CompletionStage[Done]", "member" : "akka.projection.javadsl.ProjectionManagement.resume", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#resume(projectionId:akka.projection.ProjectionId):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "pause", "tail" : "(projectionId: ProjectionId): CompletionStage[Done]", "member" : "akka.projection.javadsl.ProjectionManagement.pause", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#pause(projectionId:akka.projection.ProjectionId):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "isPaused", "tail" : "(projectionId: ProjectionId): CompletionStage[Boolean]", "member" : "akka.projection.javadsl.ProjectionManagement.isPaused", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#isPaused(projectionId:akka.projection.ProjectionId):java.util.concurrent.CompletionStage[Boolean]", "kind" : "def"}, {"label" : "clearOffset", "tail" : "(projectionId: ProjectionId): CompletionStage[Done]", "member" : "akka.projection.javadsl.ProjectionManagement.clearOffset", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#clearOffset(projectionId:akka.projection.ProjectionId):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "updateOffset", "tail" : "(projectionId: ProjectionId, offset: Offset): CompletionStage[Done]", "member" : "akka.projection.javadsl.ProjectionManagement.updateOffset", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#updateOffset[Offset](projectionId:akka.projection.ProjectionId,offset:Offset):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "getOffset", "tail" : "(projectionId: ProjectionId): CompletionStage[Optional[Offset]]", "member" : "akka.projection.javadsl.ProjectionManagement.getOffset", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#getOffset[Offset](projectionId:akka.projection.ProjectionId):java.util.concurrent.CompletionStage[java.util.Optional[Offset]]", "kind" : "def"}, {"member" : "akka.projection.javadsl.ProjectionManagement#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/ProjectionManagement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "get", "tail" : "(system: ActorSystem[_]): ProjectionManagement", "member" : "akka.projection.javadsl.ProjectionManagement.get", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#get(system:akka.actor.typed.ActorSystem[_]):akka.projection.javadsl.ProjectionManagement", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/ProjectionManagement$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/javadsl\/ProjectionManagement.html", "kind" : "class"}, {"name" : "akka.projection.javadsl.SourceProvider", "shortDescription" : "", "members_class" : [{"member" : "akka.projection.javadsl.SourceProvider#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/SourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/SourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/SourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/SourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/SourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/SourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/SourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/SourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/SourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/SourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/SourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/SourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/SourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/SourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/SourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/SourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/SourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/SourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/SourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractCreationTime", "tail" : "(envelope: Envelope): Long", "member" : "akka.projection.javadsl.SourceProvider.extractCreationTime", "link" : "akka\/projection\/javadsl\/SourceProvider.html#extractCreationTime(envelope:Envelope):Long", "kind" : "abstract def"}, {"label" : "extractOffset", "tail" : "(envelope: Envelope): Offset", "member" : "akka.projection.javadsl.SourceProvider.extractOffset", "link" : "akka\/projection\/javadsl\/SourceProvider.html#extractOffset(envelope:Envelope):Offset", "kind" : "abstract def"}, {"label" : "source", "tail" : "(offset: Supplier[CompletionStage[Optional[Offset]]]): CompletionStage[Source[Envelope, NotUsed]]", "member" : "akka.projection.javadsl.SourceProvider.source", "link" : "akka\/projection\/javadsl\/SourceProvider.html#source(offset:java.util.function.Supplier[java.util.concurrent.CompletionStage[java.util.Optional[Offset]]]):java.util.concurrent.CompletionStage[akka.stream.javadsl.Source[Envelope,akka.NotUsed]]", "kind" : "abstract def"}], "class" : "akka\/projection\/javadsl\/SourceProvider.html", "kind" : "class"}, {"name" : "akka.projection.javadsl.StatefulHandler", "shortDescription" : "", "members_class" : [{"label" : "process", "tail" : "(envelope: Envelope): CompletionStage[Done]", "member" : "akka.projection.javadsl.StatefulHandler.process", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#process(envelope:Envelope):java.util.concurrent.CompletionStage[akka.Done]", "kind" : "final def"}, {"label" : "start", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.StatefulHandler.start", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#start():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "final def"}, {"member" : "akka.projection.javadsl.StatefulHandler#<init>", "error" : "unsupported entity"}, {"label" : "stop", "tail" : "(): CompletionStage[Done]", "member" : "akka.projection.javadsl.Handler.stop", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#stop():java.util.concurrent.CompletionStage[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/StatefulHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(state: State, envelope: Envelope): CompletionStage[State]", "member" : "akka.projection.javadsl.StatefulHandler.process", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#process(state:State,envelope:Envelope):java.util.concurrent.CompletionStage[State]", "kind" : "abstract def"}, {"label" : "initialState", "tail" : "(): CompletionStage[State]", "member" : "akka.projection.javadsl.StatefulHandler.initialState", "link" : "akka\/projection\/javadsl\/StatefulHandler.html#initialState():java.util.concurrent.CompletionStage[State]", "kind" : "abstract def"}], "class" : "akka\/projection\/javadsl\/StatefulHandler.html", "kind" : "class"}, {"name" : "akka.projection.javadsl.VerifiableSourceProvider", "trait" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "verifyOffset", "tail" : "(offset: Offset): OffsetVerification", "member" : "akka.projection.javadsl.VerifiableSourceProvider.verifyOffset", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#verifyOffset(offset:Offset):akka.projection.OffsetVerification", "kind" : "abstract def"}, {"label" : "extractCreationTime", "tail" : "(envelope: Envelope): Long", "member" : "akka.projection.javadsl.SourceProvider.extractCreationTime", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#extractCreationTime(envelope:Envelope):Long", "kind" : "abstract def"}, {"label" : "extractOffset", "tail" : "(envelope: Envelope): Offset", "member" : "akka.projection.javadsl.SourceProvider.extractOffset", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#extractOffset(envelope:Envelope):Offset", "kind" : "abstract def"}, {"label" : "source", "tail" : "(offset: Supplier[CompletionStage[Optional[Offset]]]): CompletionStage[Source[Envelope, NotUsed]]", "member" : "akka.projection.javadsl.SourceProvider.source", "link" : "akka\/projection\/javadsl\/VerifiableSourceProvider.html#source(offset:java.util.function.Supplier[java.util.concurrent.CompletionStage[java.util.Optional[Offset]]]):java.util.concurrent.CompletionStage[akka.stream.javadsl.Source[Envelope,akka.NotUsed]]", "kind" : "abstract def"}], "shortDescription" : ""}], "akka.projection.jdbc.scaladsl" : [{"name" : "akka.projection.jdbc.scaladsl.JdbcHandler", "object" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html", "members_object" : [{"label" : "apply", "tail" : "(handler: (S, Envelope) => Unit): JdbcHandler[Envelope, S]", "member" : "akka.projection.jdbc.scaladsl.JdbcHandler.apply", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#apply[S<:akka.projection.jdbc.JdbcSession,Envelope](handler:(S,Envelope)=>Unit):akka.projection.jdbc.scaladsl.JdbcHandler[Envelope,S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html", "kind" : "trait", "members_trait" : [{"label" : "stop", "tail" : "(): Unit", "member" : "akka.projection.jdbc.JdbcHandlerLifecycle.stop", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#stop():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "akka.projection.jdbc.JdbcHandlerLifecycle.start", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#start():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(session: S, envelope: Envelope): Unit", "member" : "akka.projection.jdbc.scaladsl.JdbcHandler.process", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcHandler.html#process(session:S,envelope:Envelope):Unit", "kind" : "abstract def"}], "shortDescription" : "Implement this interface for the Envelope handler for  Jdbc Projections."}, {"name" : "akka.projection.jdbc.scaladsl.JdbcProjection", "shortDescription" : "", "object" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html", "members_object" : [{"label" : "dropOffsetTableIfExists", "tail" : "(sessionFactory: () => S)(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.jdbc.scaladsl.JdbcProjection.dropOffsetTableIfExists", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#dropOffsetTableIfExists[S<:akka.projection.jdbc.JdbcSession](sessionFactory:()=>S)(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "dropTablesIfExists", "tail" : "(sessionFactory: () => S)(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.jdbc.scaladsl.JdbcProjection.dropTablesIfExists", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#dropTablesIfExists[S<:akka.projection.jdbc.JdbcSession](sessionFactory:()=>S)(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "createOffsetTableIfNotExists", "tail" : "(sessionFactory: () => S)(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.jdbc.scaladsl.JdbcProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#createOffsetTableIfNotExists[S<:akka.projection.jdbc.JdbcSession](sessionFactory:()=>S)(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "createTablesIfNotExists", "tail" : "(sessionFactory: () => S)(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.jdbc.scaladsl.JdbcProjection.createTablesIfNotExists", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#createTablesIfNotExists[S<:akka.projection.jdbc.JdbcSession](sessionFactory:()=>S)(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "atLeastOnceFlow", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionFactory: () => S, handler: FlowWithContext[Envelope, ProjectionContext, Done, ProjectionContext, _])(system: ActorSystem[_]): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.scaladsl.JdbcProjection.atLeastOnceFlow", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#atLeastOnceFlow[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],sessionFactory:()=>S,handler:akka.stream.scaladsl.FlowWithContext[Envelope,akka.projection.ProjectionContext,akka.Done,akka.projection.ProjectionContext,_])(implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "groupedWithinAsync", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionFactory: () => S, handler: () => Handler[Seq[Envelope]])(system: ActorSystem[_]): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.scaladsl.JdbcProjection.groupedWithinAsync", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#groupedWithinAsync[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],sessionFactory:()=>S,handler:()=>akka.projection.scaladsl.Handler[Seq[Envelope]])(implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.GroupedProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionFactory: () => S, handler: () => JdbcHandler[Seq[Envelope], S])(system: ActorSystem[_]): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.scaladsl.JdbcProjection.groupedWithin", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#groupedWithin[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],sessionFactory:()=>S,handler:()=>akka.projection.jdbc.scaladsl.JdbcHandler[Seq[Envelope],S])(implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.GroupedProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "atLeastOnceAsync", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionFactory: () => S, handler: () => Handler[Envelope])(system: ActorSystem[_]): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.scaladsl.JdbcProjection.atLeastOnceAsync", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#atLeastOnceAsync[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],sessionFactory:()=>S,handler:()=>akka.projection.scaladsl.Handler[Envelope])(implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "atLeastOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionFactory: () => S, handler: () => JdbcHandler[Envelope, S])(system: ActorSystem[_]): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.scaladsl.JdbcProjection.atLeastOnce", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#atLeastOnce[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],sessionFactory:()=>S,handler:()=>akka.projection.jdbc.scaladsl.JdbcHandler[Envelope,S])(implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "exactlyOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], sessionFactory: () => S, handler: () => JdbcHandler[Envelope, S])(system: ActorSystem[_]): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.jdbc.scaladsl.JdbcProjection.exactlyOnce", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#exactlyOnce[Offset,Envelope,S<:akka.projection.jdbc.JdbcSession](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],sessionFactory:()=>S,handler:()=>akka.projection.jdbc.scaladsl.JdbcHandler[Envelope,S])(implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/jdbc\/scaladsl\/JdbcProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.testkit.scaladsl" : [{"name" : "akka.projection.testkit.scaladsl.ProjectionTestKit", "shortDescription" : "", "object" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html", "members_class" : [{"label" : "runWithTestSink", "tail" : "(projection: Projection[_])(assertFunction: (Probe[Done]) => Unit): Unit", "member" : "akka.projection.testkit.scaladsl.ProjectionTestKit.runWithTestSink", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#runWithTestSink(projection:akka.projection.Projection[_])(assertFunction:akka.stream.testkit.TestSubscriber.Probe[akka.Done]=>Unit):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_], max: FiniteDuration, interval: FiniteDuration)(assertFunction: => Unit): Unit", "member" : "akka.projection.testkit.scaladsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_],max:scala.concurrent.duration.FiniteDuration,interval:scala.concurrent.duration.FiniteDuration)(assertFunction:=>Unit):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_], max: FiniteDuration)(assertFunction: => Unit): Unit", "member" : "akka.projection.testkit.scaladsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_],max:scala.concurrent.duration.FiniteDuration)(assertFunction:=>Unit):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(projection: Projection[_])(assertFunction: => Unit): Unit", "member" : "akka.projection.testkit.scaladsl.ProjectionTestKit.run", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#run(projection:akka.projection.Projection[_])(assertFunction:=>Unit):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(system: ActorSystem[_]): ProjectionTestKit", "member" : "akka.projection.testkit.scaladsl.ProjectionTestKit.apply", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#apply(system:akka.actor.typed.ActorSystem[_]):akka.projection.testkit.scaladsl.ProjectionTestKit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/testkit\/scaladsl\/ProjectionTestKit.html", "kind" : "class"}, {"name" : "akka.projection.testkit.scaladsl.TestOffsetStore", "trait" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "savePaused", "tail" : "(projectionId: ProjectionId, paused: Boolean): Future[Done]", "member" : "akka.projection.testkit.scaladsl.TestOffsetStore.savePaused", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#savePaused(projectionId:akka.projection.ProjectionId,paused:Boolean):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "readManagementState", "tail" : "(projectionId: ProjectionId): Future[Option[ManagementState]]", "member" : "akka.projection.testkit.scaladsl.TestOffsetStore.readManagementState", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#readManagementState(projectionId:akka.projection.ProjectionId):scala.concurrent.Future[Option[akka.projection.internal.ManagementState]]", "kind" : "abstract def"}, {"label" : "saveOffset", "tail" : "(projectionId: ProjectionId, offset: Offset): Future[Done]", "member" : "akka.projection.testkit.scaladsl.TestOffsetStore.saveOffset", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#saveOffset(projectionId:akka.projection.ProjectionId,offset:Offset):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}, {"label" : "readOffsets", "tail" : "(): Future[Option[Offset]]", "member" : "akka.projection.testkit.scaladsl.TestOffsetStore.readOffsets", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#readOffsets():scala.concurrent.Future[Option[Offset]]", "kind" : "abstract def"}, {"label" : "allOffsets", "tail" : "(): List[(ProjectionId, Offset)]", "member" : "akka.projection.testkit.scaladsl.TestOffsetStore.allOffsets", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#allOffsets():List[(akka.projection.ProjectionId,Offset)]", "kind" : "abstract def"}, {"label" : "lastOffset", "tail" : "(): Option[Offset]", "member" : "akka.projection.testkit.scaladsl.TestOffsetStore.lastOffset", "link" : "akka\/projection\/testkit\/scaladsl\/TestOffsetStore.html#lastOffset():Option[Offset]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.testkit.scaladsl.TestProjection", "object" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html", "members_object" : [{"label" : "apply", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: () => Handler[Envelope]): TestProjection[Offset, Envelope]", "member" : "akka.projection.testkit.scaladsl.TestProjection.apply", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#apply[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],handler:()=>akka.projection.scaladsl.Handler[Envelope]):akka.projection.testkit.scaladsl.TestProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withOffsetStoreFactory", "tail" : "(factory: () => TestOffsetStore[Offset]): TestProjection[Offset, Envelope]", "member" : "akka.projection.testkit.scaladsl.TestProjection.withOffsetStoreFactory", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#withOffsetStoreFactory(factory:()=>akka.projection.testkit.scaladsl.TestOffsetStore[Offset]):akka.projection.testkit.scaladsl.TestProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStartOffset", "tail" : "(offset: Offset): TestProjection[Offset, Envelope]", "member" : "akka.projection.testkit.scaladsl.TestProjection.withStartOffset", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#withStartOffset(offset:Offset):akka.projection.testkit.scaladsl.TestProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): TestProjection[Offset, Envelope]", "member" : "akka.projection.testkit.scaladsl.TestProjection.withStatusObserver", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.testkit.scaladsl.TestProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/testkit\/scaladsl\/TestProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.testkit.scaladsl.TestSourceProvider", "object" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html", "members_object" : [{"label" : "apply", "tail" : "(sourceEvents: Source[Envelope, NotUsed], extractOffset: (Envelope) => Offset): TestSourceProvider[Offset, Envelope]", "member" : "akka.projection.testkit.scaladsl.TestSourceProvider.apply", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#apply[Offset,Envelope](sourceEvents:akka.stream.scaladsl.Source[Envelope,akka.NotUsed],extractOffset:Envelope=>Offset):akka.projection.testkit.scaladsl.TestSourceProvider[Offset,Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withStartSourceFrom", "tail" : "(startSourceFromFn: (Offset, Offset) => Boolean): TestSourceProvider[Offset, Envelope]", "member" : "akka.projection.testkit.scaladsl.TestSourceProvider.withStartSourceFrom", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#withStartSourceFrom(startSourceFromFn:(Offset,Offset)=>Boolean):akka.projection.testkit.scaladsl.TestSourceProvider[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withOffsetVerification", "tail" : "(verifyOffsetFn: (Offset) => OffsetVerification): TestSourceProvider[Offset, Envelope]", "member" : "akka.projection.testkit.scaladsl.TestSourceProvider.withOffsetVerification", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#withOffsetVerification(verifyOffsetFn:Offset=>akka.projection.OffsetVerification):akka.projection.testkit.scaladsl.TestSourceProvider[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withAllowCompletion", "tail" : "(allowCompletion: Boolean): TestSourceProvider[Offset, Envelope]", "member" : "akka.projection.testkit.scaladsl.TestSourceProvider.withAllowCompletion", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#withAllowCompletion(allowCompletion:Boolean):akka.projection.testkit.scaladsl.TestSourceProvider[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withExtractCreationTimeFunction", "tail" : "(extractCreationTimeFn: (Envelope) => Long): TestSourceProvider[Offset, Envelope]", "member" : "akka.projection.testkit.scaladsl.TestSourceProvider.withExtractCreationTimeFunction", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#withExtractCreationTimeFunction(extractCreationTimeFn:Envelope=>Long):akka.projection.testkit.scaladsl.TestSourceProvider[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "verifyOffset", "tail" : "(offset: Offset): OffsetVerification", "member" : "akka.projection.scaladsl.VerifiableSourceProvider.verifyOffset", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#verifyOffset(offset:Offset):akka.projection.OffsetVerification", "kind" : "abstract def"}, {"label" : "extractCreationTime", "tail" : "(envelope: Envelope): Long", "member" : "akka.projection.scaladsl.SourceProvider.extractCreationTime", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#extractCreationTime(envelope:Envelope):Long", "kind" : "abstract def"}, {"label" : "extractOffset", "tail" : "(envelope: Envelope): Offset", "member" : "akka.projection.scaladsl.SourceProvider.extractOffset", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#extractOffset(envelope:Envelope):Offset", "kind" : "abstract def"}, {"label" : "source", "tail" : "(offset: () => Future[Option[Offset]]): Future[Source[Envelope, NotUsed]]", "member" : "akka.projection.scaladsl.SourceProvider.source", "link" : "akka\/projection\/testkit\/scaladsl\/TestSourceProvider.html#source(offset:()=>scala.concurrent.Future[Option[Offset]]):scala.concurrent.Future[akka.stream.scaladsl.Source[Envelope,akka.NotUsed]]", "kind" : "abstract def"}], "shortDescription" : ""}], "akka.projection.scaladsl" : [{"name" : "akka.projection.scaladsl.ActorHandler", "shortDescription" : "This Handler gives support for spawning an actor of a given Behavior to delegateprocessing of the envelopes to the actor.", "members_class" : [{"label" : "process", "tail" : "(envelope: Envelope): Future[Done]", "member" : "akka.projection.scaladsl.ActorHandler.process", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#process(envelope:Envelope):scala.concurrent.Future[akka.Done]", "kind" : "final def"}, {"member" : "akka.projection.scaladsl.ActorHandler#<init>", "error" : "unsupported entity"}, {"label" : "behavior", "tail" : ": Behavior[T]", "member" : "akka.projection.scaladsl.ActorHandler.behavior", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#behavior:akka.actor.typed.Behavior[T]", "kind" : "val"}, {"label" : "stop", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.stop", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#stop():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "start", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.start", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#start():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/ActorHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(actor: ActorRef[T], envelope: Envelope): Future[Done]", "member" : "akka.projection.scaladsl.ActorHandler.process", "link" : "akka\/projection\/scaladsl\/ActorHandler.html#process(actor:akka.actor.typed.ActorRef[T],envelope:Envelope):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}], "class" : "akka\/projection\/scaladsl\/ActorHandler.html", "kind" : "class"}, {"name" : "akka.projection.scaladsl.AtLeastOnceFlowProjection", "trait" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withSaveOffset", "tail" : "(afterEnvelopes: Int, afterDuration: FiniteDuration): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtLeastOnceFlowProjection.withSaveOffset", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#withSaveOffset(afterEnvelopes:Int,afterDuration:scala.concurrent.duration.FiniteDuration):akka.projection.scaladsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtLeastOnceFlowProjection.withStatusObserver", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.scaladsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtLeastOnceFlowProjection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.scaladsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtLeastOnceFlowProjection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.scaladsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/scaladsl\/AtLeastOnceFlowProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.scaladsl.AtLeastOnceProjection", "trait" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtLeastOnceProjection.withRecoveryStrategy", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.scaladsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withSaveOffset", "tail" : "(afterEnvelopes: Int, afterDuration: FiniteDuration): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtLeastOnceProjection.withSaveOffset", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#withSaveOffset(afterEnvelopes:Int,afterDuration:scala.concurrent.duration.FiniteDuration):akka.projection.scaladsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtLeastOnceProjection.withStatusObserver", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.scaladsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtLeastOnceProjection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.scaladsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtLeastOnceProjection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.scaladsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/scaladsl\/AtLeastOnceProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.scaladsl.AtMostOnceProjection", "trait" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: StrictRecoveryStrategy): AtMostOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtMostOnceProjection.withRecoveryStrategy", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.StrictRecoveryStrategy):akka.projection.scaladsl.AtMostOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): AtMostOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtMostOnceProjection.withStatusObserver", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.scaladsl.AtMostOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): AtMostOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtMostOnceProjection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.scaladsl.AtMostOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): AtMostOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.AtMostOnceProjection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.scaladsl.AtMostOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/scaladsl\/AtMostOnceProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.scaladsl.ExactlyOnceProjection", "trait" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.ExactlyOnceProjection.withRecoveryStrategy", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.scaladsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.ExactlyOnceProjection.withStatusObserver", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.scaladsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.ExactlyOnceProjection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.scaladsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): ExactlyOnceProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.ExactlyOnceProjection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.scaladsl.ExactlyOnceProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/scaladsl\/ExactlyOnceProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.scaladsl.GroupedProjection", "trait" : "akka\/projection\/scaladsl\/GroupedProjection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withRecoveryStrategy", "tail" : "(recoveryStrategy: HandlerRecoveryStrategy): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.GroupedProjection.withRecoveryStrategy", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#withRecoveryStrategy(recoveryStrategy:akka.projection.HandlerRecoveryStrategy):akka.projection.scaladsl.GroupedProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withGroup", "tail" : "(groupAfterEnvelopes: Int, groupAfterDuration: FiniteDuration): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.GroupedProjection.withGroup", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#withGroup(groupAfterEnvelopes:Int,groupAfterDuration:scala.concurrent.duration.FiniteDuration):akka.projection.scaladsl.GroupedProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.GroupedProjection.withStatusObserver", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.scaladsl.GroupedProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.GroupedProjection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.scaladsl.GroupedProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.scaladsl.GroupedProjection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.scaladsl.GroupedProjection[Offset,Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/scaladsl\/GroupedProjection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.scaladsl.Handler", "object" : "akka\/projection\/scaladsl\/Handler$.html", "members_object" : [{"label" : "apply", "tail" : "(handler: (Envelope) => Future[Done]): Handler[Envelope]", "member" : "akka.projection.scaladsl.Handler.apply", "link" : "akka\/projection\/scaladsl\/Handler$.html#apply[Envelope](handler:Envelope=>scala.concurrent.Future[akka.Done]):akka.projection.scaladsl.Handler[Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/Handler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/Handler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/Handler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/Handler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/Handler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/Handler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/Handler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/Handler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/Handler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/Handler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/Handler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/Handler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/Handler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/Handler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/Handler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/Handler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/scaladsl\/Handler.html", "kind" : "trait", "members_trait" : [{"label" : "stop", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.stop", "link" : "akka\/projection\/scaladsl\/Handler.html#stop():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "start", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.start", "link" : "akka\/projection\/scaladsl\/Handler.html#start():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/Handler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/Handler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/Handler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/Handler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/Handler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/Handler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/Handler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/Handler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/Handler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/Handler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/Handler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/Handler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/Handler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/Handler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/Handler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/Handler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/Handler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(envelope: Envelope): Future[Done]", "member" : "akka.projection.scaladsl.Handler.process", "link" : "akka\/projection\/scaladsl\/Handler.html#process(envelope:Envelope):scala.concurrent.Future[akka.Done]", "kind" : "abstract def"}], "shortDescription" : "Implement this interface for the Envelope handler in the Projection."}, {"name" : "akka.projection.scaladsl.HandlerLifecycle", "trait" : "akka\/projection\/scaladsl\/HandlerLifecycle.html", "kind" : "trait", "members_trait" : [{"label" : "stop", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.stop", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#stop():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "start", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.start", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#start():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/HandlerLifecycle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "akka.projection.scaladsl.MergeableOffsetSourceProvider", "trait" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractCreationTime", "tail" : "(envelope: Envelope): Long", "member" : "akka.projection.scaladsl.SourceProvider.extractCreationTime", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#extractCreationTime(envelope:Envelope):Long", "kind" : "abstract def"}, {"label" : "extractOffset", "tail" : "(envelope: Envelope): Offset", "member" : "akka.projection.scaladsl.SourceProvider.extractOffset", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#extractOffset(envelope:Envelope):Offset", "kind" : "abstract def"}, {"label" : "source", "tail" : "(offset: () => Future[Option[Offset]]): Future[Source[Envelope, NotUsed]]", "member" : "akka.projection.scaladsl.SourceProvider.source", "link" : "akka\/projection\/scaladsl\/MergeableOffsetSourceProvider.html#source(offset:()=>scala.concurrent.Future[Option[Offset]]):scala.concurrent.Future[akka.stream.scaladsl.Source[Envelope,akka.NotUsed]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.scaladsl.ProjectionManagement", "shortDescription" : "", "object" : "akka\/projection\/scaladsl\/ProjectionManagement$.html", "members_class" : [{"label" : "resume", "tail" : "(projectionId: ProjectionId): Future[Done]", "member" : "akka.projection.scaladsl.ProjectionManagement.resume", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#resume(projectionId:akka.projection.ProjectionId):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "pause", "tail" : "(projectionId: ProjectionId): Future[Done]", "member" : "akka.projection.scaladsl.ProjectionManagement.pause", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#pause(projectionId:akka.projection.ProjectionId):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "isPaused", "tail" : "(projectionId: ProjectionId): Future[Boolean]", "member" : "akka.projection.scaladsl.ProjectionManagement.isPaused", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#isPaused(projectionId:akka.projection.ProjectionId):scala.concurrent.Future[Boolean]", "kind" : "def"}, {"label" : "clearOffset", "tail" : "(projectionId: ProjectionId): Future[Done]", "member" : "akka.projection.scaladsl.ProjectionManagement.clearOffset", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#clearOffset(projectionId:akka.projection.ProjectionId):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "updateOffset", "tail" : "(projectionId: ProjectionId, offset: Offset): Future[Done]", "member" : "akka.projection.scaladsl.ProjectionManagement.updateOffset", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#updateOffset[Offset](projectionId:akka.projection.ProjectionId,offset:Offset):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "getOffset", "tail" : "(projectionId: ProjectionId): Future[Option[Offset]]", "member" : "akka.projection.scaladsl.ProjectionManagement.getOffset", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#getOffset[Offset](projectionId:akka.projection.ProjectionId):scala.concurrent.Future[Option[Offset]]", "kind" : "def"}, {"member" : "akka.projection.scaladsl.ProjectionManagement#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/ProjectionManagement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "get", "tail" : "(system: ActorSystem[_]): ProjectionManagement", "member" : "akka.projection.scaladsl.ProjectionManagement.get", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#get(system:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.ProjectionManagement", "kind" : "def"}, {"label" : "createExtension", "tail" : "(system: ActorSystem[_]): ProjectionManagement", "member" : "akka.projection.scaladsl.ProjectionManagement.createExtension", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#createExtension(system:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.ProjectionManagement", "kind" : "def"}, {"label" : "id", "tail" : "(): ExtensionId[ProjectionManagement]", "member" : "akka.actor.typed.ExtensionId.id", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#id:akka.actor.typed.ExtensionId[T]", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "akka.actor.typed.ExtensionId.equals", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#equals(other:Any):Boolean", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "akka.actor.typed.ExtensionId.hashCode", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#hashCode():Int", "kind" : "final def"}, {"label" : "apply", "tail" : "(system: ActorSystem[_]): ProjectionManagement", "member" : "akka.actor.typed.ExtensionId.apply", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#apply(system:akka.actor.typed.ActorSystem[_]):T", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/ProjectionManagement$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/scaladsl\/ProjectionManagement.html", "kind" : "class"}, {"name" : "akka.projection.scaladsl.SourceProvider", "trait" : "akka\/projection\/scaladsl\/SourceProvider.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/SourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractCreationTime", "tail" : "(envelope: Envelope): Long", "member" : "akka.projection.scaladsl.SourceProvider.extractCreationTime", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#extractCreationTime(envelope:Envelope):Long", "kind" : "abstract def"}, {"label" : "extractOffset", "tail" : "(envelope: Envelope): Offset", "member" : "akka.projection.scaladsl.SourceProvider.extractOffset", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#extractOffset(envelope:Envelope):Offset", "kind" : "abstract def"}, {"label" : "source", "tail" : "(offset: () => Future[Option[Offset]]): Future[Source[Envelope, NotUsed]]", "member" : "akka.projection.scaladsl.SourceProvider.source", "link" : "akka\/projection\/scaladsl\/SourceProvider.html#source(offset:()=>scala.concurrent.Future[Option[Offset]]):scala.concurrent.Future[akka.stream.scaladsl.Source[Envelope,akka.NotUsed]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "akka.projection.scaladsl.StatefulHandler", "shortDescription" : "", "members_class" : [{"label" : "process", "tail" : "(envelope: Envelope): Future[Done]", "member" : "akka.projection.scaladsl.StatefulHandler.process", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#process(envelope:Envelope):scala.concurrent.Future[akka.Done]", "kind" : "final def"}, {"label" : "start", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.StatefulHandler.start", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#start():scala.concurrent.Future[akka.Done]", "kind" : "final def"}, {"member" : "akka.projection.scaladsl.StatefulHandler#<init>", "error" : "unsupported entity"}, {"label" : "stop", "tail" : "(): Future[Done]", "member" : "akka.projection.scaladsl.HandlerLifecycle.stop", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#stop():scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(state: State, envelope: Envelope): Future[State]", "member" : "akka.projection.scaladsl.StatefulHandler.process", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#process(state:State,envelope:Envelope):scala.concurrent.Future[State]", "kind" : "abstract def"}, {"label" : "initialState", "tail" : "(): Future[State]", "member" : "akka.projection.scaladsl.StatefulHandler.initialState", "link" : "akka\/projection\/scaladsl\/StatefulHandler.html#initialState():scala.concurrent.Future[State]", "kind" : "abstract def"}], "class" : "akka\/projection\/scaladsl\/StatefulHandler.html", "kind" : "class"}, {"name" : "akka.projection.scaladsl.VerifiableSourceProvider", "trait" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "verifyOffset", "tail" : "(offset: Offset): OffsetVerification", "member" : "akka.projection.scaladsl.VerifiableSourceProvider.verifyOffset", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#verifyOffset(offset:Offset):akka.projection.OffsetVerification", "kind" : "abstract def"}, {"label" : "extractCreationTime", "tail" : "(envelope: Envelope): Long", "member" : "akka.projection.scaladsl.SourceProvider.extractCreationTime", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#extractCreationTime(envelope:Envelope):Long", "kind" : "abstract def"}, {"label" : "extractOffset", "tail" : "(envelope: Envelope): Offset", "member" : "akka.projection.scaladsl.SourceProvider.extractOffset", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#extractOffset(envelope:Envelope):Offset", "kind" : "abstract def"}, {"label" : "source", "tail" : "(offset: () => Future[Option[Offset]]): Future[Source[Envelope, NotUsed]]", "member" : "akka.projection.scaladsl.SourceProvider.source", "link" : "akka\/projection\/scaladsl\/VerifiableSourceProvider.html#source(offset:()=>scala.concurrent.Future[Option[Offset]]):scala.concurrent.Future[akka.stream.scaladsl.Source[Envelope,akka.NotUsed]]", "kind" : "abstract def"}], "shortDescription" : ""}], "akka.projection" : [{"name" : "akka.projection.BySlicesSourceProvider", "trait" : "akka\/projection\/BySlicesSourceProvider.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/BySlicesSourceProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/BySlicesSourceProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/BySlicesSourceProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/BySlicesSourceProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/BySlicesSourceProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/BySlicesSourceProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/BySlicesSourceProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/BySlicesSourceProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/BySlicesSourceProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/BySlicesSourceProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/BySlicesSourceProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/BySlicesSourceProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/BySlicesSourceProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/BySlicesSourceProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/BySlicesSourceProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/BySlicesSourceProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/BySlicesSourceProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/BySlicesSourceProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/BySlicesSourceProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "maxSlice", "tail" : "(): Int", "member" : "akka.projection.BySlicesSourceProvider.maxSlice", "link" : "akka\/projection\/BySlicesSourceProvider.html#maxSlice:Int", "kind" : "abstract def"}, {"label" : "minSlice", "tail" : "(): Int", "member" : "akka.projection.BySlicesSourceProvider.minSlice", "link" : "akka\/projection\/BySlicesSourceProvider.html#minSlice:Int", "kind" : "abstract def"}], "shortDescription" : "Implemented by EventSourcedProvider and DurableStateSourceProvider."}, {"name" : "akka.projection.HandlerRecoveryStrategy", "object" : "akka\/projection\/HandlerRecoveryStrategy$.html", "members_object" : [{"label" : "retryAndSkip", "tail" : "(retries: Int, delay: Duration): HandlerRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.retryAndSkip", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#retryAndSkip(retries:Int,delay:java.time.Duration):akka.projection.HandlerRecoveryStrategy", "kind" : "def"}, {"label" : "retryAndSkip", "tail" : "(retries: Int, delay: FiniteDuration): HandlerRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.retryAndSkip", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#retryAndSkip(retries:Int,delay:scala.concurrent.duration.FiniteDuration):akka.projection.HandlerRecoveryStrategy", "kind" : "def"}, {"label" : "retryAndFail", "tail" : "(retries: Int, delay: Duration): HandlerRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.retryAndFail", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#retryAndFail(retries:Int,delay:java.time.Duration):akka.projection.HandlerRecoveryStrategy", "kind" : "def"}, {"label" : "retryAndFail", "tail" : "(retries: Int, delay: FiniteDuration): HandlerRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.retryAndFail", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#retryAndFail(retries:Int,delay:scala.concurrent.duration.FiniteDuration):akka.projection.HandlerRecoveryStrategy", "kind" : "def"}, {"label" : "skip", "tail" : "(): StrictRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.skip", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#skip:akka.projection.StrictRecoveryStrategy", "kind" : "def"}, {"label" : "fail", "tail" : "(): StrictRecoveryStrategy", "member" : "akka.projection.HandlerRecoveryStrategy.fail", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#fail:akka.projection.StrictRecoveryStrategy", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/HandlerRecoveryStrategy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/HandlerRecoveryStrategy.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/HandlerRecoveryStrategy.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/HandlerRecoveryStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Error handling strategy when processing an Envelope fails."}, {"name" : "akka.projection.MergeableOffset", "shortDescription" : "", "members_case class" : [{"member" : "akka.projection.MergeableOffset#<init>", "error" : "unsupported entity"}, {"label" : "entries", "tail" : ": Map[String, Offset]", "member" : "akka.projection.MergeableOffset.entries", "link" : "akka\/projection\/MergeableOffset.html#entries:Map[String,Offset]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "akka\/projection\/MergeableOffset.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/MergeableOffset.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/MergeableOffset.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/MergeableOffset.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/MergeableOffset.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/MergeableOffset.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/MergeableOffset.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/MergeableOffset.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/MergeableOffset.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/MergeableOffset.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/MergeableOffset.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/MergeableOffset.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/MergeableOffset.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/MergeableOffset.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/MergeableOffset.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/MergeableOffset.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/MergeableOffset.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "akka\/projection\/MergeableOffset.html", "kind" : "case class"}, {"name" : "akka.projection.OffsetVerification", "object" : "akka\/projection\/OffsetVerification$.html", "members_object" : [{"label" : "verificationFailure", "tail" : "(reason: String): OffsetVerification", "member" : "akka.projection.OffsetVerification.verificationFailure", "link" : "akka\/projection\/OffsetVerification$.html#verificationFailure(reason:String):akka.projection.OffsetVerification", "kind" : "def"}, {"label" : "VerificationFailure", "tail" : "", "member" : "akka.projection.OffsetVerification.VerificationFailure", "link" : "akka\/projection\/OffsetVerification$.html#VerificationFailure[Offset]extendsOffsetVerificationwithProductwithSerializable", "kind" : "final case class"}, {"label" : "verificationSuccess", "tail" : "(): OffsetVerification", "member" : "akka.projection.OffsetVerification.verificationSuccess", "link" : "akka\/projection\/OffsetVerification$.html#verificationSuccess:akka.projection.OffsetVerification", "kind" : "def"}, {"label" : "VerificationSuccess", "tail" : "", "member" : "akka.projection.OffsetVerification.VerificationSuccess", "link" : "akka\/projection\/OffsetVerification$.html#VerificationSuccess", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/OffsetVerification$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/OffsetVerification$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/OffsetVerification$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/OffsetVerification$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/OffsetVerification$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/OffsetVerification$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/OffsetVerification$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/OffsetVerification$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/OffsetVerification$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/OffsetVerification$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/OffsetVerification$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/OffsetVerification$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/OffsetVerification$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/OffsetVerification$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/OffsetVerification$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/OffsetVerification$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "akka\/projection\/OffsetVerification.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/OffsetVerification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/OffsetVerification.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/OffsetVerification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/OffsetVerification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/OffsetVerification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/OffsetVerification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/OffsetVerification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/OffsetVerification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/OffsetVerification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/OffsetVerification.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/OffsetVerification.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/OffsetVerification.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/OffsetVerification.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/OffsetVerification.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/OffsetVerification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/OffsetVerification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/OffsetVerification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "akka.projection.Projection", "trait" : "akka\/projection\/Projection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/Projection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/Projection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/Projection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/Projection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/Projection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/Projection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/Projection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/Projection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/Projection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/Projection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/Projection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/Projection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/Projection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/Projection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/Projection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/Projection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/Projection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/Projection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/Projection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withStatusObserver", "tail" : "(observer: StatusObserver[Envelope]): Projection[Envelope]", "member" : "akka.projection.Projection.withStatusObserver", "link" : "akka\/projection\/Projection.html#withStatusObserver(observer:akka.projection.StatusObserver[Envelope]):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "statusObserver", "tail" : "(): StatusObserver[Envelope]", "member" : "akka.projection.Projection.statusObserver", "link" : "akka\/projection\/Projection.html#statusObserver:akka.projection.StatusObserver[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/Projection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: Duration, maxBackoff: Duration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/Projection.html#withRestartBackoff(minBackoff:java.time.Duration,maxBackoff:java.time.Duration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double, maxRestarts: Int): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/Projection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double,maxRestarts:Int):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "withRestartBackoff", "tail" : "(minBackoff: FiniteDuration, maxBackoff: FiniteDuration, randomFactor: Double): Projection[Envelope]", "member" : "akka.projection.Projection.withRestartBackoff", "link" : "akka\/projection\/Projection.html#withRestartBackoff(minBackoff:scala.concurrent.duration.FiniteDuration,maxBackoff:scala.concurrent.duration.FiniteDuration,randomFactor:Double):akka.projection.Projection[Envelope]", "kind" : "abstract def"}, {"label" : "projectionId", "tail" : "(): ProjectionId", "member" : "akka.projection.Projection.projectionId", "link" : "akka\/projection\/Projection.html#projectionId:akka.projection.ProjectionId", "kind" : "abstract def"}], "shortDescription" : "The core abstraction in Akka Projections."}, {"name" : "akka.projection.ProjectionBehavior", "shortDescription" : "", "object" : "akka\/projection\/ProjectionBehavior$.html", "members_object" : [{"label" : "apply", "tail" : "(projection: Projection[Envelope]): Behavior[Command]", "member" : "akka.projection.ProjectionBehavior.apply", "link" : "akka\/projection\/ProjectionBehavior$.html#apply[Envelope](projection:akka.projection.Projection[Envelope]):akka.actor.typed.Behavior[akka.projection.ProjectionBehavior.Command]", "kind" : "def"}, {"label" : "stopMessage", "tail" : "(): Command", "member" : "akka.projection.ProjectionBehavior.stopMessage", "link" : "akka\/projection\/ProjectionBehavior$.html#stopMessage():akka.projection.ProjectionBehavior.Command", "kind" : "def"}, {"label" : "create", "tail" : "(projectionFactory: Projection[Envelope]): Behavior[Command]", "member" : "akka.projection.ProjectionBehavior.create", "link" : "akka\/projection\/ProjectionBehavior$.html#create[Envelope](projectionFactory:akka.projection.Projection[Envelope]):akka.actor.typed.Behavior[akka.projection.ProjectionBehavior.Command]", "kind" : "def"}, {"label" : "Stop", "tail" : "", "member" : "akka.projection.ProjectionBehavior.Stop", "link" : "akka\/projection\/ProjectionBehavior$.html#Stop", "kind" : "object"}, {"label" : "Command", "tail" : "", "member" : "akka.projection.ProjectionBehavior.Command", "link" : "akka\/projection\/ProjectionBehavior$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/ProjectionBehavior$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/ProjectionBehavior$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/ProjectionBehavior$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/ProjectionBehavior$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/ProjectionBehavior$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/ProjectionBehavior$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/ProjectionBehavior$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionBehavior$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionBehavior$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionBehavior$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/ProjectionBehavior$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/ProjectionBehavior$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/ProjectionBehavior$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/ProjectionBehavior$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/ProjectionBehavior$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/ProjectionBehavior$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/ProjectionBehavior$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/ProjectionBehavior$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/ProjectionBehavior$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "akka.projection.ProjectionContext", "trait" : "akka\/projection\/ProjectionContext.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/ProjectionContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/ProjectionContext.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/ProjectionContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/ProjectionContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/ProjectionContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/ProjectionContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/ProjectionContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/ProjectionContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/ProjectionContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/ProjectionContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/ProjectionContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/ProjectionContext.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/ProjectionContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/ProjectionContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/ProjectionContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/ProjectionContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "akka.projection.ProjectionId", "shortDescription" : "", "object" : "akka\/projection\/ProjectionId$.html", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "akka.projection.ProjectionId.hashCode", "link" : "akka\/projection\/ProjectionId.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "akka.projection.ProjectionId.equals", "link" : "akka\/projection\/ProjectionId.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "akka.projection.ProjectionId.toString", "link" : "akka\/projection\/ProjectionId.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "akka.projection.ProjectionId.id", "link" : "akka\/projection\/ProjectionId.html#id:String", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "akka.projection.ProjectionId.key", "link" : "akka\/projection\/ProjectionId.html#key:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "akka.projection.ProjectionId.name", "link" : "akka\/projection\/ProjectionId.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/ProjectionId.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/ProjectionId.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/ProjectionId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/ProjectionId.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/ProjectionId.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/ProjectionId.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/ProjectionId.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/ProjectionId.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/ProjectionId.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/ProjectionId.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/ProjectionId.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/ProjectionId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/ProjectionId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "of", "tail" : "(name: String, keys: Set[String]): Set[ProjectionId]", "member" : "akka.projection.ProjectionId.of", "link" : "akka\/projection\/ProjectionId$.html#of(name:String,keys:java.util.Set[String]):java.util.Set[akka.projection.ProjectionId]", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, keys: Set[String]): Set[ProjectionId]", "member" : "akka.projection.ProjectionId.apply", "link" : "akka\/projection\/ProjectionId$.html#apply(name:String,keys:scala.collection.immutable.Set[String]):scala.collection.immutable.Set[akka.projection.ProjectionId]", "kind" : "def"}, {"label" : "of", "tail" : "(name: String, key: String): ProjectionId", "member" : "akka.projection.ProjectionId.of", "link" : "akka\/projection\/ProjectionId$.html#of(name:String,key:String):akka.projection.ProjectionId", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String, key: String): ProjectionId", "member" : "akka.projection.ProjectionId.apply", "link" : "akka\/projection\/ProjectionId$.html#apply(name:String,key:String):akka.projection.ProjectionId", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/ProjectionId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/ProjectionId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/ProjectionId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/ProjectionId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/ProjectionId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/ProjectionId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/ProjectionId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/ProjectionId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/ProjectionId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/ProjectionId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/ProjectionId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/ProjectionId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/ProjectionId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/ProjectionId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/ProjectionId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/ProjectionId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/ProjectionId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/ProjectionId.html", "kind" : "class"}, {"name" : "akka.projection.RetryRecoveryStrategy", "trait" : "akka\/projection\/RetryRecoveryStrategy.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/RetryRecoveryStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/RetryRecoveryStrategy.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/RetryRecoveryStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/RetryRecoveryStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/RetryRecoveryStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/RetryRecoveryStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/RetryRecoveryStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/RetryRecoveryStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/RetryRecoveryStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/RetryRecoveryStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/RetryRecoveryStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/RetryRecoveryStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/RetryRecoveryStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/RetryRecoveryStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/RetryRecoveryStrategy.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/RetryRecoveryStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/RetryRecoveryStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/RetryRecoveryStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/RetryRecoveryStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "akka.projection.StatusObserver", "shortDescription" : "Track status of a projection by implementing a StatusObserver and install it usingProjection.withStatusObserver.", "members_class" : [{"member" : "akka.projection.StatusObserver#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/StatusObserver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/StatusObserver.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/StatusObserver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/StatusObserver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/StatusObserver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/StatusObserver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/StatusObserver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StatusObserver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StatusObserver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StatusObserver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/StatusObserver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/StatusObserver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/StatusObserver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/StatusObserver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/StatusObserver.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/StatusObserver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/StatusObserver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/StatusObserver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/StatusObserver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "error", "tail" : "(projectionId: ProjectionId, env: Envelope, cause: Throwable, recoveryStrategy: HandlerRecoveryStrategy): Unit", "member" : "akka.projection.StatusObserver.error", "link" : "akka\/projection\/StatusObserver.html#error(projectionId:akka.projection.ProjectionId,env:Envelope,cause:Throwable,recoveryStrategy:akka.projection.HandlerRecoveryStrategy):Unit", "kind" : "abstract def"}, {"label" : "offsetProgress", "tail" : "(projectionId: ProjectionId, env: Envelope): Unit", "member" : "akka.projection.StatusObserver.offsetProgress", "link" : "akka\/projection\/StatusObserver.html#offsetProgress(projectionId:akka.projection.ProjectionId,env:Envelope):Unit", "kind" : "abstract def"}, {"label" : "afterProcess", "tail" : "(projectionId: ProjectionId, envelope: Envelope): Unit", "member" : "akka.projection.StatusObserver.afterProcess", "link" : "akka\/projection\/StatusObserver.html#afterProcess(projectionId:akka.projection.ProjectionId,envelope:Envelope):Unit", "kind" : "abstract def"}, {"label" : "beforeProcess", "tail" : "(projectionId: ProjectionId, envelope: Envelope): Unit", "member" : "akka.projection.StatusObserver.beforeProcess", "link" : "akka\/projection\/StatusObserver.html#beforeProcess(projectionId:akka.projection.ProjectionId,envelope:Envelope):Unit", "kind" : "abstract def"}, {"label" : "stopped", "tail" : "(projectionId: ProjectionId): Unit", "member" : "akka.projection.StatusObserver.stopped", "link" : "akka\/projection\/StatusObserver.html#stopped(projectionId:akka.projection.ProjectionId):Unit", "kind" : "abstract def"}, {"label" : "failed", "tail" : "(projectionId: ProjectionId, cause: Throwable): Unit", "member" : "akka.projection.StatusObserver.failed", "link" : "akka\/projection\/StatusObserver.html#failed(projectionId:akka.projection.ProjectionId,cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "started", "tail" : "(projectionId: ProjectionId): Unit", "member" : "akka.projection.StatusObserver.started", "link" : "akka\/projection\/StatusObserver.html#started(projectionId:akka.projection.ProjectionId):Unit", "kind" : "abstract def"}], "class" : "akka\/projection\/StatusObserver.html", "kind" : "class"}, {"name" : "akka.projection.StrictRecoveryStrategy", "trait" : "akka\/projection\/StrictRecoveryStrategy.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/StrictRecoveryStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/StrictRecoveryStrategy.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/StrictRecoveryStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/StrictRecoveryStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/StrictRecoveryStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/StrictRecoveryStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/StrictRecoveryStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StrictRecoveryStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StrictRecoveryStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/StrictRecoveryStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/StrictRecoveryStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/StrictRecoveryStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/StrictRecoveryStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/StrictRecoveryStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/StrictRecoveryStrategy.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/StrictRecoveryStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/StrictRecoveryStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/StrictRecoveryStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/StrictRecoveryStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "akka.projection.internal.protobuf" : [{"name" : "akka.projection.internal.protobuf.ProjectionMessages", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "akka\/projection\/internal\/protobuf\/ProjectionMessages.html", "kind" : "class"}], "akka.projection.internal" : [{"name" : "akka.projection.internal.Telemetry", "trait" : "akka\/projection\/internal\/Telemetry.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/internal\/Telemetry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/internal\/Telemetry.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/internal\/Telemetry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/internal\/Telemetry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/internal\/Telemetry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/internal\/Telemetry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/internal\/Telemetry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/Telemetry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/Telemetry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/internal\/Telemetry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/internal\/Telemetry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/internal\/Telemetry.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/internal\/Telemetry.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/internal\/Telemetry.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/internal\/Telemetry.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/internal\/Telemetry.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/internal\/Telemetry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/internal\/Telemetry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/internal\/Telemetry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "error", "tail" : "(cause: Throwable): Unit", "member" : "akka.projection.internal.Telemetry.error", "link" : "akka\/projection\/internal\/Telemetry.html#error(cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "onOffsetStored", "tail" : "(numberOfEnvelopes: Int): Unit", "member" : "akka.projection.internal.Telemetry.onOffsetStored", "link" : "akka\/projection\/internal\/Telemetry.html#onOffsetStored(numberOfEnvelopes:Int):Unit", "kind" : "abstract def"}, {"label" : "afterProcess", "tail" : "(externalContext: AnyRef): Unit", "member" : "akka.projection.internal.Telemetry.afterProcess", "link" : "akka\/projection\/internal\/Telemetry.html#afterProcess(externalContext:AnyRef):Unit", "kind" : "abstract def"}, {"label" : "beforeProcess", "tail" : "(envelope: Envelope, creationTimeInMillis: Long): AnyRef", "member" : "akka.projection.internal.Telemetry.beforeProcess", "link" : "akka\/projection\/internal\/Telemetry.html#beforeProcess[Envelope](envelope:Envelope,creationTimeInMillis:Long):AnyRef", "kind" : "abstract def"}, {"label" : "failed", "tail" : "(cause: Throwable): Unit", "member" : "akka.projection.internal.Telemetry.failed", "link" : "akka\/projection\/internal\/Telemetry.html#failed(cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "stopped", "tail" : "(): Unit", "member" : "akka.projection.internal.Telemetry.stopped", "link" : "akka\/projection\/internal\/Telemetry.html#stopped():Unit", "kind" : "abstract def"}], "shortDescription" : "Service Provider Interface (SPI) for collecting metrics from projections."}], "akka.projection.state.scaladsl" : [{"name" : "akka.projection.state.scaladsl.DurableStateSourceProvider", "shortDescription" : "API may change", "object" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html", "members_object" : [{"label" : "sliceRanges", "tail" : "(system: ActorSystem[_], durableStateStoreQueryPluginId: String, numberOfRanges: Int): Seq[Range]", "member" : "akka.projection.state.scaladsl.DurableStateSourceProvider.sliceRanges", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#sliceRanges(system:akka.actor.typed.ActorSystem[_],durableStateStoreQueryPluginId:String,numberOfRanges:Int):Seq[Range]", "kind" : "def"}, {"label" : "sliceForPersistenceId", "tail" : "(system: ActorSystem[_], durableStateStoreQueryPluginId: String, persistenceId: String): Int", "member" : "akka.projection.state.scaladsl.DurableStateSourceProvider.sliceForPersistenceId", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#sliceForPersistenceId(system:akka.actor.typed.ActorSystem[_],durableStateStoreQueryPluginId:String,persistenceId:String):Int", "kind" : "def"}, {"label" : "changesBySlices", "tail" : "(system: ActorSystem[_], durableStateStoreQuery: DurableStateStoreBySliceQuery[A], entityType: String, minSlice: Int, maxSlice: Int): SourceProvider[Offset, DurableStateChange[A]]", "member" : "akka.projection.state.scaladsl.DurableStateSourceProvider.changesBySlices", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#changesBySlices[A](system:akka.actor.typed.ActorSystem[_],durableStateStoreQuery:akka.persistence.query.typed.scaladsl.DurableStateStoreBySliceQuery[A],entityType:String,minSlice:Int,maxSlice:Int):akka.projection.scaladsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.DurableStateChange[A]]", "kind" : "def"}, {"label" : "changesBySlices", "tail" : "(system: ActorSystem[_], durableStateStoreQueryPluginId: String, entityType: String, minSlice: Int, maxSlice: Int): SourceProvider[Offset, DurableStateChange[A]]", "member" : "akka.projection.state.scaladsl.DurableStateSourceProvider.changesBySlices", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#changesBySlices[A](system:akka.actor.typed.ActorSystem[_],durableStateStoreQueryPluginId:String,entityType:String,minSlice:Int,maxSlice:Int):akka.projection.scaladsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.DurableStateChange[A]]", "kind" : "def"}, {"label" : "changesByTag", "tail" : "(system: ActorSystem[_], durableStateStoreQuery: DurableStateStoreQuery[A], tag: String): SourceProvider[Offset, DurableStateChange[A]]", "member" : "akka.projection.state.scaladsl.DurableStateSourceProvider.changesByTag", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#changesByTag[A](system:akka.actor.typed.ActorSystem[_],durableStateStoreQuery:akka.persistence.query.scaladsl.DurableStateStoreQuery[A],tag:String):akka.projection.scaladsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.DurableStateChange[A]]", "kind" : "def"}, {"label" : "changesByTag", "tail" : "(system: ActorSystem[_], pluginId: String, tag: String): SourceProvider[Offset, DurableStateChange[A]]", "member" : "akka.projection.state.scaladsl.DurableStateSourceProvider.changesByTag", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#changesByTag[A](system:akka.actor.typed.ActorSystem[_],pluginId:String,tag:String):akka.projection.scaladsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.DurableStateChange[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/state\/scaladsl\/DurableStateSourceProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.eventsourced.scaladsl" : [{"name" : "akka.projection.eventsourced.scaladsl.EventSourcedProvider", "shortDescription" : "", "object" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html", "members_object" : [{"label" : "sliceRanges", "tail" : "(system: ActorSystem[_], readJournalPluginId: String, numberOfRanges: Int): Seq[Range]", "member" : "akka.projection.eventsourced.scaladsl.EventSourcedProvider.sliceRanges", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#sliceRanges(system:akka.actor.typed.ActorSystem[_],readJournalPluginId:String,numberOfRanges:Int):Seq[Range]", "kind" : "def"}, {"label" : "sliceForPersistenceId", "tail" : "(system: ActorSystem[_], readJournalPluginId: String, persistenceId: String): Int", "member" : "akka.projection.eventsourced.scaladsl.EventSourcedProvider.sliceForPersistenceId", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#sliceForPersistenceId(system:akka.actor.typed.ActorSystem[_],readJournalPluginId:String,persistenceId:String):Int", "kind" : "def"}, {"label" : "eventsBySlices", "tail" : "(system: ActorSystem[_], eventsBySlicesQuery: EventsBySliceQuery, entityType: String, minSlice: Int, maxSlice: Int): SourceProvider[Offset, persistence.query.typed.EventEnvelope[Event]]", "member" : "akka.projection.eventsourced.scaladsl.EventSourcedProvider.eventsBySlices", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#eventsBySlices[Event](system:akka.actor.typed.ActorSystem[_],eventsBySlicesQuery:akka.persistence.query.typed.scaladsl.EventsBySliceQuery,entityType:String,minSlice:Int,maxSlice:Int):akka.projection.scaladsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.typed.EventEnvelope[Event]]", "kind" : "def"}, {"label" : "eventsBySlices", "tail" : "(system: ActorSystem[_], readJournalPluginId: String, entityType: String, minSlice: Int, maxSlice: Int): SourceProvider[Offset, persistence.query.typed.EventEnvelope[Event]]", "member" : "akka.projection.eventsourced.scaladsl.EventSourcedProvider.eventsBySlices", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#eventsBySlices[Event](system:akka.actor.typed.ActorSystem[_],readJournalPluginId:String,entityType:String,minSlice:Int,maxSlice:Int):akka.projection.scaladsl.SourceProvider[akka.persistence.query.Offset,akka.persistence.query.typed.EventEnvelope[Event]]", "kind" : "def"}, {"label" : "eventsByTag", "tail" : "(system: ActorSystem[_], eventsByTagQuery: EventsByTagQuery, tag: String): SourceProvider[Offset, EventEnvelope[Event]]", "member" : "akka.projection.eventsourced.scaladsl.EventSourcedProvider.eventsByTag", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#eventsByTag[Event](system:akka.actor.typed.ActorSystem[_],eventsByTagQuery:akka.persistence.query.scaladsl.EventsByTagQuery,tag:String):akka.projection.scaladsl.SourceProvider[akka.persistence.query.Offset,akka.projection.eventsourced.EventEnvelope[Event]]", "kind" : "def"}, {"label" : "eventsByTag", "tail" : "(system: ActorSystem[_], readJournalPluginId: String, tag: String): SourceProvider[Offset, EventEnvelope[Event]]", "member" : "akka.projection.eventsourced.scaladsl.EventSourcedProvider.eventsByTag", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#eventsByTag[Event](system:akka.actor.typed.ActorSystem[_],readJournalPluginId:String,tag:String):akka.projection.scaladsl.SourceProvider[akka.persistence.query.Offset,akka.projection.eventsourced.EventEnvelope[Event]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/eventsourced\/scaladsl\/EventSourcedProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "akka.projection.cassandra.scaladsl" : [{"name" : "akka.projection.cassandra.scaladsl.CassandraProjection", "shortDescription" : "Factories of akka.projection.Projection where the offset is stored in Cassandra.", "object" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html", "members_object" : [{"label" : "createOffsetTableIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.createOffsetTableIfNotExists", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#createOffsetTableIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "createTablesIfNotExists", "tail" : "()(system: ActorSystem[_]): Future[Done]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.createTablesIfNotExists", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#createTablesIfNotExists()(implicitsystem:akka.actor.typed.ActorSystem[_]):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "atMostOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: () => Handler[Envelope]): AtMostOnceProjection[Offset, Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.atMostOnce", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#atMostOnce[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],handler:()=>akka.projection.scaladsl.Handler[Envelope]):akka.projection.scaladsl.AtMostOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "atLeastOnceFlow", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: FlowWithContext[Envelope, ProjectionContext, Done, ProjectionContext, _]): AtLeastOnceFlowProjection[Offset, Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.atLeastOnceFlow", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#atLeastOnceFlow[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],handler:akka.stream.scaladsl.FlowWithContext[Envelope,akka.projection.ProjectionContext,akka.Done,akka.projection.ProjectionContext,_]):akka.projection.scaladsl.AtLeastOnceFlowProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: () => Handler[Seq[Envelope]]): GroupedProjection[Offset, Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.groupedWithin", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#groupedWithin[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],handler:()=>akka.projection.scaladsl.Handler[Seq[Envelope]]):akka.projection.scaladsl.GroupedProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "atLeastOnce", "tail" : "(projectionId: ProjectionId, sourceProvider: SourceProvider[Offset, Envelope], handler: () => Handler[Envelope]): AtLeastOnceProjection[Offset, Envelope]", "member" : "akka.projection.cassandra.scaladsl.CassandraProjection.atLeastOnce", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#atLeastOnce[Offset,Envelope](projectionId:akka.projection.ProjectionId,sourceProvider:akka.projection.scaladsl.SourceProvider[Offset,Envelope],handler:()=>akka.projection.scaladsl.Handler[Envelope]):akka.projection.scaladsl.AtLeastOnceProjection[Offset,Envelope]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/projection\/cassandra\/scaladsl\/CassandraProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};